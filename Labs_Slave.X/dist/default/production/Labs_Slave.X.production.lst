

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Fri Feb 21 18:02:33 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	text5,local,class=CODE,merge=1,delta=2
    13                           	psect	text6,local,class=CODE,merge=1,delta=2
    14                           	psect	text7,local,class=CODE,merge=1,delta=2
    15                           	dabs	1,0x7E,2
    16  0000                     
    17                           ; Version 2.10
    18                           ; Generated 31/07/2019 GMT
    19                           ; 
    20                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC16F887 Definitions
    49                           ; 
    50                           ; SFR Addresses
    51  0000                     	;# 
    52  0001                     	;# 
    53  0002                     	;# 
    54  0003                     	;# 
    55  0004                     	;# 
    56  0005                     	;# 
    57  0006                     	;# 
    58  0007                     	;# 
    59  0008                     	;# 
    60  0009                     	;# 
    61  000A                     	;# 
    62  000B                     	;# 
    63  000C                     	;# 
    64  000D                     	;# 
    65  000E                     	;# 
    66  000E                     	;# 
    67  000F                     	;# 
    68  0010                     	;# 
    69  0011                     	;# 
    70  0012                     	;# 
    71  0013                     	;# 
    72  0014                     	;# 
    73  0015                     	;# 
    74  0015                     	;# 
    75  0016                     	;# 
    76  0017                     	;# 
    77  0018                     	;# 
    78  0019                     	;# 
    79  001A                     	;# 
    80  001B                     	;# 
    81  001B                     	;# 
    82  001C                     	;# 
    83  001D                     	;# 
    84  001E                     	;# 
    85  001F                     	;# 
    86  0081                     	;# 
    87  0085                     	;# 
    88  0086                     	;# 
    89  0087                     	;# 
    90  0088                     	;# 
    91  0089                     	;# 
    92  008C                     	;# 
    93  008D                     	;# 
    94  008E                     	;# 
    95  008F                     	;# 
    96  0090                     	;# 
    97  0091                     	;# 
    98  0092                     	;# 
    99  0093                     	;# 
   100  0093                     	;# 
   101  0093                     	;# 
   102  0094                     	;# 
   103  0095                     	;# 
   104  0096                     	;# 
   105  0097                     	;# 
   106  0098                     	;# 
   107  0099                     	;# 
   108  009A                     	;# 
   109  009B                     	;# 
   110  009C                     	;# 
   111  009D                     	;# 
   112  009E                     	;# 
   113  009F                     	;# 
   114  0105                     	;# 
   115  0107                     	;# 
   116  0108                     	;# 
   117  0109                     	;# 
   118  010C                     	;# 
   119  010C                     	;# 
   120  010D                     	;# 
   121  010E                     	;# 
   122  010F                     	;# 
   123  0185                     	;# 
   124  0187                     	;# 
   125  0188                     	;# 
   126  0189                     	;# 
   127  018C                     	;# 
   128  018D                     	;# 
   129  0000                     	;# 
   130  0001                     	;# 
   131  0002                     	;# 
   132  0003                     	;# 
   133  0004                     	;# 
   134  0005                     	;# 
   135  0006                     	;# 
   136  0007                     	;# 
   137  0008                     	;# 
   138  0009                     	;# 
   139  000A                     	;# 
   140  000B                     	;# 
   141  000C                     	;# 
   142  000D                     	;# 
   143  000E                     	;# 
   144  000E                     	;# 
   145  000F                     	;# 
   146  0010                     	;# 
   147  0011                     	;# 
   148  0012                     	;# 
   149  0013                     	;# 
   150  0014                     	;# 
   151  0015                     	;# 
   152  0015                     	;# 
   153  0016                     	;# 
   154  0017                     	;# 
   155  0018                     	;# 
   156  0019                     	;# 
   157  001A                     	;# 
   158  001B                     	;# 
   159  001B                     	;# 
   160  001C                     	;# 
   161  001D                     	;# 
   162  001E                     	;# 
   163  001F                     	;# 
   164  0081                     	;# 
   165  0085                     	;# 
   166  0086                     	;# 
   167  0087                     	;# 
   168  0088                     	;# 
   169  0089                     	;# 
   170  008C                     	;# 
   171  008D                     	;# 
   172  008E                     	;# 
   173  008F                     	;# 
   174  0090                     	;# 
   175  0091                     	;# 
   176  0092                     	;# 
   177  0093                     	;# 
   178  0093                     	;# 
   179  0093                     	;# 
   180  0094                     	;# 
   181  0095                     	;# 
   182  0096                     	;# 
   183  0097                     	;# 
   184  0098                     	;# 
   185  0099                     	;# 
   186  009A                     	;# 
   187  009B                     	;# 
   188  009C                     	;# 
   189  009D                     	;# 
   190  009E                     	;# 
   191  009F                     	;# 
   192  0105                     	;# 
   193  0107                     	;# 
   194  0108                     	;# 
   195  0109                     	;# 
   196  010C                     	;# 
   197  010C                     	;# 
   198  010D                     	;# 
   199  010E                     	;# 
   200  010F                     	;# 
   201  0185                     	;# 
   202  0187                     	;# 
   203  0188                     	;# 
   204  0189                     	;# 
   205  018C                     	;# 
   206  018D                     	;# 
   207  0000                     	;# 
   208  0001                     	;# 
   209  0002                     	;# 
   210  0003                     	;# 
   211  0004                     	;# 
   212  0005                     	;# 
   213  0006                     	;# 
   214  0007                     	;# 
   215  0008                     	;# 
   216  0009                     	;# 
   217  000A                     	;# 
   218  000B                     	;# 
   219  000C                     	;# 
   220  000D                     	;# 
   221  000E                     	;# 
   222  000E                     	;# 
   223  000F                     	;# 
   224  0010                     	;# 
   225  0011                     	;# 
   226  0012                     	;# 
   227  0013                     	;# 
   228  0014                     	;# 
   229  0015                     	;# 
   230  0015                     	;# 
   231  0016                     	;# 
   232  0017                     	;# 
   233  0018                     	;# 
   234  0019                     	;# 
   235  001A                     	;# 
   236  001B                     	;# 
   237  001B                     	;# 
   238  001C                     	;# 
   239  001D                     	;# 
   240  001E                     	;# 
   241  001F                     	;# 
   242  0081                     	;# 
   243  0085                     	;# 
   244  0086                     	;# 
   245  0087                     	;# 
   246  0088                     	;# 
   247  0089                     	;# 
   248  008C                     	;# 
   249  008D                     	;# 
   250  008E                     	;# 
   251  008F                     	;# 
   252  0090                     	;# 
   253  0091                     	;# 
   254  0092                     	;# 
   255  0093                     	;# 
   256  0093                     	;# 
   257  0093                     	;# 
   258  0094                     	;# 
   259  0095                     	;# 
   260  0096                     	;# 
   261  0097                     	;# 
   262  0098                     	;# 
   263  0099                     	;# 
   264  009A                     	;# 
   265  009B                     	;# 
   266  009C                     	;# 
   267  009D                     	;# 
   268  009E                     	;# 
   269  009F                     	;# 
   270  0105                     	;# 
   271  0107                     	;# 
   272  0108                     	;# 
   273  0109                     	;# 
   274  010C                     	;# 
   275  010C                     	;# 
   276  010D                     	;# 
   277  010E                     	;# 
   278  010F                     	;# 
   279  0185                     	;# 
   280  0187                     	;# 
   281  0188                     	;# 
   282  0189                     	;# 
   283  018C                     	;# 
   284  018D                     	;# 
   285  0000                     	;# 
   286  0001                     	;# 
   287  0002                     	;# 
   288  0003                     	;# 
   289  0004                     	;# 
   290  0005                     	;# 
   291  0006                     	;# 
   292  0007                     	;# 
   293  0008                     	;# 
   294  0009                     	;# 
   295  000A                     	;# 
   296  000B                     	;# 
   297  000C                     	;# 
   298  000D                     	;# 
   299  000E                     	;# 
   300  000E                     	;# 
   301  000F                     	;# 
   302  0010                     	;# 
   303  0011                     	;# 
   304  0012                     	;# 
   305  0013                     	;# 
   306  0014                     	;# 
   307  0015                     	;# 
   308  0015                     	;# 
   309  0016                     	;# 
   310  0017                     	;# 
   311  0018                     	;# 
   312  0019                     	;# 
   313  001A                     	;# 
   314  001B                     	;# 
   315  001B                     	;# 
   316  001C                     	;# 
   317  001D                     	;# 
   318  001E                     	;# 
   319  001F                     	;# 
   320  0081                     	;# 
   321  0085                     	;# 
   322  0086                     	;# 
   323  0087                     	;# 
   324  0088                     	;# 
   325  0089                     	;# 
   326  008C                     	;# 
   327  008D                     	;# 
   328  008E                     	;# 
   329  008F                     	;# 
   330  0090                     	;# 
   331  0091                     	;# 
   332  0092                     	;# 
   333  0093                     	;# 
   334  0093                     	;# 
   335  0093                     	;# 
   336  0094                     	;# 
   337  0095                     	;# 
   338  0096                     	;# 
   339  0097                     	;# 
   340  0098                     	;# 
   341  0099                     	;# 
   342  009A                     	;# 
   343  009B                     	;# 
   344  009C                     	;# 
   345  009D                     	;# 
   346  009E                     	;# 
   347  009F                     	;# 
   348  0105                     	;# 
   349  0107                     	;# 
   350  0108                     	;# 
   351  0109                     	;# 
   352  010C                     	;# 
   353  010C                     	;# 
   354  010D                     	;# 
   355  010E                     	;# 
   356  010F                     	;# 
   357  0185                     	;# 
   358  0187                     	;# 
   359  0188                     	;# 
   360  0189                     	;# 
   361  018C                     	;# 
   362  018D                     	;# 
   363  0013                     _SSPBUF	set	19
   364  0014                     _SSPCON	set	20
   365  001E                     _ADRESH	set	30
   366  000C                     _PIR1bits	set	12
   367  0008                     _PORTD	set	8
   368  0007                     _PORTC	set	7
   369  0006                     _PORTB	set	6
   370  0005                     _PORTA	set	5
   371  001F                     _ADCON0bits	set	31
   372  008F                     _OSCCONbits	set	143
   373  0094                     _SSPSTATbits	set	148
   374  0094                     _SSPSTAT	set	148
   375  009F                     _ADCON1bits	set	159
   376  0085                     _TRISAbits	set	133
   377  0088                     _TRISD	set	136
   378  0087                     _TRISC	set	135
   379  0086                     _TRISB	set	134
   380  0085                     _TRISA	set	133
   381  043B                     _TRISC3	set	1083
   382  043C                     _TRISC4	set	1084
   383  043D                     _TRISC5	set	1085
   384  0189                     _ANSELH	set	393
   385  0188                     _ANSEL	set	392
   386                           
   387                           ; #config settings
   388  0000                     
   389                           	psect	cinit
   390  07FA                     start_initialization:	
   391  07FA                     __initialization:	
   392                           
   393                           ; Clear objects allocated to COMMON
   394  07FA  01F4               	clrf	__pbssCOMMON& (0+127)
   395  07FB  01F5               	clrf	(__pbssCOMMON+1)& (0+127)
   396  07FC                     end_of_initialization:	
   397                           ;End of C runtime variable initialization code
   398                           
   399  07FC                     __end_of__initialization:	
   400  07FC  0183               	clrf	3
   401  07FD  120A  118A  2EE6   	ljmp	_main	;jump to C main() function
   402                           
   403                           	psect	bssCOMMON
   404  0074                     __pbssCOMMON:	
   405  0074                     _adc2:	
   406  0074                     	ds	1
   407  0075                     _adc:	
   408  0075                     	ds	1
   409                           
   410                           	psect	cstackCOMMON
   411  0070                     __pcstackCOMMON:	
   412  0070                     ?_setup:	
   413  0070                     ?_initOsc:	
   414                           ; 1 bytes @ 0x0
   415                           
   416  0070                     ??_initOsc:	
   417                           ; 1 bytes @ 0x0
   418                           
   419  0070                     ?_ADC:	
   420                           ; 1 bytes @ 0x0
   421                           
   422  0070                     ?_spiInit:	
   423                           ; 1 bytes @ 0x0
   424                           
   425  0070                     ?_spiRead:	
   426                           ; 1 bytes @ 0x0
   427                           
   428  0070                     ??_spiRead:	
   429                           ; 1 bytes @ 0x0
   430                           
   431  0070                     ?_spiWrite:	
   432                           ; 1 bytes @ 0x0
   433                           
   434  0070                     ??_spiWrite:	
   435                           ; 1 bytes @ 0x0
   436                           
   437  0070                     ?_main:	
   438                           ; 1 bytes @ 0x0
   439                           
   440  0070                     ?_spiReceiveWait:	
   441                           ; 1 bytes @ 0x0
   442                           
   443  0070                     ??_spiReceiveWait:	
   444                           ; 1 bytes @ 0x0
   445                           
   446  0070                     spiInit@sDataSample:	
   447                           ; 1 bytes @ 0x0
   448                           
   449  0070                     spiWrite@dat:	
   450                           ; 1 bytes @ 0x0
   451                           
   452                           
   453                           ; 1 bytes @ 0x0
   454  0070                     	ds	1
   455  0071                     ??_ADC:	
   456  0071                     spiInit@sClockIdle:	
   457                           ; 1 bytes @ 0x1
   458                           
   459                           
   460                           ; 1 bytes @ 0x1
   461  0071                     	ds	1
   462  0072                     spiInit@sTransmitEdge:	
   463  0072                     initOsc@frec:	
   464                           ; 1 bytes @ 0x2
   465                           
   466                           
   467                           ; 1 bytes @ 0x2
   468  0072                     	ds	1
   469  0073                     ??_spiInit:	
   470  0073                     spiInit@sType:	
   471                           ; 1 bytes @ 0x3
   472                           
   473                           
   474                           ; 1 bytes @ 0x3
   475  0073                     	ds	1
   476  0074                     ??_setup:	
   477  0074                     ??_main:	
   478                           ; 1 bytes @ 0x4
   479                           
   480                           
   481                           	psect	maintext
   482  06E6                     __pmaintext:	
   483                           ; 1 bytes @ 0x4
   484 ;;
   485 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   486 ;;
   487 ;; *************** function _main *****************
   488 ;; Defined at:
   489 ;;		line 61 in file "LAB4.c"
   490 ;; Parameters:    Size  Location     Type
   491 ;;		None
   492 ;; Auto vars:     Size  Location     Type
   493 ;;		None
   494 ;; Return value:  Size  Location     Type
   495 ;;                  1    wreg      void 
   496 ;; Registers used:
   497 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   498 ;; Tracked objects:
   499 ;;		On entry : B00/0
   500 ;;		On exit  : 0/0
   501 ;;		Unchanged: 0/0
   502 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   503 ;;      Params:         0       0       0       0       0
   504 ;;      Locals:         0       0       0       0       0
   505 ;;      Temps:          0       0       0       0       0
   506 ;;      Totals:         0       0       0       0       0
   507 ;;Total ram usage:        0 bytes
   508 ;; Hardware stack levels required when called:    3
   509 ;; This function calls:
   510 ;;		_ADC
   511 ;;		_initOsc
   512 ;;		_setup
   513 ;; This function is called by:
   514 ;;		Startup code after reset
   515 ;; This function uses a non-reentrant model
   516 ;;
   517                           
   518                           
   519                           ;psect for function _main
   520  06E6                     _main:	
   521  06E6                     l854:	
   522                           ;incstack = 0
   523                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   524                           
   525                           
   526                           ;LAB4.c: 62:     setup();
   527  06E6  120A  118A  2710  120A  118A  	fcall	_setup
   528  06EB                     l856:	
   529                           
   530                           ;LAB4.c: 63:     initOsc(7);
   531  06EB  3007               	movlw	7
   532  06EC  120A  118A  272A  120A  118A  	fcall	_initOsc
   533  06F1                     l858:	
   534                           
   535                           ;LAB4.c: 64:     ADC();
   536  06F1  120A  118A  2786  120A  118A  	fcall	_ADC
   537  06F6                     l53:	
   538  06F6  120A  118A  2800   	ljmp	start
   539  06F9                     __end_of_main:	
   540                           
   541                           	psect	text1
   542  0710                     __ptext1:	
   543 ;; *************** function _setup *****************
   544 ;; Defined at:
   545 ;;		line 68 in file "LAB4.c"
   546 ;; Parameters:    Size  Location     Type
   547 ;;		None
   548 ;; Auto vars:     Size  Location     Type
   549 ;;		None
   550 ;; Return value:  Size  Location     Type
   551 ;;                  1    wreg      void 
   552 ;; Registers used:
   553 ;;		wreg, status,2, status,0, pclath, cstack
   554 ;; Tracked objects:
   555 ;;		On entry : 0/0
   556 ;;		On exit  : 0/0
   557 ;;		Unchanged: 0/0
   558 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   559 ;;      Params:         0       0       0       0       0
   560 ;;      Locals:         0       0       0       0       0
   561 ;;      Temps:          0       0       0       0       0
   562 ;;      Totals:         0       0       0       0       0
   563 ;;Total ram usage:        0 bytes
   564 ;; Hardware stack levels used:    1
   565 ;; Hardware stack levels required when called:    1
   566 ;; This function calls:
   567 ;;		_spiInit
   568 ;; This function is called by:
   569 ;;		_main
   570 ;; This function uses a non-reentrant model
   571 ;;
   572                           
   573                           
   574                           ;psect for function _setup
   575  0710                     _setup:	
   576  0710                     l840:	
   577                           ;incstack = 0
   578                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
   579                           
   580                           
   581                           ;LAB4.c: 70:     TRISA = 0b00001001;
   582  0710  3009               	movlw	9
   583  0711  1683               	bsf	3,5	;RP0=1, select bank1
   584  0712  1303               	bcf	3,6	;RP1=0, select bank1
   585  0713  0085               	movwf	5	;volatile
   586  0714                     l842:	
   587                           
   588                           ;LAB4.c: 71:     TRISB = 0;
   589  0714  0186               	clrf	6	;volatile
   590  0715                     l844:	
   591                           
   592                           ;LAB4.c: 72:     TRISC = 0b00001000;
   593  0715  3008               	movlw	8
   594  0716  0087               	movwf	7	;volatile
   595                           
   596                           ;LAB4.c: 73:     TRISD = 0;
   597  0717  0188               	clrf	8	;volatile
   598  0718                     l846:	
   599                           
   600                           ;LAB4.c: 74:     ANSEL = 0b00001001;
   601  0718  3009               	movlw	9
   602  0719  1683               	bsf	3,5	;RP0=1, select bank3
   603  071A  1703               	bsf	3,6	;RP1=1, select bank3
   604  071B  0088               	movwf	8	;volatile
   605  071C                     l848:	
   606                           
   607                           ;LAB4.c: 75:     ANSELH = 0;
   608  071C  0189               	clrf	9	;volatile
   609  071D                     l850:	
   610                           
   611                           ;LAB4.c: 82:     TRISAbits.TRISA5 = 1;
   612  071D  1683               	bsf	3,5	;RP0=1, select bank1
   613  071E  1303               	bcf	3,6	;RP1=0, select bank1
   614  071F  1685               	bsf	5,5	;volatile
   615  0720                     l852:	
   616                           
   617                           ;LAB4.c: 83:     spiInit(SPI_SLAVE_SS_EN, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE_LOW, SP
      +                          I_IDLE_2_ACTIVE);
   618  0720  01F0               	clrf	spiInit@sDataSample
   619  0721  01F1               	clrf	spiInit@sClockIdle
   620  0722  01F2               	clrf	spiInit@sTransmitEdge
   621  0723  3024               	movlw	36
   622  0724  120A  118A  26F9  120A  118A  	fcall	_spiInit
   623  0729                     l56:	
   624  0729  0008               	return
   625  072A                     __end_of_setup:	
   626                           
   627                           	psect	text2
   628  06F9                     __ptext2:	
   629 ;; *************** function _spiInit *****************
   630 ;; Defined at:
   631 ;;		line 12 in file "SPI_SLAVE.c"
   632 ;; Parameters:    Size  Location     Type
   633 ;;  sType           1    wreg     enum E1264
   634 ;;  sDataSample     1    0[COMMON] enum E1272
   635 ;;  sClockIdle      1    1[COMMON] enum E1276
   636 ;;  sTransmitEdg    1    2[COMMON] enum E1280
   637 ;; Auto vars:     Size  Location     Type
   638 ;;  sType           1    3[COMMON] enum E1264
   639 ;; Return value:  Size  Location     Type
   640 ;;                  1    wreg      void 
   641 ;; Registers used:
   642 ;;		wreg, status,2, status,0
   643 ;; Tracked objects:
   644 ;;		On entry : 0/0
   645 ;;		On exit  : 0/0
   646 ;;		Unchanged: 0/0
   647 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   648 ;;      Params:         3       0       0       0       0
   649 ;;      Locals:         1       0       0       0       0
   650 ;;      Temps:          0       0       0       0       0
   651 ;;      Totals:         4       0       0       0       0
   652 ;;Total ram usage:        4 bytes
   653 ;; Hardware stack levels used:    1
   654 ;; This function calls:
   655 ;;		Nothing
   656 ;; This function is called by:
   657 ;;		_setup
   658 ;; This function uses a non-reentrant model
   659 ;;
   660                           
   661                           
   662                           ;psect for function _spiInit
   663  06F9                     _spiInit:	
   664                           
   665                           ;incstack = 0
   666                           ; Regs used in _spiInit: [wreg+status,2+status,0]
   667                           ;spiInit@sType stored from wreg
   668  06F9  00F3               	movwf	spiInit@sType
   669  06FA                     l830:	
   670                           
   671                           ;SPI_SLAVE.c: 12: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Id
      +                          le sClockIdle, Spi_Transmit_Edge sTransmitEdge);SPI_SLAVE.c: 13: {;SPI_SLAVE.c: 14:     
      +                          TRISC5=0;
   672  06FA  1683               	bsf	3,5	;RP0=1, select bank1
   673  06FB  1303               	bcf	3,6	;RP1=0, select bank1
   674  06FC  1287               	bcf	7,5	;volatile
   675                           
   676                           ;SPI_SLAVE.c: 15:     TRISC4 = 1;
   677  06FD  1607               	bsf	7,4	;volatile
   678                           
   679                           ;SPI_SLAVE.c: 16:     if(sType & 0b00000100)
   680  06FE  1D73               	btfss	spiInit@sType,2
   681  06FF  2F01               	goto	u71
   682  0700  2F02               	goto	u70
   683  0701                     u71:	
   684  0701  2F06               	goto	l836
   685  0702                     u70:	
   686  0702                     l832:	
   687                           
   688                           ;SPI_SLAVE.c: 17:     {;SPI_SLAVE.c: 18:         SSPSTAT = sTransmitEdge;
   689  0702  0872               	movf	spiInit@sTransmitEdge,w
   690  0703  0094               	movwf	20	;volatile
   691  0704                     l834:	
   692                           
   693                           ;SPI_SLAVE.c: 19:         TRISC3 = 1;
   694  0704  1587               	bsf	7,3	;volatile
   695                           
   696                           ;SPI_SLAVE.c: 20:     }
   697  0705  2F0A               	goto	l88
   698  0706                     l836:	
   699                           
   700                           ;SPI_SLAVE.c: 22:     {;SPI_SLAVE.c: 23:         SSPSTAT = sDataSample | sTransmitEdge;
   701  0706  0870               	movf	spiInit@sDataSample,w
   702  0707  0472               	iorwf	spiInit@sTransmitEdge,w
   703  0708  0094               	movwf	20	;volatile
   704  0709                     l838:	
   705                           
   706                           ;SPI_SLAVE.c: 24:         TRISC3 = 0;
   707  0709  1187               	bcf	7,3	;volatile
   708  070A                     l88:	
   709                           ;SPI_SLAVE.c: 25:     }
   710                           
   711                           
   712                           ;SPI_SLAVE.c: 27:     SSPCON = sType | sClockIdle;
   713  070A  0873               	movf	spiInit@sType,w
   714  070B  0471               	iorwf	spiInit@sClockIdle,w
   715  070C  1283               	bcf	3,5	;RP0=0, select bank0
   716  070D  1303               	bcf	3,6	;RP1=0, select bank0
   717  070E  0094               	movwf	20	;volatile
   718  070F                     l89:	
   719  070F  0008               	return
   720  0710                     __end_of_spiInit:	
   721                           
   722                           	psect	text3
   723  072A                     __ptext3:	
   724 ;; *************** function _initOsc *****************
   725 ;; Defined at:
   726 ;;		line 8 in file "OSCI_SLAVE.c"
   727 ;; Parameters:    Size  Location     Type
   728 ;;  frec            1    wreg     unsigned char 
   729 ;; Auto vars:     Size  Location     Type
   730 ;;  frec            1    2[COMMON] unsigned char 
   731 ;; Return value:  Size  Location     Type
   732 ;;                  1    wreg      void 
   733 ;; Registers used:
   734 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   735 ;; Tracked objects:
   736 ;;		On entry : 0/0
   737 ;;		On exit  : 0/0
   738 ;;		Unchanged: 0/0
   739 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   740 ;;      Params:         0       0       0       0       0
   741 ;;      Locals:         1       0       0       0       0
   742 ;;      Temps:          2       0       0       0       0
   743 ;;      Totals:         3       0       0       0       0
   744 ;;Total ram usage:        3 bytes
   745 ;; Hardware stack levels used:    1
   746 ;; This function calls:
   747 ;;		Nothing
   748 ;; This function is called by:
   749 ;;		_main
   750 ;; This function uses a non-reentrant model
   751 ;;
   752                           
   753                           
   754                           ;psect for function _initOsc
   755  072A                     _initOsc:	
   756                           
   757                           ;incstack = 0
   758                           ; Regs used in _initOsc: [wreg-fsr0h+status,2+status,0]
   759                           ;initOsc@frec stored from wreg
   760  072A  00F2               	movwf	initOsc@frec
   761  072B                     l748:	
   762                           
   763                           ;OSCI_SLAVE.c: 9:     switch(frec){
   764  072B  2F62               	goto	l752
   765  072C                     l112:	
   766                           ;OSCI_SLAVE.c: 10:         case 0:
   767                           
   768                           
   769                           ;OSCI_SLAVE.c: 11:             OSCCONbits.IRCF0 = 0;
   770  072C  1683               	bsf	3,5	;RP0=1, select bank1
   771  072D  1303               	bcf	3,6	;RP1=0, select bank1
   772  072E  120F               	bcf	15,4	;volatile
   773                           
   774                           ;OSCI_SLAVE.c: 12:             OSCCONbits.IRCF1 = 0;
   775  072F  128F               	bcf	15,5	;volatile
   776                           
   777                           ;OSCI_SLAVE.c: 13:             OSCCONbits.IRCF2 = 0;
   778  0730  130F               	bcf	15,6	;volatile
   779                           
   780                           ;OSCI_SLAVE.c: 14:             break;
   781  0731  2F84               	goto	l113
   782  0732                     l114:	
   783                           ;OSCI_SLAVE.c: 15:         case 1:
   784                           
   785                           
   786                           ;OSCI_SLAVE.c: 16:             OSCCONbits.IRCF0 = 1;
   787  0732  1683               	bsf	3,5	;RP0=1, select bank1
   788  0733  1303               	bcf	3,6	;RP1=0, select bank1
   789  0734  160F               	bsf	15,4	;volatile
   790                           
   791                           ;OSCI_SLAVE.c: 17:             OSCCONbits.IRCF1 = 0;
   792  0735  128F               	bcf	15,5	;volatile
   793                           
   794                           ;OSCI_SLAVE.c: 18:             OSCCONbits.IRCF2 = 0;
   795  0736  130F               	bcf	15,6	;volatile
   796                           
   797                           ;OSCI_SLAVE.c: 19:             break;
   798  0737  2F84               	goto	l113
   799  0738                     l115:	
   800                           ;OSCI_SLAVE.c: 20:         case 2:
   801                           
   802                           
   803                           ;OSCI_SLAVE.c: 21:             OSCCONbits.IRCF0 = 0;
   804  0738  1683               	bsf	3,5	;RP0=1, select bank1
   805  0739  1303               	bcf	3,6	;RP1=0, select bank1
   806  073A  120F               	bcf	15,4	;volatile
   807                           
   808                           ;OSCI_SLAVE.c: 22:             OSCCONbits.IRCF1 = 1;
   809  073B  168F               	bsf	15,5	;volatile
   810                           
   811                           ;OSCI_SLAVE.c: 23:             OSCCONbits.IRCF2 = 0;
   812  073C  130F               	bcf	15,6	;volatile
   813                           
   814                           ;OSCI_SLAVE.c: 24:             break;
   815  073D  2F84               	goto	l113
   816  073E                     l116:	
   817                           ;OSCI_SLAVE.c: 25:         case 3:
   818                           
   819                           
   820                           ;OSCI_SLAVE.c: 26:             OSCCONbits.IRCF0 = 1;
   821  073E  1683               	bsf	3,5	;RP0=1, select bank1
   822  073F  1303               	bcf	3,6	;RP1=0, select bank1
   823  0740  160F               	bsf	15,4	;volatile
   824                           
   825                           ;OSCI_SLAVE.c: 27:             OSCCONbits.IRCF1 = 1;
   826  0741  168F               	bsf	15,5	;volatile
   827                           
   828                           ;OSCI_SLAVE.c: 28:             OSCCONbits.IRCF2 = 0;
   829  0742  130F               	bcf	15,6	;volatile
   830                           
   831                           ;OSCI_SLAVE.c: 29:             break;
   832  0743  2F84               	goto	l113
   833  0744                     l117:	
   834                           ;OSCI_SLAVE.c: 30:         case 4:
   835                           
   836                           
   837                           ;OSCI_SLAVE.c: 31:             OSCCONbits.IRCF0 = 0;
   838  0744  1683               	bsf	3,5	;RP0=1, select bank1
   839  0745  1303               	bcf	3,6	;RP1=0, select bank1
   840  0746  120F               	bcf	15,4	;volatile
   841                           
   842                           ;OSCI_SLAVE.c: 32:             OSCCONbits.IRCF1 = 0;
   843  0747  128F               	bcf	15,5	;volatile
   844                           
   845                           ;OSCI_SLAVE.c: 33:             OSCCONbits.IRCF2 = 1;
   846  0748  170F               	bsf	15,6	;volatile
   847                           
   848                           ;OSCI_SLAVE.c: 34:             break;
   849  0749  2F84               	goto	l113
   850  074A                     l118:	
   851                           ;OSCI_SLAVE.c: 35:         case 5:
   852                           
   853                           
   854                           ;OSCI_SLAVE.c: 36:             OSCCONbits.IRCF0 = 1;
   855  074A  1683               	bsf	3,5	;RP0=1, select bank1
   856  074B  1303               	bcf	3,6	;RP1=0, select bank1
   857  074C  160F               	bsf	15,4	;volatile
   858                           
   859                           ;OSCI_SLAVE.c: 37:             OSCCONbits.IRCF1 = 0;
   860  074D  128F               	bcf	15,5	;volatile
   861                           
   862                           ;OSCI_SLAVE.c: 38:             OSCCONbits.IRCF2 = 1;
   863  074E  170F               	bsf	15,6	;volatile
   864                           
   865                           ;OSCI_SLAVE.c: 39:             break;
   866  074F  2F84               	goto	l113
   867  0750                     l119:	
   868                           ;OSCI_SLAVE.c: 40:         case 6:
   869                           
   870                           
   871                           ;OSCI_SLAVE.c: 41:             OSCCONbits.IRCF0 = 0;
   872  0750  1683               	bsf	3,5	;RP0=1, select bank1
   873  0751  1303               	bcf	3,6	;RP1=0, select bank1
   874  0752  120F               	bcf	15,4	;volatile
   875                           
   876                           ;OSCI_SLAVE.c: 42:             OSCCONbits.IRCF1 = 1;
   877  0753  168F               	bsf	15,5	;volatile
   878                           
   879                           ;OSCI_SLAVE.c: 43:             OSCCONbits.IRCF2 = 1;
   880  0754  170F               	bsf	15,6	;volatile
   881                           
   882                           ;OSCI_SLAVE.c: 44:             break;
   883  0755  2F84               	goto	l113
   884  0756                     l120:	
   885                           ;OSCI_SLAVE.c: 45:         case 7:
   886                           
   887                           
   888                           ;OSCI_SLAVE.c: 46:             OSCCONbits.IRCF0 = 1;
   889  0756  1683               	bsf	3,5	;RP0=1, select bank1
   890  0757  1303               	bcf	3,6	;RP1=0, select bank1
   891  0758  160F               	bsf	15,4	;volatile
   892                           
   893                           ;OSCI_SLAVE.c: 47:             OSCCONbits.IRCF1 = 1;
   894  0759  168F               	bsf	15,5	;volatile
   895                           
   896                           ;OSCI_SLAVE.c: 48:             OSCCONbits.IRCF2 = 1;
   897  075A  170F               	bsf	15,6	;volatile
   898                           
   899                           ;OSCI_SLAVE.c: 49:             break;
   900  075B  2F84               	goto	l113
   901  075C                     l121:	
   902                           ;OSCI_SLAVE.c: 50:         default:
   903                           
   904                           
   905                           ;OSCI_SLAVE.c: 51:             OSCCONbits.IRCF0 = 0;
   906  075C  1683               	bsf	3,5	;RP0=1, select bank1
   907  075D  1303               	bcf	3,6	;RP1=0, select bank1
   908  075E  120F               	bcf	15,4	;volatile
   909                           
   910                           ;OSCI_SLAVE.c: 52:             OSCCONbits.IRCF1 = 1;
   911  075F  168F               	bsf	15,5	;volatile
   912                           
   913                           ;OSCI_SLAVE.c: 53:             OSCCONbits.IRCF2 = 1;
   914  0760  170F               	bsf	15,6	;volatile
   915                           
   916                           ;OSCI_SLAVE.c: 54:             break;
   917  0761  2F84               	goto	l113
   918  0762                     l752:	
   919  0762  0872               	movf	initOsc@frec,w
   920  0763  00F0               	movwf	??_initOsc
   921  0764  01F1               	clrf	??_initOsc+1
   922                           
   923                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   924                           ; Switch size 1, requested type "simple"
   925                           ; Number of cases is 1, Range of values is 0 to 0
   926                           ; switch strategies available:
   927                           ; Name         Instructions Cycles
   928                           ; simple_byte            4     3 (average)
   929                           ; direct_byte           11     8 (fixed)
   930                           ; jumptable            260     6 (fixed)
   931                           ;	Chosen strategy is simple_byte
   932  0765  0871               	movf	??_initOsc+1,w
   933  0766  3A00               	xorlw	0	; case 0
   934  0767  1903               	skipnz
   935  0768  2F6A               	goto	l880
   936  0769  2F5C               	goto	l121
   937  076A                     l880:	
   938                           
   939                           ; Switch size 1, requested type "simple"
   940                           ; Number of cases is 8, Range of values is 0 to 7
   941                           ; switch strategies available:
   942                           ; Name         Instructions Cycles
   943                           ; simple_byte           25    13 (average)
   944                           ; direct_byte           32     8 (fixed)
   945                           ; jumptable            260     6 (fixed)
   946                           ;	Chosen strategy is simple_byte
   947  076A  0870               	movf	??_initOsc,w
   948  076B  3A00               	xorlw	0	; case 0
   949  076C  1903               	skipnz
   950  076D  2F2C               	goto	l112
   951  076E  3A01               	xorlw	1	; case 1
   952  076F  1903               	skipnz
   953  0770  2F32               	goto	l114
   954  0771  3A03               	xorlw	3	; case 2
   955  0772  1903               	skipnz
   956  0773  2F38               	goto	l115
   957  0774  3A01               	xorlw	1	; case 3
   958  0775  1903               	skipnz
   959  0776  2F3E               	goto	l116
   960  0777  3A07               	xorlw	7	; case 4
   961  0778  1903               	skipnz
   962  0779  2F44               	goto	l117
   963  077A  3A01               	xorlw	1	; case 5
   964  077B  1903               	skipnz
   965  077C  2F4A               	goto	l118
   966  077D  3A03               	xorlw	3	; case 6
   967  077E  1903               	skipnz
   968  077F  2F50               	goto	l119
   969  0780  3A01               	xorlw	1	; case 7
   970  0781  1903               	skipnz
   971  0782  2F56               	goto	l120
   972  0783  2F5C               	goto	l121
   973  0784                     l113:	
   974                           
   975                           ;OSCI_SLAVE.c: 57:     OSCCONbits.SCS = 1;
   976  0784  140F               	bsf	15,0	;volatile
   977  0785                     l122:	
   978  0785  0008               	return
   979  0786                     __end_of_initOsc:	
   980                           
   981                           	psect	text4
   982  0786                     __ptext4:	
   983 ;; *************** function _ADC *****************
   984 ;; Defined at:
   985 ;;		line 87 in file "LAB4.c"
   986 ;; Parameters:    Size  Location     Type
   987 ;;		None
   988 ;; Auto vars:     Size  Location     Type
   989 ;;		None
   990 ;; Return value:  Size  Location     Type
   991 ;;                  1    wreg      void 
   992 ;; Registers used:
   993 ;;		wreg, status,2, status,0, pclath, cstack
   994 ;; Tracked objects:
   995 ;;		On entry : 0/0
   996 ;;		On exit  : 0/0
   997 ;;		Unchanged: 0/0
   998 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   999 ;;      Params:         0       0       0       0       0
  1000 ;;      Locals:         0       0       0       0       0
  1001 ;;      Temps:          2       0       0       0       0
  1002 ;;      Totals:         2       0       0       0       0
  1003 ;;Total ram usage:        2 bytes
  1004 ;; Hardware stack levels used:    1
  1005 ;; Hardware stack levels required when called:    2
  1006 ;; This function calls:
  1007 ;;		_spiRead
  1008 ;;		_spiWrite
  1009 ;; This function is called by:
  1010 ;;		_main
  1011 ;; This function uses a non-reentrant model
  1012 ;;
  1013                           
  1014                           
  1015                           ;psect for function _ADC
  1016  0786                     _ADC:	
  1017  0786                     l758:	
  1018                           ;incstack = 0
  1019                           ; Regs used in _ADC: [wreg+status,2+status,0+pclath+cstack]
  1020                           
  1021                           
  1022                           ;LAB4.c: 88:     ADCON0bits.ADCS0 = 0;
  1023  0786  1283               	bcf	3,5	;RP0=0, select bank0
  1024  0787  1303               	bcf	3,6	;RP1=0, select bank0
  1025  0788  131F               	bcf	31,6	;volatile
  1026                           
  1027                           ;LAB4.c: 89:     ADCON0bits.ADCS1 = 1;
  1028  0789  179F               	bsf	31,7	;volatile
  1029                           
  1030                           ;LAB4.c: 90:     ADCON0bits.ADON = 1;
  1031  078A  141F               	bsf	31,0	;volatile
  1032                           
  1033                           ;LAB4.c: 91:     ADCON1bits.ADFM = 0;
  1034  078B  1683               	bsf	3,5	;RP0=1, select bank1
  1035  078C  1303               	bcf	3,6	;RP1=0, select bank1
  1036  078D  139F               	bcf	31,7	;volatile
  1037                           
  1038                           ;LAB4.c: 92:     ADCON1bits.VCFG0 = 0;
  1039  078E  121F               	bcf	31,4	;volatile
  1040                           
  1041                           ;LAB4.c: 93:     ADCON1bits.VCFG1 = 0;
  1042  078F  129F               	bcf	31,5	;volatile
  1043  0790                     l760:	
  1044                           
  1045                           ;LAB4.c: 94:     PORTA=0;
  1046  0790  1283               	bcf	3,5	;RP0=0, select bank0
  1047  0791  1303               	bcf	3,6	;RP1=0, select bank0
  1048  0792  0185               	clrf	5	;volatile
  1049                           
  1050                           ;LAB4.c: 95:     PORTB=0;
  1051  0793  0186               	clrf	6	;volatile
  1052                           
  1053                           ;LAB4.c: 96:     PORTC=0;
  1054  0794  0187               	clrf	7	;volatile
  1055                           
  1056                           ;LAB4.c: 97:     PORTD=0;
  1057  0795  0188               	clrf	8	;volatile
  1058  0796                     l762:	
  1059                           
  1060                           ;LAB4.c: 100:         PORTD = spiRead();
  1061  0796  120A  118A  26DD  120A  118A  	fcall	_spiRead
  1062  079B  1283               	bcf	3,5	;RP0=0, select bank0
  1063  079C  1303               	bcf	3,6	;RP1=0, select bank0
  1064  079D  0088               	movwf	8	;volatile
  1065  079E                     l764:	
  1066                           
  1067                           ;LAB4.c: 101:         _delay((unsigned long)((1)*(8000000/4000.0)));
  1068  079E  3003               	movlw	3
  1069  079F  00F2               	movwf	??_ADC+1
  1070  07A0  3097               	movlw	151
  1071  07A1  00F1               	movwf	??_ADC
  1072  07A2                     u87:	
  1073  07A2  0BF1               	decfsz	??_ADC,f
  1074  07A3  2FA2               	goto	u87
  1075  07A4  0BF2               	decfsz	??_ADC+1,f
  1076  07A5  2FA2               	goto	u87
  1077  07A6  2FA7               	nop2
  1078  07A7                     l766:	
  1079                           
  1080                           ;LAB4.c: 102:         if (PORTD == 1){
  1081  07A7  1283               	bcf	3,5	;RP0=0, select bank0
  1082  07A8  1303               	bcf	3,6	;RP1=0, select bank0
  1083  07A9  0308               	decf	8,w	;volatile
  1084  07AA  1D03               	btfss	3,2
  1085  07AB  2FAD               	goto	u31
  1086  07AC  2FAE               	goto	u30
  1087  07AD                     u31:	
  1088  07AD  2FCC               	goto	l782
  1089  07AE                     u30:	
  1090  07AE                     l768:	
  1091                           
  1092                           ;LAB4.c: 103:         ADCON0bits.CHS0 = 0;
  1093  07AE  111F               	bcf	31,2	;volatile
  1094                           
  1095                           ;LAB4.c: 104:         ADCON0bits.CHS1 = 0;
  1096  07AF  119F               	bcf	31,3	;volatile
  1097                           
  1098                           ;LAB4.c: 105:         ADCON0bits.CHS2 = 0;
  1099  07B0  121F               	bcf	31,4	;volatile
  1100                           
  1101                           ;LAB4.c: 106:         ADCON0bits.CHS3 = 0;
  1102  07B1  129F               	bcf	31,5	;volatile
  1103  07B2                     l770:	
  1104                           
  1105                           ;LAB4.c: 107:         _delay((unsigned long)((600)*(8000000/4000000.0)));
  1106  07B2  30EF               	movlw	239
  1107  07B3  00F1               	movwf	??_ADC
  1108  07B4                     u97:	
  1109  07B4  2FB5               	nop2
  1110  07B5  0BF1               	decfsz	??_ADC,f
  1111  07B6  2FB4               	goto	u97
  1112  07B7  2FB8               	nop2
  1113  07B8  2FB9               	nop2
  1114  07B9                     l772:	
  1115                           
  1116                           ;LAB4.c: 108:         ADCON0bits.ADON = 1;
  1117  07B9  1283               	bcf	3,5	;RP0=0, select bank0
  1118  07BA  1303               	bcf	3,6	;RP1=0, select bank0
  1119  07BB  141F               	bsf	31,0	;volatile
  1120  07BC                     l774:	
  1121                           
  1122                           ;LAB4.c: 109:         PIR1bits.ADIF = 0;
  1123  07BC  130C               	bcf	12,6	;volatile
  1124  07BD                     l776:	
  1125                           
  1126                           ;LAB4.c: 110:         ADCON0bits.GO = 1;
  1127  07BD  149F               	bsf	31,1	;volatile
  1128  07BE                     l61:	
  1129                           ;LAB4.c: 111:         while(ADCON0bits.GO == 1);
  1130                           
  1131  07BE  189F               	btfsc	31,1	;volatile
  1132  07BF  2FC1               	goto	u41
  1133  07C0  2FC2               	goto	u40
  1134  07C1                     u41:	
  1135  07C1  2FBE               	goto	l61
  1136  07C2                     u40:	
  1137  07C2                     l778:	
  1138                           
  1139                           ;LAB4.c: 112:         adc = ADRESH;
  1140  07C2  081E               	movf	30,w	;volatile
  1141  07C3  00F1               	movwf	??_ADC
  1142  07C4  0871               	movf	??_ADC,w
  1143  07C5  00F5               	movwf	_adc
  1144  07C6                     l780:	
  1145                           
  1146                           ;LAB4.c: 113:         spiWrite(adc);
  1147  07C6  0875               	movf	_adc,w
  1148  07C7  120A  118A  26D0  120A  118A  	fcall	_spiWrite
  1149  07CC                     l782:	
  1150                           
  1151                           ;LAB4.c: 115:        _delay((unsigned long)((600)*(8000000/4000000.0)));
  1152  07CC  30EF               	movlw	239
  1153  07CD  00F1               	movwf	??_ADC
  1154  07CE                     u107:	
  1155  07CE  2FCF               	nop2
  1156  07CF  0BF1               	decfsz	??_ADC,f
  1157  07D0  2FCE               	goto	u107
  1158  07D1  2FD2               	nop2
  1159  07D2  2FD3               	nop2
  1160  07D3                     l784:	
  1161                           
  1162                           ;LAB4.c: 116:         if(PORTD == 2){
  1163  07D3  3002               	movlw	2
  1164  07D4  1283               	bcf	3,5	;RP0=0, select bank0
  1165  07D5  1303               	bcf	3,6	;RP1=0, select bank0
  1166  07D6  0608               	xorwf	8,w	;volatile
  1167  07D7  1D03               	btfss	3,2
  1168  07D8  2FDA               	goto	u51
  1169  07D9  2FDB               	goto	u50
  1170  07DA                     u51:	
  1171  07DA  2F96               	goto	l762
  1172  07DB                     u50:	
  1173  07DB                     l786:	
  1174                           
  1175                           ;LAB4.c: 117:         ADCON0bits.CHS0 = 1;
  1176  07DB  151F               	bsf	31,2	;volatile
  1177                           
  1178                           ;LAB4.c: 118:         ADCON0bits.CHS1 = 1;
  1179  07DC  159F               	bsf	31,3	;volatile
  1180                           
  1181                           ;LAB4.c: 119:         ADCON0bits.CHS2 = 0;
  1182  07DD  121F               	bcf	31,4	;volatile
  1183                           
  1184                           ;LAB4.c: 120:         ADCON0bits.CHS3 = 0;
  1185  07DE  129F               	bcf	31,5	;volatile
  1186  07DF                     l788:	
  1187                           
  1188                           ;LAB4.c: 121:         _delay((unsigned long)((600)*(8000000/4000000.0)));
  1189  07DF  30EF               	movlw	239
  1190  07E0  00F1               	movwf	??_ADC
  1191  07E1                     u117:	
  1192  07E1  2FE2               	nop2
  1193  07E2  0BF1               	decfsz	??_ADC,f
  1194  07E3  2FE1               	goto	u117
  1195  07E4  2FE5               	nop2
  1196  07E5  2FE6               	nop2
  1197  07E6                     l790:	
  1198                           
  1199                           ;LAB4.c: 122:         PIR1bits.ADIF = 0;
  1200  07E6  1283               	bcf	3,5	;RP0=0, select bank0
  1201  07E7  1303               	bcf	3,6	;RP1=0, select bank0
  1202  07E8  130C               	bcf	12,6	;volatile
  1203  07E9                     l792:	
  1204                           
  1205                           ;LAB4.c: 123:         ADCON0bits.GO = 1;
  1206  07E9  149F               	bsf	31,1	;volatile
  1207  07EA                     l65:	
  1208                           ;LAB4.c: 124:         while(ADCON0bits.GO == 1);
  1209                           
  1210  07EA  189F               	btfsc	31,1	;volatile
  1211  07EB  2FED               	goto	u61
  1212  07EC  2FEE               	goto	u60
  1213  07ED                     u61:	
  1214  07ED  2FEA               	goto	l65
  1215  07EE                     u60:	
  1216  07EE                     l794:	
  1217                           
  1218                           ;LAB4.c: 125:         adc2 = ADRESH;
  1219  07EE  081E               	movf	30,w	;volatile
  1220  07EF  00F1               	movwf	??_ADC
  1221  07F0  0871               	movf	??_ADC,w
  1222  07F1  00F4               	movwf	_adc2
  1223  07F2                     l796:	
  1224                           
  1225                           ;LAB4.c: 126:         spiWrite(adc2);
  1226  07F2  0874               	movf	_adc2,w
  1227  07F3  120A  118A  26D0  120A  118A  	fcall	_spiWrite
  1228  07F8  2F96               	goto	l762
  1229  07F9  0008               	return
  1230  07FA                     __end_of_ADC:	
  1231                           
  1232                           	psect	text5
  1233  06D0                     __ptext5:	
  1234 ;; *************** function _spiWrite *****************
  1235 ;; Defined at:
  1236 ;;		line 35 in file "SPI_SLAVE.c"
  1237 ;; Parameters:    Size  Location     Type
  1238 ;;  dat             1    wreg     unsigned char 
  1239 ;; Auto vars:     Size  Location     Type
  1240 ;;  dat             1    0[COMMON] unsigned char 
  1241 ;; Return value:  Size  Location     Type
  1242 ;;                  1    wreg      void 
  1243 ;; Registers used:
  1244 ;;		wreg
  1245 ;; Tracked objects:
  1246 ;;		On entry : 0/0
  1247 ;;		On exit  : 0/0
  1248 ;;		Unchanged: 0/0
  1249 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1250 ;;      Params:         0       0       0       0       0
  1251 ;;      Locals:         1       0       0       0       0
  1252 ;;      Temps:          0       0       0       0       0
  1253 ;;      Totals:         1       0       0       0       0
  1254 ;;Total ram usage:        1 bytes
  1255 ;; Hardware stack levels used:    1
  1256 ;; This function calls:
  1257 ;;		Nothing
  1258 ;; This function is called by:
  1259 ;;		_ADC
  1260 ;; This function uses a non-reentrant model
  1261 ;;
  1262                           
  1263                           
  1264                           ;psect for function _spiWrite
  1265  06D0                     _spiWrite:	
  1266                           
  1267                           ;incstack = 0
  1268                           ; Regs used in _spiWrite: [wreg]
  1269                           ;spiWrite@dat stored from wreg
  1270  06D0  00F0               	movwf	spiWrite@dat
  1271  06D1                     l732:	
  1272                           
  1273                           ;SPI_SLAVE.c: 35: void spiWrite(char dat);SPI_SLAVE.c: 36: {;SPI_SLAVE.c: 37:     SSPBUF
      +                           = dat;
  1274  06D1  0870               	movf	spiWrite@dat,w
  1275  06D2  1283               	bcf	3,5	;RP0=0, select bank0
  1276  06D3  1303               	bcf	3,6	;RP1=0, select bank0
  1277  06D4  0093               	movwf	19	;volatile
  1278  06D5                     l98:	
  1279  06D5  0008               	return
  1280  06D6                     __end_of_spiWrite:	
  1281                           
  1282                           	psect	text6
  1283  06DD                     __ptext6:	
  1284 ;; *************** function _spiRead *****************
  1285 ;; Defined at:
  1286 ;;		line 48 in file "SPI_SLAVE.c"
  1287 ;; Parameters:    Size  Location     Type
  1288 ;;		None
  1289 ;; Auto vars:     Size  Location     Type
  1290 ;;		None
  1291 ;; Return value:  Size  Location     Type
  1292 ;;                  1    wreg      unsigned char 
  1293 ;; Registers used:
  1294 ;;		wreg, status,2, status,0, pclath, cstack
  1295 ;; Tracked objects:
  1296 ;;		On entry : 0/0
  1297 ;;		On exit  : 0/0
  1298 ;;		Unchanged: 0/0
  1299 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1300 ;;      Params:         0       0       0       0       0
  1301 ;;      Locals:         0       0       0       0       0
  1302 ;;      Temps:          0       0       0       0       0
  1303 ;;      Totals:         0       0       0       0       0
  1304 ;;Total ram usage:        0 bytes
  1305 ;; Hardware stack levels used:    1
  1306 ;; Hardware stack levels required when called:    1
  1307 ;; This function calls:
  1308 ;;		_spiReceiveWait
  1309 ;; This function is called by:
  1310 ;;		_ADC
  1311 ;; This function uses a non-reentrant model
  1312 ;;
  1313                           
  1314                           
  1315                           ;psect for function _spiRead
  1316  06DD                     _spiRead:	
  1317  06DD                     l726:	
  1318                           ;incstack = 0
  1319                           ; Regs used in _spiRead: [wreg+status,2+status,0+pclath+cstack]
  1320                           
  1321                           
  1322                           ;SPI_SLAVE.c: 50:     spiReceiveWait();
  1323  06DD  120A  118A  26D6  120A  118A  	fcall	_spiReceiveWait
  1324  06E2                     l728:	
  1325                           
  1326                           ;SPI_SLAVE.c: 51:     return(SSPBUF);
  1327  06E2  1283               	bcf	3,5	;RP0=0, select bank0
  1328  06E3  1303               	bcf	3,6	;RP1=0, select bank0
  1329  06E4  0813               	movf	19,w	;volatile
  1330  06E5                     l106:	
  1331  06E5  0008               	return
  1332  06E6                     __end_of_spiRead:	
  1333                           
  1334                           	psect	text7
  1335  06D6                     __ptext7:	
  1336 ;; *************** function _spiReceiveWait *****************
  1337 ;; Defined at:
  1338 ;;		line 30 in file "SPI_SLAVE.c"
  1339 ;; Parameters:    Size  Location     Type
  1340 ;;		None
  1341 ;; Auto vars:     Size  Location     Type
  1342 ;;		None
  1343 ;; Return value:  Size  Location     Type
  1344 ;;                  1    wreg      void 
  1345 ;; Registers used:
  1346 ;;		None
  1347 ;; Tracked objects:
  1348 ;;		On entry : 0/0
  1349 ;;		On exit  : 0/0
  1350 ;;		Unchanged: 0/0
  1351 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1352 ;;      Params:         0       0       0       0       0
  1353 ;;      Locals:         0       0       0       0       0
  1354 ;;      Temps:          0       0       0       0       0
  1355 ;;      Totals:         0       0       0       0       0
  1356 ;;Total ram usage:        0 bytes
  1357 ;; Hardware stack levels used:    1
  1358 ;; This function calls:
  1359 ;;		Nothing
  1360 ;; This function is called by:
  1361 ;;		_spiRead
  1362 ;; This function uses a non-reentrant model
  1363 ;;
  1364                           
  1365                           
  1366                           ;psect for function _spiReceiveWait
  1367  06D6                     _spiReceiveWait:	
  1368  06D6                     l714:	
  1369                           ;incstack = 0
  1370                           ; Regs used in _spiReceiveWait: []
  1371                           
  1372  06D6                     l92:	
  1373                           ;SPI_SLAVE.c: 32:     while ( !SSPSTATbits.BF );
  1374                           
  1375  06D6  1683               	bsf	3,5	;RP0=1, select bank1
  1376  06D7  1303               	bcf	3,6	;RP1=0, select bank1
  1377  06D8  1C14               	btfss	20,0	;volatile
  1378  06D9  2EDB               	goto	u11
  1379  06DA  2EDC               	goto	u10
  1380  06DB                     u11:	
  1381  06DB  2ED6               	goto	l92
  1382  06DC                     u10:	
  1383  06DC                     l95:	
  1384  06DC  0008               	return
  1385  06DD                     __end_of_spiReceiveWait:	
  1386  007E                     btemp	set	126	;btemp
  1387  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      4       6
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _setup->_spiInit
    _ADC->_spiWrite

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     390
                                _ADC
                            _initOsc
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     360
                            _spiInit
 ---------------------------------------------------------------------------------
 (2) _spiInit                                              4     1      3     360
                                              0 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (1) _initOsc                                              3     3      0      15
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _ADC                                                  2     2      0      15
                                              1 COMMON     2     2      0
                            _spiRead
                           _spiWrite
 ---------------------------------------------------------------------------------
 (2) _spiWrite                                             1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (3) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC
     _spiRead
       _spiReceiveWait
     _spiWrite
   _initOsc
   _setup
     _spiInit

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      4       6       1       42.9%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       6       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       6      12        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Fri Feb 21 18:02:33 2020

             __CFG_CP$OFF 0000               _SSPSTATbits 0094                        l61 07BE  
                      l53 06F6                        l56 0729                        l65 07EA  
                      l92 06D6                        l95 06DC                        l88 070A  
                      l89 070F                        l98 06D5                        u10 06DC  
                      u11 06DB                        u30 07AE                        u31 07AD  
                      u40 07C2                        u41 07C1                        u50 07DB  
                      u51 07DA                        u60 07EE                        u61 07ED  
                      u70 0702                        u71 0701                        u87 07A2  
                      u97 07B4                       l120 0756                       l112 072C  
                     l121 075C                       l113 0784                       l106 06E5  
                     l122 0785                       l114 0732                       l115 0738  
                     l116 073E                       l117 0744                       l118 074A  
                     l119 0750                       _ADC 0786                       l714 06D6  
                     l732 06D1                       l726 06DD                       l830 06FA  
                     l728 06E2                       l760 0790                       l752 0762  
                     l832 0702                       l840 0710                       l770 07B2  
                     l762 0796                       l834 0704                       l850 071D  
                     l842 0714                       l780 07C6                       l772 07B9  
                     l764 079E                       l748 072B                       l836 0706  
                     l852 0720                       l844 0715                       l790 07E6  
                     l774 07BC                       l782 07CC                       l766 07A7  
                     l758 0786                       l838 0709                       l846 0718  
                     l854 06E6                       l792 07E9                       l784 07D3  
                     l776 07BD                       l768 07AE                       l880 076A  
                     l848 071C                       l856 06EB                       l794 07EE  
                     l786 07DB                       l778 07C2                       l858 06F1  
                     l796 07F2                       l788 07DF                       u107 07CE  
                     u117 07E1              __CFG_CPD$OFF 0000                       _adc 0075  
                    ?_ADC 0070              __CFG_LVP$OFF 0000              __CFG_WRT$OFF 0000  
                    _adc2 0074                      _main 06E6                      btemp 007E  
                    start 0000             __CFG_IESO$OFF 0000                     ??_ADC 0071  
                   ?_main 0070             __CFG_WDTE$OFF 0000                     _ANSEL 0188  
                   _PORTA 0005                     _PORTB 0006                     _PORTC 0007  
                   _PORTD 0008                     _TRISA 0085                     _TRISB 0086  
                   _TRISC 0087                     _TRISD 0088            __CFG_FCMEN$OFF 0000  
         __end_of_initOsc 0786                     _setup 0710            __CFG_BOREN$OFF 0000  
         __end_of_spiInit 0710           __end_of_spiRead 06E6                     status 0003  
                   wtemp0 007E            __CFG_MCLRE$OFF 0000           __initialization 07FA  
            __end_of_main 06F9                    ??_main 0074                    _ADRESH 001E  
                  ?_setup 0070                    _ANSELH 0189               initOsc@frec 0072  
                  _TRISC3 043B                    _TRISC4 043C                    _TRISC5 043D  
                  _SSPCON 0014                    _SSPBUF 0013            __CFG_PWRTE$OFF 0000  
               ??_initOsc 0070          __end_of_spiWrite 06D6                 ??_spiInit 0073  
               ??_spiRead 0070   __end_of__initialization 07FC            __pcstackCOMMON 0070  
           __end_of_setup 072A                   ??_setup 0074                __pmaintext 06E6  
 __size_of_spiReceiveWait 0007                   _SSPSTAT 0094                 ?_spiWrite 0070  
                 __ptext1 0710                   __ptext2 06F9                   __ptext3 072A  
                 __ptext4 0786                   __ptext5 06D0                   __ptext6 06DD  
                 __ptext7 06D6              __size_of_ADC 0074                   _initOsc 072A  
                 _spiInit 06F9                   _spiRead 06DD      end_of_initialization 07FC  
              ??_spiWrite 0070                 _TRISAbits 0085               spiWrite@dat 0070  
          _spiReceiveWait 06D6       start_initialization 07FA               __end_of_ADC 07FA  
__CFG_FOSC$INTRC_NOCLKOUT 0000    __end_of_spiReceiveWait 06DD               __pbssCOMMON 0074  
               ___latbits 0002           ?_spiReceiveWait 0070         __size_of_spiWrite 0006  
                ?_initOsc 0070                  ?_spiInit 0070                  ?_spiRead 0070  
          __size_of_setup 001A      spiInit@sTransmitEdge 0072        spiInit@sDataSample 0070  
                _PIR1bits 000C                _ADCON0bits 001F                _ADCON1bits 009F  
        __size_of_initOsc 005C          __size_of_spiInit 0017          __size_of_spiRead 0009  
       __CFG_BOR4V$BOR40V 0000             __size_of_main 0013                  _spiWrite 06D0  
            spiInit@sType 0073         spiInit@sClockIdle 0071          ??_spiReceiveWait 0070  
              _OSCCONbits 008F  
