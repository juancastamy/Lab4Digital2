

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Thu Feb 20 00:18:07 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	intentry,global,class=CODE,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	text6,local,class=CODE,merge=1,delta=2
    15                           	dabs	1,0x7E,2
    16  0000                     
    17                           ; Version 2.10
    18                           ; Generated 31/07/2019 GMT
    19                           ; 
    20                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC16F887 Definitions
    49                           ; 
    50                           ; SFR Addresses
    51  0000                     	;# 
    52  0001                     	;# 
    53  0002                     	;# 
    54  0003                     	;# 
    55  0004                     	;# 
    56  0005                     	;# 
    57  0006                     	;# 
    58  0007                     	;# 
    59  0008                     	;# 
    60  0009                     	;# 
    61  000A                     	;# 
    62  000B                     	;# 
    63  000C                     	;# 
    64  000D                     	;# 
    65  000E                     	;# 
    66  000E                     	;# 
    67  000F                     	;# 
    68  0010                     	;# 
    69  0011                     	;# 
    70  0012                     	;# 
    71  0013                     	;# 
    72  0014                     	;# 
    73  0015                     	;# 
    74  0015                     	;# 
    75  0016                     	;# 
    76  0017                     	;# 
    77  0018                     	;# 
    78  0019                     	;# 
    79  001A                     	;# 
    80  001B                     	;# 
    81  001B                     	;# 
    82  001C                     	;# 
    83  001D                     	;# 
    84  001E                     	;# 
    85  001F                     	;# 
    86  0081                     	;# 
    87  0085                     	;# 
    88  0086                     	;# 
    89  0087                     	;# 
    90  0088                     	;# 
    91  0089                     	;# 
    92  008C                     	;# 
    93  008D                     	;# 
    94  008E                     	;# 
    95  008F                     	;# 
    96  0090                     	;# 
    97  0091                     	;# 
    98  0092                     	;# 
    99  0093                     	;# 
   100  0093                     	;# 
   101  0093                     	;# 
   102  0094                     	;# 
   103  0095                     	;# 
   104  0096                     	;# 
   105  0097                     	;# 
   106  0098                     	;# 
   107  0099                     	;# 
   108  009A                     	;# 
   109  009B                     	;# 
   110  009C                     	;# 
   111  009D                     	;# 
   112  009E                     	;# 
   113  009F                     	;# 
   114  0105                     	;# 
   115  0107                     	;# 
   116  0108                     	;# 
   117  0109                     	;# 
   118  010C                     	;# 
   119  010C                     	;# 
   120  010D                     	;# 
   121  010E                     	;# 
   122  010F                     	;# 
   123  0185                     	;# 
   124  0187                     	;# 
   125  0188                     	;# 
   126  0189                     	;# 
   127  018C                     	;# 
   128  018D                     	;# 
   129  0000                     	;# 
   130  0001                     	;# 
   131  0002                     	;# 
   132  0003                     	;# 
   133  0004                     	;# 
   134  0005                     	;# 
   135  0006                     	;# 
   136  0007                     	;# 
   137  0008                     	;# 
   138  0009                     	;# 
   139  000A                     	;# 
   140  000B                     	;# 
   141  000C                     	;# 
   142  000D                     	;# 
   143  000E                     	;# 
   144  000E                     	;# 
   145  000F                     	;# 
   146  0010                     	;# 
   147  0011                     	;# 
   148  0012                     	;# 
   149  0013                     	;# 
   150  0014                     	;# 
   151  0015                     	;# 
   152  0015                     	;# 
   153  0016                     	;# 
   154  0017                     	;# 
   155  0018                     	;# 
   156  0019                     	;# 
   157  001A                     	;# 
   158  001B                     	;# 
   159  001B                     	;# 
   160  001C                     	;# 
   161  001D                     	;# 
   162  001E                     	;# 
   163  001F                     	;# 
   164  0081                     	;# 
   165  0085                     	;# 
   166  0086                     	;# 
   167  0087                     	;# 
   168  0088                     	;# 
   169  0089                     	;# 
   170  008C                     	;# 
   171  008D                     	;# 
   172  008E                     	;# 
   173  008F                     	;# 
   174  0090                     	;# 
   175  0091                     	;# 
   176  0092                     	;# 
   177  0093                     	;# 
   178  0093                     	;# 
   179  0093                     	;# 
   180  0094                     	;# 
   181  0095                     	;# 
   182  0096                     	;# 
   183  0097                     	;# 
   184  0098                     	;# 
   185  0099                     	;# 
   186  009A                     	;# 
   187  009B                     	;# 
   188  009C                     	;# 
   189  009D                     	;# 
   190  009E                     	;# 
   191  009F                     	;# 
   192  0105                     	;# 
   193  0107                     	;# 
   194  0108                     	;# 
   195  0109                     	;# 
   196  010C                     	;# 
   197  010C                     	;# 
   198  010D                     	;# 
   199  010E                     	;# 
   200  010F                     	;# 
   201  0185                     	;# 
   202  0187                     	;# 
   203  0188                     	;# 
   204  0189                     	;# 
   205  018C                     	;# 
   206  018D                     	;# 
   207  001E                     _ADRESH	set	30
   208  0006                     _PORTB	set	6
   209  000C                     _PIR1bits	set	12
   210  001F                     _ADCON0bits	set	31
   211  0013                     _SSPBUF	set	19
   212  0014                     _SSPCONbits	set	20
   213  000B                     _INTCONbits	set	11
   214  0008                     _PORTD	set	8
   215  00A6                     _SSPOV	set	166
   216  0063                     _SSPIF	set	99
   217  009F                     _ADCON1bits	set	159
   218  0087                     _TRISCbits	set	135
   219  0094                     _SSPSTATbits	set	148
   220  008C                     _PIE1bits	set	140
   221  008F                     _OSCCONbits	set	143
   222  0085                     _TRISAbits	set	133
   223  0086                     _TRISB	set	134
   224  04A0                     _BF	set	1184
   225  0189                     _ANSELH	set	393
   226  0188                     _ANSEL	set	392
   227                           
   228                           ; #config settings
   229  0000                     
   230                           	psect	cinit
   231  000F                     start_initialization:	
   232  000F                     __initialization:	
   233                           
   234                           ; Clear objects allocated to COMMON
   235  000F  01F5               	clrf	__pbssCOMMON& (0+127)
   236  0010  01F6               	clrf	(__pbssCOMMON+1)& (0+127)
   237  0011  01F7               	clrf	(__pbssCOMMON+2)& (0+127)
   238  0012                     end_of_initialization:	
   239                           ;End of C runtime variable initialization code
   240                           
   241  0012                     __end_of__initialization:	
   242  0012  0183               	clrf	3
   243  0013  120A  118A  2880   	ljmp	_main	;jump to C main() function
   244                           
   245                           	psect	bssCOMMON
   246  0075                     __pbssCOMMON:	
   247  0075                     _adc2:	
   248  0075                     	ds	1
   249  0076                     _adc:	
   250  0076                     	ds	1
   251  0077                     _Data:	
   252  0077                     	ds	1
   253                           
   254                           	psect	cstackCOMMON
   255  0070                     __pcstackCOMMON:	
   256  0070                     ?_SPI_Read:	
   257  0070                     ??_SPI_Read:	
   258                           ; 1 bytes @ 0x0
   259                           
   260  0070                     ?_SPI_WRITE_SV:	
   261                           ; 1 bytes @ 0x0
   262                           
   263  0070                     ??_SPI_WRITE_SV:	
   264                           ; 1 bytes @ 0x0
   265                           
   266  0070                     ?_setup:	
   267                           ; 1 bytes @ 0x0
   268                           
   269  0070                     ?_SPI_Slave_Init:	
   270                           ; 1 bytes @ 0x0
   271                           
   272  0070                     ?_ADC:	
   273                           ; 1 bytes @ 0x0
   274                           
   275  0070                     ?_ISR:	
   276                           ; 1 bytes @ 0x0
   277                           
   278  0070                     ?_main:	
   279                           ; 1 bytes @ 0x0
   280                           
   281  0070                     SPI_WRITE_SV@DATA:	
   282                           ; 1 bytes @ 0x0
   283                           
   284                           
   285                           ; 1 bytes @ 0x0
   286  0070                     	ds	1
   287  0071                     SPI_Read@Data:	
   288                           
   289                           ; 1 bytes @ 0x1
   290  0071                     	ds	1
   291  0072                     ??_ISR:	
   292                           
   293                           ; 1 bytes @ 0x2
   294  0072                     	ds	2
   295  0074                     ??_setup:	
   296  0074                     ??_SPI_Slave_Init:	
   297                           ; 1 bytes @ 0x4
   298                           
   299  0074                     ??_ADC:	
   300                           ; 1 bytes @ 0x4
   301                           
   302                           
   303                           ; 1 bytes @ 0x4
   304  0074                     	ds	1
   305  0075                     ??_main:	
   306                           
   307                           	psect	maintext
   308  0080                     __pmaintext:	
   309                           ; 1 bytes @ 0x5
   310 ;;
   311 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   312 ;;
   313 ;; *************** function _main *****************
   314 ;; Defined at:
   315 ;;		line 61 in file "LAB4.c"
   316 ;; Parameters:    Size  Location     Type
   317 ;;		None
   318 ;; Auto vars:     Size  Location     Type
   319 ;;		None
   320 ;; Return value:  Size  Location     Type
   321 ;;                  1    wreg      void 
   322 ;; Registers used:
   323 ;;		wreg, status,2, status,0, pclath, cstack
   324 ;; Tracked objects:
   325 ;;		On entry : B00/0
   326 ;;		On exit  : 0/0
   327 ;;		Unchanged: 0/0
   328 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   329 ;;      Params:         0       0       0       0       0
   330 ;;      Locals:         0       0       0       0       0
   331 ;;      Temps:          0       0       0       0       0
   332 ;;      Totals:         0       0       0       0       0
   333 ;;Total ram usage:        0 bytes
   334 ;; Hardware stack levels required when called:    3
   335 ;; This function calls:
   336 ;;		_ADC
   337 ;;		_SPI_Slave_Init
   338 ;;		_setup
   339 ;; This function is called by:
   340 ;;		Startup code after reset
   341 ;; This function uses a non-reentrant model
   342 ;;
   343                           
   344                           
   345                           ;psect for function _main
   346  0080                     _main:	
   347  0080                     l764:	
   348                           ;incstack = 0
   349                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   350                           
   351                           
   352                           ;LAB4.c: 62:     setup();
   353  0080  120A  118A  2055  120A  118A  	fcall	_setup
   354                           
   355                           ;LAB4.c: 63:     SPI_Slave_Init();
   356  0085  120A  118A  2092  120A  118A  	fcall	_SPI_Slave_Init
   357                           
   358                           ;LAB4.c: 64:     ADC();
   359  008A  120A  118A  2039  120A  118A  	fcall	_ADC
   360  008F                     l70:	
   361  008F  120A  118A  280C   	ljmp	start
   362  0092                     __end_of_main:	
   363                           
   364                           	psect	text1
   365  0055                     __ptext1:	
   366 ;; *************** function _setup *****************
   367 ;; Defined at:
   368 ;;		line 67 in file "LAB4.c"
   369 ;; Parameters:    Size  Location     Type
   370 ;;		None
   371 ;; Auto vars:     Size  Location     Type
   372 ;;		None
   373 ;; Return value:  Size  Location     Type
   374 ;;                  1    wreg      void 
   375 ;; Registers used:
   376 ;;		wreg, status,2, status,0
   377 ;; Tracked objects:
   378 ;;		On entry : 0/0
   379 ;;		On exit  : 0/0
   380 ;;		Unchanged: 0/0
   381 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   382 ;;      Params:         0       0       0       0       0
   383 ;;      Locals:         0       0       0       0       0
   384 ;;      Temps:          0       0       0       0       0
   385 ;;      Totals:         0       0       0       0       0
   386 ;;Total ram usage:        0 bytes
   387 ;; Hardware stack levels used:    1
   388 ;; Hardware stack levels required when called:    2
   389 ;; This function calls:
   390 ;;		Nothing
   391 ;; This function is called by:
   392 ;;		_main
   393 ;; This function uses a non-reentrant model
   394 ;;
   395                           
   396                           
   397                           ;psect for function _setup
   398  0055                     _setup:	
   399  0055                     l698:	
   400                           ;incstack = 0
   401                           ; Regs used in _setup: [wreg+status,2+status,0]
   402                           
   403                           
   404                           ;LAB4.c: 68:     TRISB = 0;
   405  0055  1683               	bsf	3,5	;RP0=1, select bank1
   406  0056  1303               	bcf	3,6	;RP1=0, select bank1
   407  0057  0186               	clrf	6	;volatile
   408  0058                     l700:	
   409                           
   410                           ;LAB4.c: 69:     TRISAbits.TRISA0 = 1;
   411  0058  1405               	bsf	5,0	;volatile
   412  0059                     l702:	
   413                           
   414                           ;LAB4.c: 70:     TRISAbits.TRISA3 = 1;
   415  0059  1585               	bsf	5,3	;volatile
   416  005A                     l704:	
   417                           
   418                           ;LAB4.c: 71:     OSCCONbits.IRCF = 0b110;
   419  005A  080F               	movf	15,w	;volatile
   420  005B  398F               	andlw	-113
   421  005C  3860               	iorlw	96
   422  005D  008F               	movwf	15	;volatile
   423  005E                     l706:	
   424                           
   425                           ;LAB4.c: 72:     OSCCONbits.OSTS= 0;
   426  005E  118F               	bcf	15,3	;volatile
   427  005F                     l708:	
   428                           
   429                           ;LAB4.c: 73:     OSCCONbits.HTS = 0;
   430  005F  110F               	bcf	15,2	;volatile
   431  0060                     l710:	
   432                           
   433                           ;LAB4.c: 74:     OSCCONbits.LTS = 0;
   434  0060  108F               	bcf	15,1	;volatile
   435  0061                     l712:	
   436                           
   437                           ;LAB4.c: 75:     OSCCONbits.SCS = 1;
   438  0061  140F               	bsf	15,0	;volatile
   439  0062                     l714:	
   440                           
   441                           ;LAB4.c: 76:     INTCONbits.GIE = 1;
   442  0062  178B               	bsf	11,7	;volatile
   443  0063                     l716:	
   444                           
   445                           ;LAB4.c: 77:     INTCONbits.PEIE=1;
   446  0063  170B               	bsf	11,6	;volatile
   447  0064                     l718:	
   448                           
   449                           ;LAB4.c: 78:     PIE1bits.SSPIE = 1;
   450  0064  158C               	bsf	12,3	;volatile
   451  0065                     l720:	
   452                           
   453                           ;LAB4.c: 79:     ANSEL = 0b00001001;
   454  0065  3009               	movlw	9
   455  0066  1683               	bsf	3,5	;RP0=1, select bank3
   456  0067  1703               	bsf	3,6	;RP1=1, select bank3
   457  0068  0088               	movwf	8	;volatile
   458  0069                     l722:	
   459                           
   460                           ;LAB4.c: 80:     ANSELH = 0;
   461  0069  0189               	clrf	9	;volatile
   462  006A                     l73:	
   463  006A  0008               	return
   464  006B                     __end_of_setup:	
   465                           
   466                           	psect	text2
   467  0092                     __ptext2:	
   468 ;; *************** function _SPI_Slave_Init *****************
   469 ;; Defined at:
   470 ;;		line 83 in file "LAB4.c"
   471 ;; Parameters:    Size  Location     Type
   472 ;;		None
   473 ;; Auto vars:     Size  Location     Type
   474 ;;		None
   475 ;; Return value:  Size  Location     Type
   476 ;;                  1    wreg      void 
   477 ;; Registers used:
   478 ;;		wreg, status,2, status,0
   479 ;; Tracked objects:
   480 ;;		On entry : 0/0
   481 ;;		On exit  : 0/0
   482 ;;		Unchanged: 0/0
   483 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   484 ;;      Params:         0       0       0       0       0
   485 ;;      Locals:         0       0       0       0       0
   486 ;;      Temps:          0       0       0       0       0
   487 ;;      Totals:         0       0       0       0       0
   488 ;;Total ram usage:        0 bytes
   489 ;; Hardware stack levels used:    1
   490 ;; Hardware stack levels required when called:    2
   491 ;; This function calls:
   492 ;;		Nothing
   493 ;; This function is called by:
   494 ;;		_main
   495 ;; This function uses a non-reentrant model
   496 ;;
   497                           
   498                           
   499                           ;psect for function _SPI_Slave_Init
   500  0092                     _SPI_Slave_Init:	
   501  0092                     l724:	
   502                           ;incstack = 0
   503                           ; Regs used in _SPI_Slave_Init: [wreg+status,2+status,0]
   504                           
   505                           
   506                           ;LAB4.c: 85:     SSPCONbits.SSPM = 0b0100;
   507  0092  1283               	bcf	3,5	;RP0=0, select bank0
   508  0093  1303               	bcf	3,6	;RP1=0, select bank0
   509  0094  0814               	movf	20,w	;volatile
   510  0095  39F0               	andlw	-16
   511  0096  3804               	iorlw	4
   512  0097  0094               	movwf	20	;volatile
   513  0098                     l726:	
   514                           
   515                           ;LAB4.c: 87:     SSPCONbits.SSPEN = 1;
   516  0098  1694               	bsf	20,5	;volatile
   517  0099                     l728:	
   518                           
   519                           ;LAB4.c: 89:     SSPCONbits.CKP = 1;
   520  0099  1614               	bsf	20,4	;volatile
   521  009A                     l730:	
   522                           
   523                           ;LAB4.c: 90:     SSPSTATbits.CKE = 0;
   524  009A  1683               	bsf	3,5	;RP0=1, select bank1
   525  009B  1303               	bcf	3,6	;RP1=0, select bank1
   526  009C  1314               	bcf	20,6	;volatile
   527  009D                     l732:	
   528                           
   529                           ;LAB4.c: 92:     SSPSTATbits.SMP = 0;
   530  009D  1394               	bcf	20,7	;volatile
   531  009E                     l734:	
   532                           
   533                           ;LAB4.c: 94:     TRISCbits.TRISC4 = 1;
   534  009E  1607               	bsf	7,4	;volatile
   535  009F                     l736:	
   536                           
   537                           ;LAB4.c: 95:     TRISCbits.TRISC5 = 0;
   538  009F  1287               	bcf	7,5	;volatile
   539  00A0                     l738:	
   540                           
   541                           ;LAB4.c: 96:     TRISCbits.TRISC3 = 1;
   542  00A0  1587               	bsf	7,3	;volatile
   543  00A1                     l740:	
   544                           
   545                           ;LAB4.c: 97:     TRISAbits.TRISA5 = 1;
   546  00A1  1685               	bsf	5,5	;volatile
   547  00A2                     l76:	
   548  00A2  0008               	return
   549  00A3                     __end_of_SPI_Slave_Init:	
   550                           
   551                           	psect	text3
   552  0039                     __ptext3:	
   553 ;; *************** function _ADC *****************
   554 ;; Defined at:
   555 ;;		line 116 in file "LAB4.c"
   556 ;; Parameters:    Size  Location     Type
   557 ;;		None
   558 ;; Auto vars:     Size  Location     Type
   559 ;;		None
   560 ;; Return value:  Size  Location     Type
   561 ;;                  1    wreg      void 
   562 ;; Registers used:
   563 ;;		wreg, status,2, status,0
   564 ;; Tracked objects:
   565 ;;		On entry : 0/0
   566 ;;		On exit  : 0/0
   567 ;;		Unchanged: 0/0
   568 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   569 ;;      Params:         0       0       0       0       0
   570 ;;      Locals:         0       0       0       0       0
   571 ;;      Temps:          1       0       0       0       0
   572 ;;      Totals:         1       0       0       0       0
   573 ;;Total ram usage:        1 bytes
   574 ;; Hardware stack levels used:    1
   575 ;; Hardware stack levels required when called:    2
   576 ;; This function calls:
   577 ;;		Nothing
   578 ;; This function is called by:
   579 ;;		_main
   580 ;; This function uses a non-reentrant model
   581 ;;
   582                           
   583                           
   584                           ;psect for function _ADC
   585  0039                     _ADC:	
   586  0039                     l86:	
   587                           ;incstack = 0
   588                           ; Regs used in _ADC: [wreg+status,2+status,0]
   589                           ;LAB4.c: 117:     while(1){
   590                           
   591                           
   592                           ;LAB4.c: 118:     ADCON0bits.ADCS0 = 0;
   593  0039  1283               	bcf	3,5	;RP0=0, select bank0
   594  003A  1303               	bcf	3,6	;RP1=0, select bank0
   595  003B  131F               	bcf	31,6	;volatile
   596                           
   597                           ;LAB4.c: 119:     ADCON0bits.ADCS1 = 1;
   598  003C  179F               	bsf	31,7	;volatile
   599                           
   600                           ;LAB4.c: 120:     ADCON0bits.ADON = 1;
   601  003D  141F               	bsf	31,0	;volatile
   602                           
   603                           ;LAB4.c: 121:     ADCON1bits.ADFM = 0;
   604  003E  1683               	bsf	3,5	;RP0=1, select bank1
   605  003F  1303               	bcf	3,6	;RP1=0, select bank1
   606  0040  139F               	bcf	31,7	;volatile
   607                           
   608                           ;LAB4.c: 122:     ADCON1bits.VCFG0 = 0;
   609  0041  121F               	bcf	31,4	;volatile
   610                           
   611                           ;LAB4.c: 123:     ADCON1bits.VCFG1 = 0;
   612  0042  129F               	bcf	31,5	;volatile
   613  0043                     l742:	
   614                           
   615                           ;LAB4.c: 125:         _delay((unsigned long)((1)*(4000000/4000.0)));
   616  0043  30C7               	movlw	199
   617  0044  00F4               	movwf	??_ADC
   618  0045                     u47:	
   619  0045  2846               	nop2
   620  0046  0BF4               	decfsz	??_ADC,f
   621  0047  2845               	goto	u47
   622  0048  2849               	nop2
   623  0049  284A               	nop2
   624  004A                     l744:	
   625                           
   626                           ;LAB4.c: 126:         ADCON0bits.CHS = 0b0000;
   627  004A  30C3               	movlw	-61
   628  004B  1283               	bcf	3,5	;RP0=0, select bank0
   629  004C  1303               	bcf	3,6	;RP1=0, select bank0
   630  004D  059F               	andwf	31,f	;volatile
   631  004E                     l746:	
   632                           
   633                           ;LAB4.c: 127:         ADCON0bits.ADON = 1;
   634  004E  141F               	bsf	31,0	;volatile
   635  004F                     l748:	
   636                           
   637                           ;LAB4.c: 128:         ADCON0bits.GO = 1;
   638  004F  149F               	bsf	31,1	;volatile
   639  0050                     l750:	
   640                           
   641                           ;LAB4.c: 129:         PIR1bits.ADIF = 0;
   642  0050  130C               	bcf	12,6	;volatile
   643  0051                     l752:	
   644                           
   645                           ;LAB4.c: 131:         PORTB = ADRESH;
   646  0051  081E               	movf	30,w	;volatile
   647  0052  0086               	movwf	6	;volatile
   648  0053  2843               	goto	l742
   649  0054  0008               	return
   650  0055                     __end_of_ADC:	
   651                           
   652                           	psect	text4
   653  0016                     __ptext4:	
   654 ;; *************** function _ISR *****************
   655 ;; Defined at:
   656 ;;		line 48 in file "LAB4.c"
   657 ;; Parameters:    Size  Location     Type
   658 ;;		None
   659 ;; Auto vars:     Size  Location     Type
   660 ;;		None
   661 ;; Return value:  Size  Location     Type
   662 ;;                  1    wreg      void 
   663 ;; Registers used:
   664 ;;		wreg, status,2, status,0, pclath, cstack
   665 ;; Tracked objects:
   666 ;;		On entry : 0/0
   667 ;;		On exit  : 0/0
   668 ;;		Unchanged: 0/0
   669 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   670 ;;      Params:         0       0       0       0       0
   671 ;;      Locals:         0       0       0       0       0
   672 ;;      Temps:          2       0       0       0       0
   673 ;;      Totals:         2       0       0       0       0
   674 ;;Total ram usage:        2 bytes
   675 ;; Hardware stack levels used:    1
   676 ;; Hardware stack levels required when called:    1
   677 ;; This function calls:
   678 ;;		_SPI_Read
   679 ;;		_SPI_WRITE_SV
   680 ;; This function is called by:
   681 ;;		Interrupt level 1
   682 ;; This function uses a non-reentrant model
   683 ;;
   684                           
   685                           
   686                           ;psect for function _ISR
   687  0016                     _ISR:	
   688  0016                     i1l754:	
   689                           
   690                           ;LAB4.c: 49:     if (SSPIF == 1){
   691  0016  1283               	bcf	3,5	;RP0=0, select bank0
   692  0017  1303               	bcf	3,6	;RP1=0, select bank0
   693  0018  1D8C               	btfss	12,3	;volatile
   694  0019  281B               	goto	u2_21
   695  001A  281C               	goto	u2_20
   696  001B                     u2_21:	
   697  001B  2832               	goto	i1l65
   698  001C                     u2_20:	
   699  001C                     i1l756:	
   700                           
   701                           ;LAB4.c: 50:         PORTD = SPI_Read();
   702  001C  120A  118A  206B  120A  118A  	fcall	_SPI_Read
   703  0021  1283               	bcf	3,5	;RP0=0, select bank0
   704  0022  1303               	bcf	3,6	;RP1=0, select bank0
   705  0023  0088               	movwf	8	;volatile
   706  0024                     i1l758:	
   707                           
   708                           ;LAB4.c: 51:         if (PORTD==1){
   709  0024  0308               	decf	8,w	;volatile
   710  0025  1D03               	btfss	3,2
   711  0026  2828               	goto	u3_21
   712  0027  2829               	goto	u3_20
   713  0028                     u3_21:	
   714  0028  282F               	goto	i1l762
   715  0029                     u3_20:	
   716  0029                     i1l760:	
   717                           
   718                           ;LAB4.c: 52:             SPI_WRITE_SV(adc);
   719  0029  0876               	movf	_adc,w
   720  002A  120A  118A  20A3  120A  118A  	fcall	_SPI_WRITE_SV
   721  002F                     i1l762:	
   722                           
   723                           ;LAB4.c: 57:         SSPIF = 0;
   724  002F  1283               	bcf	3,5	;RP0=0, select bank0
   725  0030  1303               	bcf	3,6	;RP1=0, select bank0
   726  0031  118C               	bcf	12,3	;volatile
   727  0032                     i1l65:	
   728  0032  0873               	movf	??_ISR+1,w
   729  0033  008A               	movwf	10
   730  0034  0E72               	swapf	??_ISR^(0+4294967168),w
   731  0035  0083               	movwf	3
   732  0036  0EFE               	swapf	btemp,f
   733  0037  0E7E               	swapf	btemp,w
   734  0038  0009               	retfie
   735  0039                     __end_of_ISR:	
   736                           
   737                           	psect	intentry
   738  0004                     __pintentry:	
   739                           ;incstack = 0
   740                           ; Regs used in _ISR: [wreg+status,2+status,0+pclath+cstack]
   741                           
   742  0004                     interrupt_function:	
   743  007E                     saved_w	set	btemp
   744  0004  00FE               	movwf	btemp
   745  0005  0E03               	swapf	3,w
   746  0006  00F2               	movwf	??_ISR
   747  0007  080A               	movf	10,w
   748  0008  00F3               	movwf	??_ISR+1
   749  0009  120A  118A  2816   	ljmp	_ISR
   750                           
   751                           	psect	text5
   752  00A3                     __ptext5:	
   753 ;; *************** function _SPI_WRITE_SV *****************
   754 ;; Defined at:
   755 ;;		line 100 in file "LAB4.c"
   756 ;; Parameters:    Size  Location     Type
   757 ;;  DATA            1    wreg     unsigned char 
   758 ;; Auto vars:     Size  Location     Type
   759 ;;  DATA            1    0[COMMON] unsigned char 
   760 ;; Return value:  Size  Location     Type
   761 ;;                  1    wreg      void 
   762 ;; Registers used:
   763 ;;		wreg
   764 ;; Tracked objects:
   765 ;;		On entry : 0/0
   766 ;;		On exit  : 0/0
   767 ;;		Unchanged: 0/0
   768 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   769 ;;      Params:         0       0       0       0       0
   770 ;;      Locals:         1       0       0       0       0
   771 ;;      Temps:          0       0       0       0       0
   772 ;;      Totals:         1       0       0       0       0
   773 ;;Total ram usage:        1 bytes
   774 ;; Hardware stack levels used:    1
   775 ;; This function calls:
   776 ;;		Nothing
   777 ;; This function is called by:
   778 ;;		_ISR
   779 ;; This function uses a non-reentrant model
   780 ;;
   781                           
   782                           
   783                           ;psect for function _SPI_WRITE_SV
   784  00A3                     _SPI_WRITE_SV:	
   785                           
   786                           ;incstack = 0
   787                           ; Regs used in _SPI_WRITE_SV: [wreg]
   788                           ;SPI_WRITE_SV@DATA stored from wreg
   789  00A3  00F0               	movwf	SPI_WRITE_SV@DATA
   790  00A4                     i1l696:	
   791                           
   792                           ;LAB4.c: 101:     SSPBUF=DATA;
   793  00A4  0870               	movf	SPI_WRITE_SV@DATA,w
   794  00A5  1283               	bcf	3,5	;RP0=0, select bank0
   795  00A6  1303               	bcf	3,6	;RP1=0, select bank0
   796  00A7  0093               	movwf	19	;volatile
   797  00A8                     i1l79:	
   798  00A8  0008               	return
   799  00A9                     __end_of_SPI_WRITE_SV:	
   800                           
   801                           	psect	text6
   802  006B                     __ptext6:	
   803 ;; *************** function _SPI_Read *****************
   804 ;; Defined at:
   805 ;;		line 105 in file "LAB4.c"
   806 ;; Parameters:    Size  Location     Type
   807 ;;		None
   808 ;; Auto vars:     Size  Location     Type
   809 ;;  Data            1    1[COMMON] unsigned char 
   810 ;; Return value:  Size  Location     Type
   811 ;;                  1    wreg      unsigned char 
   812 ;; Registers used:
   813 ;;		wreg
   814 ;; Tracked objects:
   815 ;;		On entry : 0/0
   816 ;;		On exit  : 0/0
   817 ;;		Unchanged: 0/0
   818 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   819 ;;      Params:         0       0       0       0       0
   820 ;;      Locals:         1       0       0       0       0
   821 ;;      Temps:          1       0       0       0       0
   822 ;;      Totals:         2       0       0       0       0
   823 ;;Total ram usage:        2 bytes
   824 ;; Hardware stack levels used:    1
   825 ;; This function calls:
   826 ;;		Nothing
   827 ;; This function is called by:
   828 ;;		_ISR
   829 ;; This function uses a non-reentrant model
   830 ;;
   831                           
   832                           
   833                           ;psect for function _SPI_Read
   834  006B                     _SPI_Read:	
   835  006B                     i1l684:	
   836                           ;incstack = 0
   837                           ; Regs used in _SPI_Read: [wreg]
   838                           
   839                           
   840                           ;LAB4.c: 106:   uint8_t Data;;LAB4.c: 107:   if(BF){
   841  006B  1683               	bsf	3,5	;RP0=1, select bank1
   842  006C  1303               	bcf	3,6	;RP1=0, select bank1
   843  006D  1C14               	btfss	20,0	;volatile
   844  006E  2870               	goto	u1_21
   845  006F  2871               	goto	u1_20
   846  0070                     u1_21:	
   847  0070  287F               	goto	i1l83
   848  0071                     u1_20:	
   849  0071                     i1l686:	
   850                           
   851                           ;LAB4.c: 108:     Data = SSPBUF;
   852  0071  1283               	bcf	3,5	;RP0=0, select bank0
   853  0072  1303               	bcf	3,6	;RP1=0, select bank0
   854  0073  0813               	movf	19,w	;volatile
   855  0074  00F0               	movwf	??_SPI_Read
   856  0075  0870               	movf	??_SPI_Read,w
   857  0076  00F1               	movwf	SPI_Read@Data
   858  0077                     i1l688:	
   859                           
   860                           ;LAB4.c: 109:     BF = 0;
   861  0077  1683               	bsf	3,5	;RP0=1, select bank1
   862  0078  1303               	bcf	3,6	;RP1=0, select bank1
   863  0079  1014               	bcf	20,0	;volatile
   864  007A                     i1l690:	
   865                           
   866                           ;LAB4.c: 110:     SSPIF = 0;
   867  007A  1283               	bcf	3,5	;RP0=0, select bank0
   868  007B  1303               	bcf	3,6	;RP1=0, select bank0
   869  007C  118C               	bcf	12,3	;volatile
   870  007D                     i1l692:	
   871                           
   872                           ;LAB4.c: 111:     SSPOV = 0;
   873  007D  1314               	bcf	20,6	;volatile
   874                           
   875                           ;LAB4.c: 112:     return Data;
   876  007E  0871               	movf	SPI_Read@Data,w
   877  007F                     i1l83:	
   878  007F  0008               	return
   879  0080                     __end_of_SPI_Read:	
   880  007E                     btemp	set	126	;btemp
   881  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         3
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5       8
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_ADC

Critical Paths under _ISR in COMMON

    _ISR->_SPI_Read

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                                _ADC
                     _SPI_Slave_Init
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SPI_Slave_Init                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC                                                  1     1      0       0
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _ISR                                                  2     2      0      30
                                              2 COMMON     2     2      0
                           _SPI_Read
                       _SPI_WRITE_SV
 ---------------------------------------------------------------------------------
 (3) _SPI_WRITE_SV                                         1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) _SPI_Read                                             2     2      0      15
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC
   _SPI_Slave_Init
   _setup

 _ISR (ROOT)
   _SPI_Read
   _SPI_WRITE_SV

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      5       8       1       57.1%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       8       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       8      12        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Thu Feb 20 00:18:07 2020

             __CFG_CP$OFF 0000               _SSPSTATbits 0094                        _BF 04A0  
                      l70 008F                        l73 006A                        l76 00A2  
                      l86 0039                        u47 0045                       _ADC 0039  
                     l700 0058                       l710 0060                       l702 0059  
                     l720 0065                       l712 0061                       l704 005A  
                     l730 009A                       l722 0069                       l714 0062  
                     l706 005E                       l740 00A1                       l732 009D  
                     l724 0092                       l716 0063                       l708 005F  
                     l750 0050                       l742 0043                       l734 009E  
                     l726 0098                       l718 0064                       l752 0051  
                     l744 004A                       l736 009F                       l728 0099  
                     l746 004E                       l738 00A0                       l748 004F  
                     l764 0080                       l698 0055              __CFG_CPD$OFF 0000  
                     _ISR 0016                       _adc 0076                      ?_ADC 0070  
            __CFG_LVP$OFF 0000                      ?_ISR 0070                      i1l65 0032  
                    i1l83 007F                      i1l79 00A8                      _Data 0077  
                    u1_20 0071                      u1_21 0070                      u2_20 001C  
                    u2_21 001B                      u3_20 0029                      u3_21 0028  
            __CFG_WRT$OFF 0000                      _adc2 0075                      _main 0080  
                    btemp 007E            _SPI_Slave_Init 0092                      start 000C  
           __CFG_IESO$OFF 0000                     ??_ADC 0074                     ??_ISR 0072  
                   ?_main 0070             __CFG_WDTE$OFF 0000                     _ANSEL 0188  
                   i1l760 0029                     i1l690 007A                     i1l762 002F  
                   i1l754 0016                     i1l692 007D                     i1l684 006B  
                   i1l756 001C                     i1l686 0071                     i1l758 0024  
                   i1l688 0077                     i1l696 00A4                     _PORTB 0006  
                   _PORTD 0008                     _TRISB 0086                     _SSPIF 0063  
                   _SSPOV 00A6            __CFG_FCMEN$OFF 0000                     _setup 0055  
        __end_of_SPI_Read 0080            __CFG_BOREN$OFF 0000                     pclath 000A  
  __end_of_SPI_Slave_Init 00A3                     status 0003                     wtemp0 007E  
            SPI_Read@Data 0071            __CFG_MCLRE$OFF 0000           __initialization 000F  
            __end_of_main 0092                    ??_main 0075          SPI_WRITE_SV@DATA 0070  
                  _ADRESH 001E                    ?_setup 0070                    _ANSELH 0189  
         ?_SPI_Slave_Init 0070                    _SSPBUF 0013            __CFG_PWRTE$OFF 0000  
                  saved_w 007E   __end_of__initialization 0012            __pcstackCOMMON 0070  
           __end_of_setup 006B                 ?_SPI_Read 0070                   ??_setup 0074  
              __pmaintext 0080                __pintentry 0004                ??_SPI_Read 0070  
                 __ptext1 0055                   __ptext2 0092                   __ptext3 0039  
                 __ptext4 0016                   __ptext5 00A3                   __ptext6 006B  
            __size_of_ADC 001C              __size_of_ISR 0023          ??_SPI_Slave_Init 0074  
    end_of_initialization 0012                 _TRISAbits 0085                 _TRISCbits 0087  
           ?_SPI_WRITE_SV 0070         __size_of_SPI_Read 0015       start_initialization 000F  
          ??_SPI_WRITE_SV 0070               __end_of_ADC 0055               __end_of_ISR 0039  
__CFG_FOSC$INTRC_NOCLKOUT 0000               __pbssCOMMON 0075                 ___latbits 0002  
          __size_of_setup 0016         interrupt_function 0004                  _PIE1bits 008C  
                _PIR1bits 000C      __end_of_SPI_WRITE_SV 00A9                  _SPI_Read 006B  
              _ADCON0bits 001F                _ADCON1bits 009F         __CFG_BOR4V$BOR40V 0000  
           __size_of_main 0012   __size_of_SPI_Slave_Init 0011                _INTCONbits 000B  
                intlevel1 0000     __size_of_SPI_WRITE_SV 0006                _OSCCONbits 008F  
            _SPI_WRITE_SV 00A3                _SSPCONbits 0014  
