

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Thu Feb 20 23:15:24 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	intentry,global,class=CODE,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	text6,local,class=CODE,merge=1,delta=2
    15                           	psect	text7,local,class=CODE,merge=1,delta=2
    16                           	dabs	1,0x7E,2
    17  0000                     
    18                           ; Version 2.10
    19                           ; Generated 31/07/2019 GMT
    20                           ; 
    21                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    22                           ; All rights reserved.
    23                           ; 
    24                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    25                           ; 
    26                           ; Redistribution and use in source and binary forms, with or without modification, are
    27                           ; permitted provided that the following conditions are met:
    28                           ; 
    29                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    30                           ;        conditions and the following disclaimer.
    31                           ; 
    32                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    33                           ;        of conditions and the following disclaimer in the documentation and/or other
    34                           ;        materials provided with the distribution.
    35                           ; 
    36                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    37                           ;        software without specific prior written permission.
    38                           ; 
    39                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    40                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    41                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    42                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    43                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    44                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    45                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    46                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    47                           ; 
    48                           ; 
    49                           ; Code-generator required, PIC16F887 Definitions
    50                           ; 
    51                           ; SFR Addresses
    52  0000                     	;# 
    53  0001                     	;# 
    54  0002                     	;# 
    55  0003                     	;# 
    56  0004                     	;# 
    57  0005                     	;# 
    58  0006                     	;# 
    59  0007                     	;# 
    60  0008                     	;# 
    61  0009                     	;# 
    62  000A                     	;# 
    63  000B                     	;# 
    64  000C                     	;# 
    65  000D                     	;# 
    66  000E                     	;# 
    67  000E                     	;# 
    68  000F                     	;# 
    69  0010                     	;# 
    70  0011                     	;# 
    71  0012                     	;# 
    72  0013                     	;# 
    73  0014                     	;# 
    74  0015                     	;# 
    75  0015                     	;# 
    76  0016                     	;# 
    77  0017                     	;# 
    78  0018                     	;# 
    79  0019                     	;# 
    80  001A                     	;# 
    81  001B                     	;# 
    82  001B                     	;# 
    83  001C                     	;# 
    84  001D                     	;# 
    85  001E                     	;# 
    86  001F                     	;# 
    87  0081                     	;# 
    88  0085                     	;# 
    89  0086                     	;# 
    90  0087                     	;# 
    91  0088                     	;# 
    92  0089                     	;# 
    93  008C                     	;# 
    94  008D                     	;# 
    95  008E                     	;# 
    96  008F                     	;# 
    97  0090                     	;# 
    98  0091                     	;# 
    99  0092                     	;# 
   100  0093                     	;# 
   101  0093                     	;# 
   102  0093                     	;# 
   103  0094                     	;# 
   104  0095                     	;# 
   105  0096                     	;# 
   106  0097                     	;# 
   107  0098                     	;# 
   108  0099                     	;# 
   109  009A                     	;# 
   110  009B                     	;# 
   111  009C                     	;# 
   112  009D                     	;# 
   113  009E                     	;# 
   114  009F                     	;# 
   115  0105                     	;# 
   116  0107                     	;# 
   117  0108                     	;# 
   118  0109                     	;# 
   119  010C                     	;# 
   120  010C                     	;# 
   121  010D                     	;# 
   122  010E                     	;# 
   123  010F                     	;# 
   124  0185                     	;# 
   125  0187                     	;# 
   126  0188                     	;# 
   127  0189                     	;# 
   128  018C                     	;# 
   129  018D                     	;# 
   130  0000                     	;# 
   131  0001                     	;# 
   132  0002                     	;# 
   133  0003                     	;# 
   134  0004                     	;# 
   135  0005                     	;# 
   136  0006                     	;# 
   137  0007                     	;# 
   138  0008                     	;# 
   139  0009                     	;# 
   140  000A                     	;# 
   141  000B                     	;# 
   142  000C                     	;# 
   143  000D                     	;# 
   144  000E                     	;# 
   145  000E                     	;# 
   146  000F                     	;# 
   147  0010                     	;# 
   148  0011                     	;# 
   149  0012                     	;# 
   150  0013                     	;# 
   151  0014                     	;# 
   152  0015                     	;# 
   153  0015                     	;# 
   154  0016                     	;# 
   155  0017                     	;# 
   156  0018                     	;# 
   157  0019                     	;# 
   158  001A                     	;# 
   159  001B                     	;# 
   160  001B                     	;# 
   161  001C                     	;# 
   162  001D                     	;# 
   163  001E                     	;# 
   164  001F                     	;# 
   165  0081                     	;# 
   166  0085                     	;# 
   167  0086                     	;# 
   168  0087                     	;# 
   169  0088                     	;# 
   170  0089                     	;# 
   171  008C                     	;# 
   172  008D                     	;# 
   173  008E                     	;# 
   174  008F                     	;# 
   175  0090                     	;# 
   176  0091                     	;# 
   177  0092                     	;# 
   178  0093                     	;# 
   179  0093                     	;# 
   180  0093                     	;# 
   181  0094                     	;# 
   182  0095                     	;# 
   183  0096                     	;# 
   184  0097                     	;# 
   185  0098                     	;# 
   186  0099                     	;# 
   187  009A                     	;# 
   188  009B                     	;# 
   189  009C                     	;# 
   190  009D                     	;# 
   191  009E                     	;# 
   192  009F                     	;# 
   193  0105                     	;# 
   194  0107                     	;# 
   195  0108                     	;# 
   196  0109                     	;# 
   197  010C                     	;# 
   198  010C                     	;# 
   199  010D                     	;# 
   200  010E                     	;# 
   201  010F                     	;# 
   202  0185                     	;# 
   203  0187                     	;# 
   204  0188                     	;# 
   205  0189                     	;# 
   206  018C                     	;# 
   207  018D                     	;# 
   208  0000                     	;# 
   209  0001                     	;# 
   210  0002                     	;# 
   211  0003                     	;# 
   212  0004                     	;# 
   213  0005                     	;# 
   214  0006                     	;# 
   215  0007                     	;# 
   216  0008                     	;# 
   217  0009                     	;# 
   218  000A                     	;# 
   219  000B                     	;# 
   220  000C                     	;# 
   221  000D                     	;# 
   222  000E                     	;# 
   223  000E                     	;# 
   224  000F                     	;# 
   225  0010                     	;# 
   226  0011                     	;# 
   227  0012                     	;# 
   228  0013                     	;# 
   229  0014                     	;# 
   230  0015                     	;# 
   231  0015                     	;# 
   232  0016                     	;# 
   233  0017                     	;# 
   234  0018                     	;# 
   235  0019                     	;# 
   236  001A                     	;# 
   237  001B                     	;# 
   238  001B                     	;# 
   239  001C                     	;# 
   240  001D                     	;# 
   241  001E                     	;# 
   242  001F                     	;# 
   243  0081                     	;# 
   244  0085                     	;# 
   245  0086                     	;# 
   246  0087                     	;# 
   247  0088                     	;# 
   248  0089                     	;# 
   249  008C                     	;# 
   250  008D                     	;# 
   251  008E                     	;# 
   252  008F                     	;# 
   253  0090                     	;# 
   254  0091                     	;# 
   255  0092                     	;# 
   256  0093                     	;# 
   257  0093                     	;# 
   258  0093                     	;# 
   259  0094                     	;# 
   260  0095                     	;# 
   261  0096                     	;# 
   262  0097                     	;# 
   263  0098                     	;# 
   264  0099                     	;# 
   265  009A                     	;# 
   266  009B                     	;# 
   267  009C                     	;# 
   268  009D                     	;# 
   269  009E                     	;# 
   270  009F                     	;# 
   271  0105                     	;# 
   272  0107                     	;# 
   273  0108                     	;# 
   274  0109                     	;# 
   275  010C                     	;# 
   276  010C                     	;# 
   277  010D                     	;# 
   278  010E                     	;# 
   279  010F                     	;# 
   280  0185                     	;# 
   281  0187                     	;# 
   282  0188                     	;# 
   283  0189                     	;# 
   284  018C                     	;# 
   285  018D                     	;# 
   286  0013                     _SSPBUF	set	19
   287  0014                     _SSPCON	set	20
   288  001E                     _ADRESH	set	30
   289  001F                     _ADCON0bits	set	31
   290  000C                     _PIR1bits	set	12
   291  000B                     _INTCONbits	set	11
   292  0006                     _PORTB	set	6
   293  0008                     _PORTD	set	8
   294  0063                     _SSPIF	set	99
   295  0094                     _SSPSTATbits	set	148
   296  0094                     _SSPSTAT	set	148
   297  009F                     _ADCON1bits	set	159
   298  0085                     _TRISA	set	133
   299  0085                     _TRISAbits	set	133
   300  008C                     _PIE1bits	set	140
   301  0088                     _TRISDbits	set	136
   302  0088                     _TRISD	set	136
   303  0086                     _TRISB	set	134
   304  008F                     _OSCCONbits	set	143
   305  043B                     _TRISC3	set	1083
   306  043C                     _TRISC4	set	1084
   307  043D                     _TRISC5	set	1085
   308  0189                     _ANSELH	set	393
   309  0188                     _ANSEL	set	392
   310                           
   311                           ; #config settings
   312  0000                     
   313                           	psect	cinit
   314  000F                     start_initialization:	
   315  000F                     __initialization:	
   316                           
   317                           ; Clear objects allocated to COMMON
   318  000F  01F7               	clrf	__pbssCOMMON& (0+127)
   319  0010  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
   320  0011                     end_of_initialization:	
   321                           ;End of C runtime variable initialization code
   322                           
   323  0011                     __end_of__initialization:	
   324  0011  0183               	clrf	3
   325  0012  120A  118A  28B0   	ljmp	_main	;jump to C main() function
   326                           
   327                           	psect	bssCOMMON
   328  0077                     __pbssCOMMON:	
   329  0077                     _adc2:	
   330  0077                     	ds	1
   331  0078                     _adc:	
   332  0078                     	ds	1
   333                           
   334                           	psect	cstackCOMMON
   335  0070                     __pcstackCOMMON:	
   336  0070                     ?_spiRead:	
   337  0070                     ??_spiRead:	
   338                           ; 1 bytes @ 0x0
   339                           
   340  0070                     ?_spiWrite:	
   341                           ; 1 bytes @ 0x0
   342                           
   343  0070                     ??_spiWrite:	
   344                           ; 1 bytes @ 0x0
   345                           
   346  0070                     ?_setup:	
   347                           ; 1 bytes @ 0x0
   348                           
   349  0070                     ?_ADC:	
   350                           ; 1 bytes @ 0x0
   351                           
   352  0070                     ?_ISR:	
   353                           ; 1 bytes @ 0x0
   354                           
   355  0070                     ?_main:	
   356                           ; 1 bytes @ 0x0
   357                           
   358  0070                     ?_spiReceiveWait:	
   359                           ; 1 bytes @ 0x0
   360                           
   361  0070                     ??_spiReceiveWait:	
   362                           ; 1 bytes @ 0x0
   363                           
   364  0070                     spiWrite@dat:	
   365                           ; 1 bytes @ 0x0
   366                           
   367                           
   368                           ; 1 bytes @ 0x0
   369  0070                     	ds	1
   370  0071                     ??_ISR:	
   371                           
   372                           ; 1 bytes @ 0x1
   373  0071                     	ds	2
   374  0073                     ??_setup:	
   375  0073                     ?_spiInit:	
   376                           ; 1 bytes @ 0x3
   377                           
   378  0073                     ??_ADC:	
   379                           ; 1 bytes @ 0x3
   380                           
   381  0073                     spiInit@sDataSample:	
   382                           ; 1 bytes @ 0x3
   383                           
   384                           
   385                           ; 1 bytes @ 0x3
   386  0073                     	ds	1
   387  0074                     spiInit@sClockIdle:	
   388                           
   389                           ; 1 bytes @ 0x4
   390  0074                     	ds	1
   391  0075                     spiInit@sTransmitEdge:	
   392                           
   393                           ; 1 bytes @ 0x5
   394  0075                     	ds	1
   395  0076                     ??_spiInit:	
   396  0076                     spiInit@sType:	
   397                           ; 1 bytes @ 0x6
   398                           
   399                           
   400                           ; 1 bytes @ 0x6
   401  0076                     	ds	1
   402  0077                     ??_main:	
   403                           
   404                           	psect	maintext
   405  00B0                     __pmaintext:	
   406                           ; 1 bytes @ 0x7
   407 ;;
   408 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   409 ;;
   410 ;; *************** function _main *****************
   411 ;; Defined at:
   412 ;;		line 60 in file "LAB4.c"
   413 ;; Parameters:    Size  Location     Type
   414 ;;		None
   415 ;; Auto vars:     Size  Location     Type
   416 ;;		None
   417 ;; Return value:  Size  Location     Type
   418 ;;                  1    wreg      void 
   419 ;; Registers used:
   420 ;;		wreg, status,2, status,0, pclath, cstack
   421 ;; Tracked objects:
   422 ;;		On entry : B00/0
   423 ;;		On exit  : 0/0
   424 ;;		Unchanged: 0/0
   425 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   426 ;;      Params:         0       0       0       0       0
   427 ;;      Locals:         0       0       0       0       0
   428 ;;      Temps:          0       0       0       0       0
   429 ;;      Totals:         0       0       0       0       0
   430 ;;Total ram usage:        0 bytes
   431 ;; Hardware stack levels required when called:    4
   432 ;; This function calls:
   433 ;;		_ADC
   434 ;;		_setup
   435 ;;		_spiInit
   436 ;; This function is called by:
   437 ;;		Startup code after reset
   438 ;; This function uses a non-reentrant model
   439 ;;
   440                           
   441                           
   442                           ;psect for function _main
   443  00B0                     _main:	
   444  00B0                     l814:	
   445                           ;incstack = 0
   446                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   447                           
   448                           
   449                           ;LAB4.c: 61:     setup();
   450  00B0  120A  118A  207B  120A  118A  	fcall	_setup
   451                           
   452                           ;LAB4.c: 62:     spiInit(SPI_SLAVE_SS_EN, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE_LOW, SP
      +                          I_IDLE_2_ACTIVE);
   453  00B5  01F3               	clrf	spiInit@sDataSample
   454  00B6  01F4               	clrf	spiInit@sClockIdle
   455  00B7  01F5               	clrf	spiInit@sTransmitEdge
   456  00B8  3024               	movlw	36
   457  00B9  120A  118A  2099  120A  118A  	fcall	_spiInit
   458                           
   459                           ;LAB4.c: 63:     ADC();
   460  00BE  120A  118A  2015  120A  118A  	fcall	_ADC
   461  00C3                     l63:	
   462  00C3  120A  118A  280C   	ljmp	start
   463  00C6                     __end_of_main:	
   464                           
   465                           	psect	text1
   466  0099                     __ptext1:	
   467 ;; *************** function _spiInit *****************
   468 ;; Defined at:
   469 ;;		line 12 in file "SPI_SLAVE.c"
   470 ;; Parameters:    Size  Location     Type
   471 ;;  sType           1    wreg     enum E1264
   472 ;;  sDataSample     1    3[COMMON] enum E1272
   473 ;;  sClockIdle      1    4[COMMON] enum E1276
   474 ;;  sTransmitEdg    1    5[COMMON] enum E1280
   475 ;; Auto vars:     Size  Location     Type
   476 ;;  sType           1    6[COMMON] enum E1264
   477 ;; Return value:  Size  Location     Type
   478 ;;                  1    wreg      void 
   479 ;; Registers used:
   480 ;;		wreg, status,2, status,0
   481 ;; Tracked objects:
   482 ;;		On entry : 0/0
   483 ;;		On exit  : 0/0
   484 ;;		Unchanged: 0/0
   485 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   486 ;;      Params:         3       0       0       0       0
   487 ;;      Locals:         1       0       0       0       0
   488 ;;      Temps:          0       0       0       0       0
   489 ;;      Totals:         4       0       0       0       0
   490 ;;Total ram usage:        4 bytes
   491 ;; Hardware stack levels used:    1
   492 ;; Hardware stack levels required when called:    3
   493 ;; This function calls:
   494 ;;		Nothing
   495 ;; This function is called by:
   496 ;;		_main
   497 ;; This function uses a non-reentrant model
   498 ;;
   499                           
   500                           
   501                           ;psect for function _spiInit
   502  0099                     _spiInit:	
   503                           
   504                           ;incstack = 0
   505                           ; Regs used in _spiInit: [wreg+status,2+status,0]
   506                           ;spiInit@sType stored from wreg
   507  0099  00F6               	movwf	spiInit@sType
   508  009A                     l804:	
   509                           
   510                           ;SPI_SLAVE.c: 12: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Id
      +                          le sClockIdle, Spi_Transmit_Edge sTransmitEdge);SPI_SLAVE.c: 13: {;SPI_SLAVE.c: 14:     
      +                          TRISC5 = 0;
   511  009A  1683               	bsf	3,5	;RP0=1, select bank1
   512  009B  1303               	bcf	3,6	;RP1=0, select bank1
   513  009C  1287               	bcf	7,5	;volatile
   514                           
   515                           ;SPI_SLAVE.c: 15:     TRISC4 = 1;
   516  009D  1607               	bsf	7,4	;volatile
   517                           
   518                           ;SPI_SLAVE.c: 16:     if(sType & 0b00000100)
   519  009E  1D76               	btfss	spiInit@sType,2
   520  009F  28A1               	goto	u61
   521  00A0  28A2               	goto	u60
   522  00A1                     u61:	
   523  00A1  28A6               	goto	l810
   524  00A2                     u60:	
   525  00A2                     l806:	
   526                           
   527                           ;SPI_SLAVE.c: 17:     {;SPI_SLAVE.c: 18:         SSPSTAT = sTransmitEdge;
   528  00A2  0875               	movf	spiInit@sTransmitEdge,w
   529  00A3  0094               	movwf	20	;volatile
   530  00A4                     l808:	
   531                           
   532                           ;SPI_SLAVE.c: 19:         TRISC3 = 1;
   533  00A4  1587               	bsf	7,3	;volatile
   534                           
   535                           ;SPI_SLAVE.c: 20:     }
   536  00A5  28AA               	goto	l90
   537  00A6                     l810:	
   538                           
   539                           ;SPI_SLAVE.c: 22:     {;SPI_SLAVE.c: 23:         SSPSTAT = sDataSample | sTransmitEdge;
   540  00A6  0873               	movf	spiInit@sDataSample,w
   541  00A7  0475               	iorwf	spiInit@sTransmitEdge,w
   542  00A8  0094               	movwf	20	;volatile
   543  00A9                     l812:	
   544                           
   545                           ;SPI_SLAVE.c: 24:         TRISC3 = 0;
   546  00A9  1187               	bcf	7,3	;volatile
   547  00AA                     l90:	
   548                           ;SPI_SLAVE.c: 25:     }
   549                           
   550                           
   551                           ;SPI_SLAVE.c: 27:     SSPCON = sType | sClockIdle;
   552  00AA  0876               	movf	spiInit@sType,w
   553  00AB  0474               	iorwf	spiInit@sClockIdle,w
   554  00AC  1283               	bcf	3,5	;RP0=0, select bank0
   555  00AD  1303               	bcf	3,6	;RP1=0, select bank0
   556  00AE  0094               	movwf	20	;volatile
   557  00AF                     l91:	
   558  00AF  0008               	return
   559  00B0                     __end_of_spiInit:	
   560                           
   561                           	psect	text2
   562  007B                     __ptext2:	
   563 ;; *************** function _setup *****************
   564 ;; Defined at:
   565 ;;		line 66 in file "LAB4.c"
   566 ;; Parameters:    Size  Location     Type
   567 ;;		None
   568 ;; Auto vars:     Size  Location     Type
   569 ;;		None
   570 ;; Return value:  Size  Location     Type
   571 ;;                  1    wreg      void 
   572 ;; Registers used:
   573 ;;		wreg, status,2, status,0
   574 ;; Tracked objects:
   575 ;;		On entry : 0/0
   576 ;;		On exit  : 0/0
   577 ;;		Unchanged: 0/0
   578 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   579 ;;      Params:         0       0       0       0       0
   580 ;;      Locals:         0       0       0       0       0
   581 ;;      Temps:          0       0       0       0       0
   582 ;;      Totals:         0       0       0       0       0
   583 ;;Total ram usage:        0 bytes
   584 ;; Hardware stack levels used:    1
   585 ;; Hardware stack levels required when called:    3
   586 ;; This function calls:
   587 ;;		Nothing
   588 ;; This function is called by:
   589 ;;		_main
   590 ;; This function uses a non-reentrant model
   591 ;;
   592                           
   593                           
   594                           ;psect for function _setup
   595  007B                     _setup:	
   596  007B                     l710:	
   597                           ;incstack = 0
   598                           ; Regs used in _setup: [wreg+status,2+status,0]
   599                           
   600                           
   601                           ;LAB4.c: 67:     OSCCONbits.IRCF = 0b111;
   602  007B  3070               	movlw	112
   603  007C  1683               	bsf	3,5	;RP0=1, select bank1
   604  007D  1303               	bcf	3,6	;RP1=0, select bank1
   605  007E  048F               	iorwf	15,f	;volatile
   606  007F                     l712:	
   607                           
   608                           ;LAB4.c: 68:     OSCCONbits.OSTS= 0;
   609  007F  118F               	bcf	15,3	;volatile
   610  0080                     l714:	
   611                           
   612                           ;LAB4.c: 69:     OSCCONbits.HTS = 0;
   613  0080  110F               	bcf	15,2	;volatile
   614  0081                     l716:	
   615                           
   616                           ;LAB4.c: 70:     OSCCONbits.LTS = 0;
   617  0081  108F               	bcf	15,1	;volatile
   618  0082                     l718:	
   619                           
   620                           ;LAB4.c: 71:     OSCCONbits.SCS = 1;
   621  0082  140F               	bsf	15,0	;volatile
   622  0083                     l720:	
   623                           
   624                           ;LAB4.c: 72:     TRISB = 0;
   625  0083  0186               	clrf	6	;volatile
   626  0084                     l722:	
   627                           
   628                           ;LAB4.c: 73:     TRISD = 0;
   629  0084  0188               	clrf	8	;volatile
   630  0085                     l724:	
   631                           
   632                           ;LAB4.c: 74:     TRISDbits.TRISD1 = 0;
   633  0085  1088               	bcf	8,1	;volatile
   634  0086                     l726:	
   635                           
   636                           ;LAB4.c: 76:     PORTB = 0;
   637  0086  1283               	bcf	3,5	;RP0=0, select bank0
   638  0087  1303               	bcf	3,6	;RP1=0, select bank0
   639  0088  0186               	clrf	6	;volatile
   640  0089                     l728:	
   641                           
   642                           ;LAB4.c: 77:     PORTD = 0;
   643  0089  0188               	clrf	8	;volatile
   644  008A                     l730:	
   645                           
   646                           ;LAB4.c: 79:     INTCONbits.GIE = 1;
   647  008A  178B               	bsf	11,7	;volatile
   648  008B                     l732:	
   649                           
   650                           ;LAB4.c: 80:     INTCONbits.PEIE = 1;
   651  008B  170B               	bsf	11,6	;volatile
   652  008C                     l734:	
   653                           
   654                           ;LAB4.c: 81:     PIR1bits.SSPIF = 0;
   655  008C  118C               	bcf	12,3	;volatile
   656  008D                     l736:	
   657                           
   658                           ;LAB4.c: 82:     PIE1bits.SSPIE = 1;
   659  008D  1683               	bsf	3,5	;RP0=1, select bank1
   660  008E  1303               	bcf	3,6	;RP1=0, select bank1
   661  008F  158C               	bsf	12,3	;volatile
   662  0090                     l738:	
   663                           
   664                           ;LAB4.c: 83:     TRISAbits.TRISA5 = 1;
   665  0090  1685               	bsf	5,5	;volatile
   666  0091                     l740:	
   667                           
   668                           ;LAB4.c: 84:     TRISA = 0b00001001;
   669  0091  3009               	movlw	9
   670  0092  0085               	movwf	5	;volatile
   671  0093                     l742:	
   672                           
   673                           ;LAB4.c: 85:     ANSEL = 0b00001001;
   674  0093  3009               	movlw	9
   675  0094  1683               	bsf	3,5	;RP0=1, select bank3
   676  0095  1703               	bsf	3,6	;RP1=1, select bank3
   677  0096  0088               	movwf	8	;volatile
   678  0097                     l744:	
   679                           
   680                           ;LAB4.c: 86:     ANSELH = 0;
   681  0097  0189               	clrf	9	;volatile
   682  0098                     l66:	
   683  0098  0008               	return
   684  0099                     __end_of_setup:	
   685                           
   686                           	psect	text3
   687  0015                     __ptext3:	
   688 ;; *************** function _ADC *****************
   689 ;; Defined at:
   690 ;;		line 89 in file "LAB4.c"
   691 ;; Parameters:    Size  Location     Type
   692 ;;		None
   693 ;; Auto vars:     Size  Location     Type
   694 ;;		None
   695 ;; Return value:  Size  Location     Type
   696 ;;                  1    wreg      void 
   697 ;; Registers used:
   698 ;;		wreg, status,2, status,0
   699 ;; Tracked objects:
   700 ;;		On entry : 0/0
   701 ;;		On exit  : 0/0
   702 ;;		Unchanged: 0/0
   703 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   704 ;;      Params:         0       0       0       0       0
   705 ;;      Locals:         0       0       0       0       0
   706 ;;      Temps:          2       0       0       0       0
   707 ;;      Totals:         2       0       0       0       0
   708 ;;Total ram usage:        2 bytes
   709 ;; Hardware stack levels used:    1
   710 ;; Hardware stack levels required when called:    3
   711 ;; This function calls:
   712 ;;		Nothing
   713 ;; This function is called by:
   714 ;;		_main
   715 ;; This function uses a non-reentrant model
   716 ;;
   717                           
   718                           
   719                           ;psect for function _ADC
   720  0015                     _ADC:	
   721  0015                     l756:	
   722                           ;incstack = 0
   723                           ; Regs used in _ADC: [wreg+status,2+status,0]
   724                           
   725                           
   726                           ;LAB4.c: 90:     ADCON0bits.ADCS0 = 0;
   727  0015  1283               	bcf	3,5	;RP0=0, select bank0
   728  0016  1303               	bcf	3,6	;RP1=0, select bank0
   729  0017  131F               	bcf	31,6	;volatile
   730                           
   731                           ;LAB4.c: 91:     ADCON0bits.ADCS1 = 1;
   732  0018  179F               	bsf	31,7	;volatile
   733                           
   734                           ;LAB4.c: 92:     ADCON0bits.ADON = 1;
   735  0019  141F               	bsf	31,0	;volatile
   736                           
   737                           ;LAB4.c: 93:     ADCON1bits.ADFM = 0;
   738  001A  1683               	bsf	3,5	;RP0=1, select bank1
   739  001B  1303               	bcf	3,6	;RP1=0, select bank1
   740  001C  139F               	bcf	31,7	;volatile
   741                           
   742                           ;LAB4.c: 94:     ADCON1bits.VCFG0 = 0;
   743  001D  121F               	bcf	31,4	;volatile
   744                           
   745                           ;LAB4.c: 95:     ADCON1bits.VCFG1 = 0;
   746  001E  129F               	bcf	31,5	;volatile
   747  001F                     l758:	
   748                           
   749                           ;LAB4.c: 97:         _delay((unsigned long)((5)*(8000000/4000.0)));
   750  001F  300D               	movlw	13
   751  0020  00F4               	movwf	??_ADC+1
   752  0021  30FB               	movlw	251
   753  0022  00F3               	movwf	??_ADC
   754  0023                     u77:	
   755  0023  0BF3               	decfsz	??_ADC,f
   756  0024  2823               	goto	u77
   757  0025  0BF4               	decfsz	??_ADC+1,f
   758  0026  2823               	goto	u77
   759  0027  2828               	nop2
   760  0028                     l760:	
   761                           
   762                           ;LAB4.c: 98:         ADCON0bits.CHS = 0b0000;
   763  0028  30C3               	movlw	-61
   764  0029  1283               	bcf	3,5	;RP0=0, select bank0
   765  002A  1303               	bcf	3,6	;RP1=0, select bank0
   766  002B  059F               	andwf	31,f	;volatile
   767  002C                     l762:	
   768                           
   769                           ;LAB4.c: 99:         ADCON0bits.ADON = 1;
   770  002C  141F               	bsf	31,0	;volatile
   771  002D                     l764:	
   772                           
   773                           ;LAB4.c: 100:         PIR1bits.ADIF = 0;
   774  002D  130C               	bcf	12,6	;volatile
   775  002E                     l766:	
   776                           
   777                           ;LAB4.c: 101:         ADCON0bits.GO = 1;
   778  002E  149F               	bsf	31,1	;volatile
   779  002F                     l768:	
   780                           
   781                           ;LAB4.c: 102:         adc = ADRESH;
   782  002F  081E               	movf	30,w	;volatile
   783  0030  00F3               	movwf	??_ADC
   784  0031  0873               	movf	??_ADC,w
   785  0032  00F8               	movwf	_adc
   786  0033                     l770:	
   787                           
   788                           ;LAB4.c: 103:         PORTB = adc;
   789  0033  0878               	movf	_adc,w
   790  0034  0086               	movwf	6	;volatile
   791  0035                     l772:	
   792                           
   793                           ;LAB4.c: 104:         _delay((unsigned long)((15)*(8000000/4000.0)));
   794  0035  3027               	movlw	39
   795  0036  00F4               	movwf	??_ADC+1
   796  0037  30F5               	movlw	245
   797  0038  00F3               	movwf	??_ADC
   798  0039                     u87:	
   799  0039  0BF3               	decfsz	??_ADC,f
   800  003A  2839               	goto	u87
   801  003B  0BF4               	decfsz	??_ADC+1,f
   802  003C  2839               	goto	u87
   803                           
   804                           ;LAB4.c: 105:         ADCON0bits.CHS = 0b0011;
   805  003D  1283               	bcf	3,5	;RP0=0, select bank0
   806  003E  1303               	bcf	3,6	;RP1=0, select bank0
   807  003F  081F               	movf	31,w	;volatile
   808  0040  39C3               	andlw	-61
   809  0041  380C               	iorlw	12
   810  0042  009F               	movwf	31	;volatile
   811  0043                     l774:	
   812                           
   813                           ;LAB4.c: 106:         ADCON0bits.ADON = 1;
   814  0043  141F               	bsf	31,0	;volatile
   815  0044                     l776:	
   816                           
   817                           ;LAB4.c: 107:         PIR1bits.ADIF = 0;
   818  0044  130C               	bcf	12,6	;volatile
   819  0045                     l778:	
   820                           
   821                           ;LAB4.c: 108:         ADCON0bits.GO = 1;
   822  0045  149F               	bsf	31,1	;volatile
   823  0046                     l780:	
   824                           
   825                           ;LAB4.c: 109:         adc2 = ADRESH;
   826  0046  081E               	movf	30,w	;volatile
   827  0047  00F3               	movwf	??_ADC
   828  0048  0873               	movf	??_ADC,w
   829  0049  00F7               	movwf	_adc2
   830  004A  281F               	goto	l758
   831  004B  0008               	return
   832  004C                     __end_of_ADC:	
   833                           
   834                           	psect	text4
   835  004C                     __ptext4:	
   836 ;; *************** function _ISR *****************
   837 ;; Defined at:
   838 ;;		line 47 in file "LAB4.c"
   839 ;; Parameters:    Size  Location     Type
   840 ;;		None
   841 ;; Auto vars:     Size  Location     Type
   842 ;;		None
   843 ;; Return value:  Size  Location     Type
   844 ;;                  1    wreg      void 
   845 ;; Registers used:
   846 ;;		wreg, status,2, status,0, pclath, cstack
   847 ;; Tracked objects:
   848 ;;		On entry : 0/0
   849 ;;		On exit  : 0/0
   850 ;;		Unchanged: 0/0
   851 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   852 ;;      Params:         0       0       0       0       0
   853 ;;      Locals:         0       0       0       0       0
   854 ;;      Temps:          2       0       0       0       0
   855 ;;      Totals:         2       0       0       0       0
   856 ;;Total ram usage:        2 bytes
   857 ;; Hardware stack levels used:    1
   858 ;; Hardware stack levels required when called:    2
   859 ;; This function calls:
   860 ;;		_spiRead
   861 ;;		_spiWrite
   862 ;; This function is called by:
   863 ;;		Interrupt level 1
   864 ;; This function uses a non-reentrant model
   865 ;;
   866                           
   867                           
   868                           ;psect for function _ISR
   869  004C                     _ISR:	
   870  004C                     i1l782:	
   871                           
   872                           ;LAB4.c: 48:     PORTD = spiRead();
   873  004C  120A  118A  20C6  120A  118A  	fcall	_spiRead
   874  0051  1283               	bcf	3,5	;RP0=0, select bank0
   875  0052  1303               	bcf	3,6	;RP1=0, select bank0
   876  0053  0088               	movwf	8	;volatile
   877  0054                     i1l784:	
   878                           
   879                           ;LAB4.c: 49:     if (SSPIF == 1){
   880  0054  1D8C               	btfss	12,3	;volatile
   881  0055  2857               	goto	u3_21
   882  0056  2858               	goto	u3_20
   883  0057                     u3_21:	
   884  0057  2874               	goto	i1l58
   885  0058                     u3_20:	
   886  0058                     i1l786:	
   887                           
   888                           ;LAB4.c: 50:         if (PORTD ==1){
   889  0058  0308               	decf	8,w	;volatile
   890  0059  1D03               	btfss	3,2
   891  005A  285C               	goto	u4_21
   892  005B  285D               	goto	u4_20
   893  005C                     u4_21:	
   894  005C  2863               	goto	i1l790
   895  005D                     u4_20:	
   896  005D                     i1l788:	
   897                           
   898                           ;LAB4.c: 51:          spiWrite(adc);
   899  005D  0878               	movf	_adc,w
   900  005E  120A  118A  20D6  120A  118A  	fcall	_spiWrite
   901  0063                     i1l790:	
   902                           
   903                           ;LAB4.c: 53:         if (PORTD == 2){
   904  0063  3002               	movlw	2
   905  0064  1283               	bcf	3,5	;RP0=0, select bank0
   906  0065  1303               	bcf	3,6	;RP1=0, select bank0
   907  0066  0608               	xorwf	8,w	;volatile
   908  0067  1D03               	btfss	3,2
   909  0068  286A               	goto	u5_21
   910  0069  286B               	goto	u5_20
   911  006A                     u5_21:	
   912  006A  2871               	goto	i1l794
   913  006B                     u5_20:	
   914  006B                     i1l792:	
   915                           
   916                           ;LAB4.c: 54:           spiWrite(adc2);
   917  006B  0877               	movf	_adc2,w
   918  006C  120A  118A  20D6  120A  118A  	fcall	_spiWrite
   919  0071                     i1l794:	
   920                           
   921                           ;LAB4.c: 56:         SSPIF = 0;
   922  0071  1283               	bcf	3,5	;RP0=0, select bank0
   923  0072  1303               	bcf	3,6	;RP1=0, select bank0
   924  0073  118C               	bcf	12,3	;volatile
   925  0074                     i1l58:	
   926  0074  0872               	movf	??_ISR+1,w
   927  0075  008A               	movwf	10
   928  0076  0E71               	swapf	??_ISR^(0+4294967168),w
   929  0077  0083               	movwf	3
   930  0078  0EFE               	swapf	btemp,f
   931  0079  0E7E               	swapf	btemp,w
   932  007A  0009               	retfie
   933  007B                     __end_of_ISR:	
   934                           
   935                           	psect	intentry
   936  0004                     __pintentry:	
   937                           ;incstack = 0
   938                           ; Regs used in _ISR: [wreg+status,2+status,0+pclath+cstack]
   939                           
   940  0004                     interrupt_function:	
   941  007E                     saved_w	set	btemp
   942  0004  00FE               	movwf	btemp
   943  0005  0E03               	swapf	3,w
   944  0006  00F1               	movwf	??_ISR
   945  0007  080A               	movf	10,w
   946  0008  00F2               	movwf	??_ISR+1
   947  0009  120A  118A  284C   	ljmp	_ISR
   948                           
   949                           	psect	text5
   950  00D6                     __ptext5:	
   951 ;; *************** function _spiWrite *****************
   952 ;; Defined at:
   953 ;;		line 35 in file "SPI_SLAVE.c"
   954 ;; Parameters:    Size  Location     Type
   955 ;;  dat             1    wreg     unsigned char 
   956 ;; Auto vars:     Size  Location     Type
   957 ;;  dat             1    0[COMMON] unsigned char 
   958 ;; Return value:  Size  Location     Type
   959 ;;                  1    wreg      void 
   960 ;; Registers used:
   961 ;;		wreg
   962 ;; Tracked objects:
   963 ;;		On entry : 0/0
   964 ;;		On exit  : 0/0
   965 ;;		Unchanged: 0/0
   966 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   967 ;;      Params:         0       0       0       0       0
   968 ;;      Locals:         1       0       0       0       0
   969 ;;      Temps:          0       0       0       0       0
   970 ;;      Totals:         1       0       0       0       0
   971 ;;Total ram usage:        1 bytes
   972 ;; Hardware stack levels used:    1
   973 ;; This function calls:
   974 ;;		Nothing
   975 ;; This function is called by:
   976 ;;		_ISR
   977 ;; This function uses a non-reentrant model
   978 ;;
   979                           
   980                           
   981                           ;psect for function _spiWrite
   982  00D6                     _spiWrite:	
   983                           
   984                           ;incstack = 0
   985                           ; Regs used in _spiWrite: [wreg]
   986                           ;spiWrite@dat stored from wreg
   987  00D6  00F0               	movwf	spiWrite@dat
   988  00D7                     i1l708:	
   989                           
   990                           ;SPI_SLAVE.c: 35: void spiWrite(char dat);SPI_SLAVE.c: 36: {;SPI_SLAVE.c: 37:     SSPBUF
      +                           = dat;
   991  00D7  0870               	movf	spiWrite@dat,w
   992  00D8  1283               	bcf	3,5	;RP0=0, select bank0
   993  00D9  1303               	bcf	3,6	;RP1=0, select bank0
   994  00DA  0093               	movwf	19	;volatile
   995  00DB                     i1l100:	
   996  00DB  0008               	return
   997  00DC                     __end_of_spiWrite:	
   998                           
   999                           	psect	text6
  1000  00C6                     __ptext6:	
  1001 ;; *************** function _spiRead *****************
  1002 ;; Defined at:
  1003 ;;		line 48 in file "SPI_SLAVE.c"
  1004 ;; Parameters:    Size  Location     Type
  1005 ;;		None
  1006 ;; Auto vars:     Size  Location     Type
  1007 ;;		None
  1008 ;; Return value:  Size  Location     Type
  1009 ;;                  1    wreg      unsigned char 
  1010 ;; Registers used:
  1011 ;;		wreg, status,2, status,0, pclath, cstack
  1012 ;; Tracked objects:
  1013 ;;		On entry : 0/0
  1014 ;;		On exit  : 0/0
  1015 ;;		Unchanged: 0/0
  1016 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1017 ;;      Params:         0       0       0       0       0
  1018 ;;      Locals:         0       0       0       0       0
  1019 ;;      Temps:          0       0       0       0       0
  1020 ;;      Totals:         0       0       0       0       0
  1021 ;;Total ram usage:        0 bytes
  1022 ;; Hardware stack levels used:    1
  1023 ;; Hardware stack levels required when called:    1
  1024 ;; This function calls:
  1025 ;;		_spiReceiveWait
  1026 ;; This function is called by:
  1027 ;;		_ISR
  1028 ;; This function uses a non-reentrant model
  1029 ;;
  1030                           
  1031                           
  1032                           ;psect for function _spiRead
  1033  00C6                     _spiRead:	
  1034  00C6                     i1l702:	
  1035                           ;incstack = 0
  1036                           ; Regs used in _spiRead: [wreg+status,2+status,0+pclath+cstack]
  1037                           
  1038                           
  1039                           ;SPI_SLAVE.c: 50:     spiReceiveWait();
  1040  00C6  120A  118A  20CF  120A  118A  	fcall	_spiReceiveWait
  1041  00CB                     i1l704:	
  1042                           
  1043                           ;SPI_SLAVE.c: 51:     return(SSPBUF);
  1044  00CB  1283               	bcf	3,5	;RP0=0, select bank0
  1045  00CC  1303               	bcf	3,6	;RP1=0, select bank0
  1046  00CD  0813               	movf	19,w	;volatile
  1047  00CE                     i1l108:	
  1048  00CE  0008               	return
  1049  00CF                     __end_of_spiRead:	
  1050                           
  1051                           	psect	text7
  1052  00CF                     __ptext7:	
  1053 ;; *************** function _spiReceiveWait *****************
  1054 ;; Defined at:
  1055 ;;		line 30 in file "SPI_SLAVE.c"
  1056 ;; Parameters:    Size  Location     Type
  1057 ;;		None
  1058 ;; Auto vars:     Size  Location     Type
  1059 ;;		None
  1060 ;; Return value:  Size  Location     Type
  1061 ;;                  1    wreg      void 
  1062 ;; Registers used:
  1063 ;;		None
  1064 ;; Tracked objects:
  1065 ;;		On entry : 0/0
  1066 ;;		On exit  : 0/0
  1067 ;;		Unchanged: 0/0
  1068 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1069 ;;      Params:         0       0       0       0       0
  1070 ;;      Locals:         0       0       0       0       0
  1071 ;;      Temps:          0       0       0       0       0
  1072 ;;      Totals:         0       0       0       0       0
  1073 ;;Total ram usage:        0 bytes
  1074 ;; Hardware stack levels used:    1
  1075 ;; This function calls:
  1076 ;;		Nothing
  1077 ;; This function is called by:
  1078 ;;		_spiRead
  1079 ;; This function uses a non-reentrant model
  1080 ;;
  1081                           
  1082                           
  1083                           ;psect for function _spiReceiveWait
  1084  00CF                     _spiReceiveWait:	
  1085  00CF                     i1l700:	
  1086                           ;incstack = 0
  1087                           ; Regs used in _spiReceiveWait: []
  1088                           
  1089  00CF                     i1l94:	
  1090                           ;SPI_SLAVE.c: 32:     while ( !SSPSTATbits.BF );
  1091                           
  1092  00CF  1683               	bsf	3,5	;RP0=1, select bank1
  1093  00D0  1303               	bcf	3,6	;RP1=0, select bank1
  1094  00D1  1C14               	btfss	20,0	;volatile
  1095  00D2  28D4               	goto	u1_21
  1096  00D3  28D5               	goto	u1_20
  1097  00D4                     u1_21:	
  1098  00D4  28CF               	goto	i1l94
  1099  00D5                     u1_20:	
  1100  00D5                     i1l97:	
  1101  00D5  0008               	return
  1102  00D6                     __end_of_spiReceiveWait:	
  1103  007E                     btemp	set	126	;btemp
  1104  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7       9
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_spiInit

Critical Paths under _ISR in COMMON

    _ISR->_spiWrite

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     360
                                _ADC
                              _setup
                            _spiInit
 ---------------------------------------------------------------------------------
 (1) _spiInit                                              4     1      3     360
                                              3 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC                                                  2     2      0       0
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _ISR                                                  2     2      0      15
                                              1 COMMON     2     2      0
                            _spiRead
                           _spiWrite
 ---------------------------------------------------------------------------------
 (3) _spiWrite                                             1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (4) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC
   _setup
   _spiInit

 _ISR (ROOT)
   _spiRead
     _spiReceiveWait
   _spiWrite

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      7       9       1       64.3%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       9       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       9      12        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Thu Feb 20 23:15:24 2020

             __CFG_CP$OFF 0000               _SSPSTATbits 0094                        l63 00C3  
                      l66 0098                        l90 00AA                        l91 00AF  
                      u60 00A2                        u61 00A1                        u77 0023  
                      u87 0039                       _ADC 0015                       l710 007B  
                     l720 0083                       l712 007F                       l730 008A  
                     l722 0084                       l714 0080                       l810 00A6  
                     l740 0091                       l732 008B                       l724 0085  
                     l716 0081                       l812 00A9                       l804 009A  
                     l742 0093                       l734 008C                       l726 0086  
                     l718 0082                       l806 00A2                       l814 00B0  
                     l760 0028                       l744 0097                       l736 008D  
                     l728 0089                       l808 00A4                       l770 0033  
                     l762 002C                       l738 0090                       l780 0046  
                     l772 0035                       l764 002D                       l756 0015  
                     l774 0043                       l766 002E                       l758 001F  
                     l776 0044                       l768 002F                       l778 0045  
            __CFG_CPD$OFF 0000                       _ISR 004C                       _adc 0078  
                    ?_ADC 0070              __CFG_LVP$OFF 0000                      ?_ISR 0070  
                    i1l58 0074                      i1l94 00CF                      i1l97 00D5  
                    u1_20 00D5                      u1_21 00D4                      u3_20 0058  
                    u3_21 0057                      u4_20 005D                      u4_21 005C  
                    u5_20 006B                      u5_21 006A              __CFG_WRT$OFF 0000  
                    _adc2 0077                      _main 00B0                      btemp 007E  
                    start 000C             __CFG_IESO$OFF 0000                     ??_ADC 0073  
                   ??_ISR 0071                     ?_main 0070             __CFG_WDTE$OFF 0000  
                   _ANSEL 0188                     i1l100 00DB                     i1l108 00CE  
                   i1l700 00CF                     i1l702 00C6                     i1l704 00CB  
                   i1l708 00D7                     i1l790 0063                     i1l782 004C  
                   i1l792 006B                     i1l784 0054                     i1l794 0071  
                   i1l786 0058                     i1l788 005D                     _PORTB 0006  
                   _PORTD 0008                     _TRISA 0085                     _TRISB 0086  
                   _TRISD 0088                     _SSPIF 0063            __CFG_FCMEN$OFF 0000  
                   _setup 007B            __CFG_BOREN$OFF 0000                     pclath 000A  
         __end_of_spiInit 00B0           __end_of_spiRead 00CF                     status 0003  
                   wtemp0 007E            __CFG_MCLRE$OFF 0000           __initialization 000F  
            __end_of_main 00C6                    ??_main 0077                    _ADRESH 001E  
                  ?_setup 0070                    _ANSELH 0189                    _TRISC3 043B  
                  _TRISC4 043C                    _TRISC5 043D                    _SSPCON 0014  
                  _SSPBUF 0013            __CFG_PWRTE$OFF 0000                    saved_w 007E  
        __end_of_spiWrite 00DC                 ??_spiInit 0076                 ??_spiRead 0070  
 __end_of__initialization 0011            __pcstackCOMMON 0070             __end_of_setup 0099  
                 ??_setup 0073                __pmaintext 00B0                __pintentry 0004  
 __size_of_spiReceiveWait 0007                   _SSPSTAT 0094                 ?_spiWrite 0070  
                 __ptext1 0099                   __ptext2 007B                   __ptext3 0015  
                 __ptext4 004C                   __ptext5 00D6                   __ptext6 00C6  
                 __ptext7 00CF              __size_of_ADC 0037              __size_of_ISR 002F  
                 _spiInit 0099                   _spiRead 00C6      end_of_initialization 0011  
              ??_spiWrite 0070                 _TRISAbits 0085                 _TRISDbits 0088  
             spiWrite@dat 0070            _spiReceiveWait 00CF       start_initialization 000F  
             __end_of_ADC 004C               __end_of_ISR 007B  __CFG_FOSC$INTRC_NOCLKOUT 0000  
  __end_of_spiReceiveWait 00D6               __pbssCOMMON 0077                 ___latbits 0002  
         ?_spiReceiveWait 0070         __size_of_spiWrite 0006                  ?_spiInit 0073  
                ?_spiRead 0070            __size_of_setup 001E      spiInit@sTransmitEdge 0075  
       interrupt_function 0004                  _PIE1bits 008C        spiInit@sDataSample 0073  
                _PIR1bits 000C                _ADCON0bits 001F                _ADCON1bits 009F  
        __size_of_spiInit 0017          __size_of_spiRead 0009         __CFG_BOR4V$BOR40V 0000  
           __size_of_main 0016                  _spiWrite 00D6              spiInit@sType 0076  
       spiInit@sClockIdle 0074                _INTCONbits 000B                  intlevel1 0000  
        ??_spiReceiveWait 0070                _OSCCONbits 008F  
