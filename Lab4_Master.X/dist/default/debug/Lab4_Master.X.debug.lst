

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Fri Feb 21 16:21:28 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	text6,local,class=CODE,merge=1,delta=2
    15                           	psect	text7,local,class=CODE,merge=1,delta=2
    16                           	psect	text8,local,class=CODE,merge=1,delta=2
    17                           	psect	text9,local,class=CODE,merge=1,delta=2
    18                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    19                           	dabs	1,0x7E,2
    20  0000                     
    21                           ; Version 2.10
    22                           ; Generated 31/07/2019 GMT
    23                           ; 
    24                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    25                           ; All rights reserved.
    26                           ; 
    27                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    28                           ; 
    29                           ; Redistribution and use in source and binary forms, with or without modification, are
    30                           ; permitted provided that the following conditions are met:
    31                           ; 
    32                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    33                           ;        conditions and the following disclaimer.
    34                           ; 
    35                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    36                           ;        of conditions and the following disclaimer in the documentation and/or other
    37                           ;        materials provided with the distribution.
    38                           ; 
    39                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    40                           ;        software without specific prior written permission.
    41                           ; 
    42                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    43                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    44                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    45                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    46                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    47                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    48                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    49                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    50                           ; 
    51                           ; 
    52                           ; Code-generator required, PIC16F887 Definitions
    53                           ; 
    54                           ; SFR Addresses
    55  0000                     	;# 
    56  0001                     	;# 
    57  0002                     	;# 
    58  0003                     	;# 
    59  0004                     	;# 
    60  0005                     	;# 
    61  0006                     	;# 
    62  0007                     	;# 
    63  0008                     	;# 
    64  0009                     	;# 
    65  000A                     	;# 
    66  000B                     	;# 
    67  000C                     	;# 
    68  000D                     	;# 
    69  000E                     	;# 
    70  000E                     	;# 
    71  000F                     	;# 
    72  0010                     	;# 
    73  0011                     	;# 
    74  0012                     	;# 
    75  0013                     	;# 
    76  0014                     	;# 
    77  0015                     	;# 
    78  0015                     	;# 
    79  0016                     	;# 
    80  0017                     	;# 
    81  0018                     	;# 
    82  0019                     	;# 
    83  001A                     	;# 
    84  001B                     	;# 
    85  001B                     	;# 
    86  001C                     	;# 
    87  001D                     	;# 
    88  001E                     	;# 
    89  001F                     	;# 
    90  0081                     	;# 
    91  0085                     	;# 
    92  0086                     	;# 
    93  0087                     	;# 
    94  0088                     	;# 
    95  0089                     	;# 
    96  008C                     	;# 
    97  008D                     	;# 
    98  008E                     	;# 
    99  008F                     	;# 
   100  0090                     	;# 
   101  0091                     	;# 
   102  0092                     	;# 
   103  0093                     	;# 
   104  0093                     	;# 
   105  0093                     	;# 
   106  0094                     	;# 
   107  0095                     	;# 
   108  0096                     	;# 
   109  0097                     	;# 
   110  0098                     	;# 
   111  0099                     	;# 
   112  009A                     	;# 
   113  009B                     	;# 
   114  009C                     	;# 
   115  009D                     	;# 
   116  009E                     	;# 
   117  009F                     	;# 
   118  0105                     	;# 
   119  0107                     	;# 
   120  0108                     	;# 
   121  0109                     	;# 
   122  010C                     	;# 
   123  010C                     	;# 
   124  010D                     	;# 
   125  010E                     	;# 
   126  010F                     	;# 
   127  0185                     	;# 
   128  0187                     	;# 
   129  0188                     	;# 
   130  0189                     	;# 
   131  018C                     	;# 
   132  018D                     	;# 
   133  0000                     	;# 
   134  0001                     	;# 
   135  0002                     	;# 
   136  0003                     	;# 
   137  0004                     	;# 
   138  0005                     	;# 
   139  0006                     	;# 
   140  0007                     	;# 
   141  0008                     	;# 
   142  0009                     	;# 
   143  000A                     	;# 
   144  000B                     	;# 
   145  000C                     	;# 
   146  000D                     	;# 
   147  000E                     	;# 
   148  000E                     	;# 
   149  000F                     	;# 
   150  0010                     	;# 
   151  0011                     	;# 
   152  0012                     	;# 
   153  0013                     	;# 
   154  0014                     	;# 
   155  0015                     	;# 
   156  0015                     	;# 
   157  0016                     	;# 
   158  0017                     	;# 
   159  0018                     	;# 
   160  0019                     	;# 
   161  001A                     	;# 
   162  001B                     	;# 
   163  001B                     	;# 
   164  001C                     	;# 
   165  001D                     	;# 
   166  001E                     	;# 
   167  001F                     	;# 
   168  0081                     	;# 
   169  0085                     	;# 
   170  0086                     	;# 
   171  0087                     	;# 
   172  0088                     	;# 
   173  0089                     	;# 
   174  008C                     	;# 
   175  008D                     	;# 
   176  008E                     	;# 
   177  008F                     	;# 
   178  0090                     	;# 
   179  0091                     	;# 
   180  0092                     	;# 
   181  0093                     	;# 
   182  0093                     	;# 
   183  0093                     	;# 
   184  0094                     	;# 
   185  0095                     	;# 
   186  0096                     	;# 
   187  0097                     	;# 
   188  0098                     	;# 
   189  0099                     	;# 
   190  009A                     	;# 
   191  009B                     	;# 
   192  009C                     	;# 
   193  009D                     	;# 
   194  009E                     	;# 
   195  009F                     	;# 
   196  0105                     	;# 
   197  0107                     	;# 
   198  0108                     	;# 
   199  0109                     	;# 
   200  010C                     	;# 
   201  010C                     	;# 
   202  010D                     	;# 
   203  010E                     	;# 
   204  010F                     	;# 
   205  0185                     	;# 
   206  0187                     	;# 
   207  0188                     	;# 
   208  0189                     	;# 
   209  018C                     	;# 
   210  018D                     	;# 
   211  0000                     	;# 
   212  0001                     	;# 
   213  0002                     	;# 
   214  0003                     	;# 
   215  0004                     	;# 
   216  0005                     	;# 
   217  0006                     	;# 
   218  0007                     	;# 
   219  0008                     	;# 
   220  0009                     	;# 
   221  000A                     	;# 
   222  000B                     	;# 
   223  000C                     	;# 
   224  000D                     	;# 
   225  000E                     	;# 
   226  000E                     	;# 
   227  000F                     	;# 
   228  0010                     	;# 
   229  0011                     	;# 
   230  0012                     	;# 
   231  0013                     	;# 
   232  0014                     	;# 
   233  0015                     	;# 
   234  0015                     	;# 
   235  0016                     	;# 
   236  0017                     	;# 
   237  0018                     	;# 
   238  0019                     	;# 
   239  001A                     	;# 
   240  001B                     	;# 
   241  001B                     	;# 
   242  001C                     	;# 
   243  001D                     	;# 
   244  001E                     	;# 
   245  001F                     	;# 
   246  0081                     	;# 
   247  0085                     	;# 
   248  0086                     	;# 
   249  0087                     	;# 
   250  0088                     	;# 
   251  0089                     	;# 
   252  008C                     	;# 
   253  008D                     	;# 
   254  008E                     	;# 
   255  008F                     	;# 
   256  0090                     	;# 
   257  0091                     	;# 
   258  0092                     	;# 
   259  0093                     	;# 
   260  0093                     	;# 
   261  0093                     	;# 
   262  0094                     	;# 
   263  0095                     	;# 
   264  0096                     	;# 
   265  0097                     	;# 
   266  0098                     	;# 
   267  0099                     	;# 
   268  009A                     	;# 
   269  009B                     	;# 
   270  009C                     	;# 
   271  009D                     	;# 
   272  009E                     	;# 
   273  009F                     	;# 
   274  0105                     	;# 
   275  0107                     	;# 
   276  0108                     	;# 
   277  0109                     	;# 
   278  010C                     	;# 
   279  010C                     	;# 
   280  010D                     	;# 
   281  010E                     	;# 
   282  010F                     	;# 
   283  0185                     	;# 
   284  0187                     	;# 
   285  0188                     	;# 
   286  0189                     	;# 
   287  018C                     	;# 
   288  018D                     	;# 
   289  0000                     	;# 
   290  0001                     	;# 
   291  0002                     	;# 
   292  0003                     	;# 
   293  0004                     	;# 
   294  0005                     	;# 
   295  0006                     	;# 
   296  0007                     	;# 
   297  0008                     	;# 
   298  0009                     	;# 
   299  000A                     	;# 
   300  000B                     	;# 
   301  000C                     	;# 
   302  000D                     	;# 
   303  000E                     	;# 
   304  000E                     	;# 
   305  000F                     	;# 
   306  0010                     	;# 
   307  0011                     	;# 
   308  0012                     	;# 
   309  0013                     	;# 
   310  0014                     	;# 
   311  0015                     	;# 
   312  0015                     	;# 
   313  0016                     	;# 
   314  0017                     	;# 
   315  0018                     	;# 
   316  0019                     	;# 
   317  001A                     	;# 
   318  001B                     	;# 
   319  001B                     	;# 
   320  001C                     	;# 
   321  001D                     	;# 
   322  001E                     	;# 
   323  001F                     	;# 
   324  0081                     	;# 
   325  0085                     	;# 
   326  0086                     	;# 
   327  0087                     	;# 
   328  0088                     	;# 
   329  0089                     	;# 
   330  008C                     	;# 
   331  008D                     	;# 
   332  008E                     	;# 
   333  008F                     	;# 
   334  0090                     	;# 
   335  0091                     	;# 
   336  0092                     	;# 
   337  0093                     	;# 
   338  0093                     	;# 
   339  0093                     	;# 
   340  0094                     	;# 
   341  0095                     	;# 
   342  0096                     	;# 
   343  0097                     	;# 
   344  0098                     	;# 
   345  0099                     	;# 
   346  009A                     	;# 
   347  009B                     	;# 
   348  009C                     	;# 
   349  009D                     	;# 
   350  009E                     	;# 
   351  009F                     	;# 
   352  0105                     	;# 
   353  0107                     	;# 
   354  0108                     	;# 
   355  0109                     	;# 
   356  010C                     	;# 
   357  010C                     	;# 
   358  010D                     	;# 
   359  010E                     	;# 
   360  010F                     	;# 
   361  0185                     	;# 
   362  0187                     	;# 
   363  0188                     	;# 
   364  0189                     	;# 
   365  018C                     	;# 
   366  018D                     	;# 
   367  0000                     	;# 
   368  0001                     	;# 
   369  0002                     	;# 
   370  0003                     	;# 
   371  0004                     	;# 
   372  0005                     	;# 
   373  0006                     	;# 
   374  0007                     	;# 
   375  0008                     	;# 
   376  0009                     	;# 
   377  000A                     	;# 
   378  000B                     	;# 
   379  000C                     	;# 
   380  000D                     	;# 
   381  000E                     	;# 
   382  000E                     	;# 
   383  000F                     	;# 
   384  0010                     	;# 
   385  0011                     	;# 
   386  0012                     	;# 
   387  0013                     	;# 
   388  0014                     	;# 
   389  0015                     	;# 
   390  0015                     	;# 
   391  0016                     	;# 
   392  0017                     	;# 
   393  0018                     	;# 
   394  0019                     	;# 
   395  001A                     	;# 
   396  001B                     	;# 
   397  001B                     	;# 
   398  001C                     	;# 
   399  001D                     	;# 
   400  001E                     	;# 
   401  001F                     	;# 
   402  0081                     	;# 
   403  0085                     	;# 
   404  0086                     	;# 
   405  0087                     	;# 
   406  0088                     	;# 
   407  0089                     	;# 
   408  008C                     	;# 
   409  008D                     	;# 
   410  008E                     	;# 
   411  008F                     	;# 
   412  0090                     	;# 
   413  0091                     	;# 
   414  0092                     	;# 
   415  0093                     	;# 
   416  0093                     	;# 
   417  0093                     	;# 
   418  0094                     	;# 
   419  0095                     	;# 
   420  0096                     	;# 
   421  0097                     	;# 
   422  0098                     	;# 
   423  0099                     	;# 
   424  009A                     	;# 
   425  009B                     	;# 
   426  009C                     	;# 
   427  009D                     	;# 
   428  009E                     	;# 
   429  009F                     	;# 
   430  0105                     	;# 
   431  0107                     	;# 
   432  0108                     	;# 
   433  0109                     	;# 
   434  010C                     	;# 
   435  010C                     	;# 
   436  010D                     	;# 
   437  010E                     	;# 
   438  010F                     	;# 
   439  0185                     	;# 
   440  0187                     	;# 
   441  0188                     	;# 
   442  0189                     	;# 
   443  018C                     	;# 
   444  018D                     	;# 
   445  0013                     _SSPBUF	set	19
   446  0014                     _SSPCON	set	20
   447  0019                     _TXREG	set	25
   448  001A                     _RCREG	set	26
   449  000C                     _PIR1bits	set	12
   450  0018                     _RCSTAbits	set	24
   451  000B                     _INTCONbits	set	11
   452  0008                     _PORTDbits	set	8
   453  0008                     _PORTD	set	8
   454  0007                     _PORTC	set	7
   455  0006                     _PORTB	set	6
   456  0005                     _PORTA	set	5
   457  008F                     _OSCCONbits	set	143
   458  0094                     _SSPSTATbits	set	148
   459  0094                     _SSPSTAT	set	148
   460  0098                     _TXSTAbits	set	152
   461  0099                     _SPBRG	set	153
   462  0088                     _TRISDbits	set	136
   463  0088                     _TRISD	set	136
   464  0087                     _TRISCbits	set	135
   465  0087                     _TRISC	set	135
   466  0086                     _TRISB	set	134
   467  0085                     _TRISA	set	133
   468  043B                     _TRISC3	set	1083
   469  043C                     _TRISC4	set	1084
   470  043D                     _TRISC5	set	1085
   471  0189                     _ANSELH	set	393
   472  0188                     _ANSEL	set	392
   473                           
   474                           ; #config settings
   475  0000                     
   476                           	psect	cinit
   477  07F9                     start_initialization:	
   478  07F9                     __initialization:	
   479                           
   480                           ; Clear objects allocated to COMMON
   481  07F9  01FB               	clrf	__pbssCOMMON& (0+127)
   482  07FA  01FC               	clrf	(__pbssCOMMON+1)& (0+127)
   483  07FB  01FD               	clrf	(__pbssCOMMON+2)& (0+127)
   484  07FC                     end_of_initialization:	
   485                           ;End of C runtime variable initialization code
   486                           
   487  07FC                     __end_of__initialization:	
   488  07FC  0183               	clrf	3
   489  07FD  120A  118A  2ED3   	ljmp	_main	;jump to C main() function
   490                           
   491                           	psect	bssCOMMON
   492  007B                     __pbssCOMMON:	
   493  007B                     _cont:	
   494  007B                     	ds	1
   495  007C                     _pot2:	
   496  007C                     	ds	1
   497  007D                     _pot1:	
   498  007D                     	ds	1
   499                           
   500                           	psect	cstackCOMMON
   501  0070                     __pcstackCOMMON:	
   502  0070                     ?_setup:	
   503  0070                     ?_initOsc:	
   504                           ; 1 bytes @ 0x0
   505                           
   506  0070                     ??_initOsc:	
   507                           ; 1 bytes @ 0x0
   508                           
   509  0070                     ?_UART_READ:	
   510                           ; 1 bytes @ 0x0
   511                           
   512  0070                     ??_UART_READ:	
   513                           ; 1 bytes @ 0x0
   514                           
   515  0070                     ?_spiWrite:	
   516                           ; 1 bytes @ 0x0
   517                           
   518  0070                     ??_spiWrite:	
   519                           ; 1 bytes @ 0x0
   520                           
   521  0070                     ?_spiRead:	
   522                           ; 1 bytes @ 0x0
   523                           
   524  0070                     ??_spiRead:	
   525                           ; 1 bytes @ 0x0
   526                           
   527  0070                     ?_UART_WRITE:	
   528                           ; 1 bytes @ 0x0
   529                           
   530  0070                     ??_UART_WRITE:	
   531                           ; 1 bytes @ 0x0
   532                           
   533  0070                     ?_spiInit:	
   534                           ; 1 bytes @ 0x0
   535                           
   536  0070                     ?_main:	
   537                           ; 1 bytes @ 0x0
   538                           
   539  0070                     ?_spiReceiveWait:	
   540                           ; 1 bytes @ 0x0
   541                           
   542  0070                     ??_spiReceiveWait:	
   543                           ; 1 bytes @ 0x0
   544                           
   545  0070                     ?___aldiv:	
   546                           ; 1 bytes @ 0x0
   547                           
   548  0070                     UART_WRITE@data:	
   549                           ; 4 bytes @ 0x0
   550                           
   551  0070                     spiInit@sDataSample:	
   552                           ; 1 bytes @ 0x0
   553                           
   554  0070                     spiWrite@dat:	
   555                           ; 1 bytes @ 0x0
   556                           
   557  0070                     ___aldiv@divisor:	
   558                           ; 1 bytes @ 0x0
   559                           
   560                           
   561                           ; 4 bytes @ 0x0
   562  0070                     	ds	1
   563  0071                     spiInit@sClockIdle:	
   564                           
   565                           ; 1 bytes @ 0x1
   566  0071                     	ds	1
   567  0072                     spiInit@sTransmitEdge:	
   568  0072                     initOsc@frec:	
   569                           ; 1 bytes @ 0x2
   570                           
   571                           
   572                           ; 1 bytes @ 0x2
   573  0072                     	ds	1
   574  0073                     ??_spiInit:	
   575  0073                     spiInit@sType:	
   576                           ; 1 bytes @ 0x3
   577                           
   578                           
   579                           ; 1 bytes @ 0x3
   580  0073                     	ds	1
   581  0074                     ??_setup:	
   582  0074                     ___aldiv@dividend:	
   583                           ; 1 bytes @ 0x4
   584                           
   585                           
   586                           ; 4 bytes @ 0x4
   587  0074                     	ds	4
   588  0078                     ??___aldiv:	
   589                           
   590                           ; 1 bytes @ 0x8
   591  0078                     	ds	1
   592  0079                     ??_main:	
   593                           
   594                           ; 1 bytes @ 0x9
   595  0079                     	ds	2
   596                           
   597                           	psect	cstackBANK0
   598  0020                     __pcstackBANK0:	
   599  0020                     ___aldiv@counter:	
   600                           
   601                           ; 1 bytes @ 0x0
   602  0020                     	ds	1
   603  0021                     ___aldiv@sign:	
   604                           
   605                           ; 1 bytes @ 0x1
   606  0021                     	ds	1
   607  0022                     ___aldiv@quotient:	
   608                           
   609                           ; 4 bytes @ 0x2
   610  0022                     	ds	4
   611  0026                     ?_UART_INIT:	
   612  0026                     UART_INIT@baudrate:	
   613                           ; 1 bytes @ 0x6
   614                           
   615                           
   616                           ; 4 bytes @ 0x6
   617  0026                     	ds	4
   618  002A                     ??_UART_INIT:	
   619                           
   620                           ; 1 bytes @ 0xA
   621  002A                     	ds	12
   622                           
   623                           	psect	maintext
   624  06D3                     __pmaintext:	
   625 ;;
   626 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   627 ;;
   628 ;; *************** function _main *****************
   629 ;; Defined at:
   630 ;;		line 52 in file "Lab4_Master.c"
   631 ;; Parameters:    Size  Location     Type
   632 ;;		None
   633 ;; Auto vars:     Size  Location     Type
   634 ;;		None
   635 ;; Return value:  Size  Location     Type
   636 ;;                  1    wreg      void 
   637 ;; Registers used:
   638 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   639 ;; Tracked objects:
   640 ;;		On entry : B00/0
   641 ;;		On exit  : 0/0
   642 ;;		Unchanged: 0/0
   643 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   644 ;;      Params:         0       0       0       0       0
   645 ;;      Locals:         0       0       0       0       0
   646 ;;      Temps:          2       0       0       0       0
   647 ;;      Totals:         2       0       0       0       0
   648 ;;Total ram usage:        2 bytes
   649 ;; Hardware stack levels required when called:    2
   650 ;; This function calls:
   651 ;;		_UART_INIT
   652 ;;		_UART_READ
   653 ;;		_UART_WRITE
   654 ;;		_initOsc
   655 ;;		_setup
   656 ;;		_spiRead
   657 ;;		_spiWrite
   658 ;; This function is called by:
   659 ;;		Startup code after reset
   660 ;; This function uses a non-reentrant model
   661 ;;
   662                           
   663                           
   664                           ;psect for function _main
   665  06D3                     _main:	
   666  06D3                     l998:	
   667                           ;incstack = 0
   668                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   669                           
   670                           
   671                           ;Lab4_Master.c: 53:     setup();
   672  06D3  120A  118A  25F6  120A  118A  	fcall	_setup
   673  06D8                     l1000:	
   674                           
   675                           ;Lab4_Master.c: 54:     initOsc(7);
   676  06D8  3007               	movlw	7
   677  06D9  120A  118A  2610  120A  118A  	fcall	_initOsc
   678  06DE                     l1002:	
   679                           
   680                           ;Lab4_Master.c: 55:     UART_INIT(9600);
   681  06DE  3000               	movlw	0
   682  06DF  1283               	bcf	3,5	;RP0=0, select bank0
   683  06E0  1303               	bcf	3,6	;RP1=0, select bank0
   684  06E1  00A9               	movwf	UART_INIT@baudrate+3
   685  06E2  3000               	movlw	0
   686  06E3  00A8               	movwf	UART_INIT@baudrate+2
   687  06E4  3025               	movlw	37
   688  06E5  00A7               	movwf	UART_INIT@baudrate+1
   689  06E6  3080               	movlw	128
   690  06E7  00A6               	movwf	UART_INIT@baudrate
   691  06E8  120A  118A  266C  120A  118A  	fcall	_UART_INIT
   692  06ED                     l1004:	
   693                           
   694                           ;Lab4_Master.c: 56:     PORTA = 0;
   695  06ED  1283               	bcf	3,5	;RP0=0, select bank0
   696  06EE  1303               	bcf	3,6	;RP1=0, select bank0
   697  06EF  0185               	clrf	5	;volatile
   698  06F0                     l1006:	
   699                           
   700                           ;Lab4_Master.c: 57:     PORTB = 0;
   701  06F0  0186               	clrf	6	;volatile
   702  06F1                     l1008:	
   703                           
   704                           ;Lab4_Master.c: 58:     PORTC = 0;
   705  06F1  0187               	clrf	7	;volatile
   706  06F2                     l1010:	
   707                           
   708                           ;Lab4_Master.c: 59:     PORTD = 0;
   709  06F2  0188               	clrf	8	;volatile
   710  06F3                     l1012:	
   711                           
   712                           ;Lab4_Master.c: 61:         PORTB = UART_READ();
   713  06F3  120A  118A  25C2  120A  118A  	fcall	_UART_READ
   714  06F8  1283               	bcf	3,5	;RP0=0, select bank0
   715  06F9  1303               	bcf	3,6	;RP1=0, select bank0
   716  06FA  0086               	movwf	6	;volatile
   717  06FB                     l1014:	
   718                           
   719                           ;Lab4_Master.c: 63:         PORTDbits.RD1 = 0;
   720  06FB  1088               	bcf	8,1	;volatile
   721  06FC                     l1016:	
   722                           
   723                           ;Lab4_Master.c: 64:         _delay((unsigned long)((1)*(8000000/4000.0)));
   724  06FC  3003               	movlw	3
   725  06FD  00FA               	movwf	??_main+1
   726  06FE  3097               	movlw	151
   727  06FF  00F9               	movwf	??_main
   728  0700                     u327:	
   729  0700  0BF9               	decfsz	??_main,f
   730  0701  2F00               	goto	u327
   731  0702  0BFA               	decfsz	??_main+1,f
   732  0703  2F00               	goto	u327
   733  0704  2F05               	nop2
   734  0705                     l1018:	
   735                           
   736                           ;Lab4_Master.c: 65:         spiWrite(1);
   737  0705  3001               	movlw	1
   738  0706  120A  118A  25B5  120A  118A  	fcall	_spiWrite
   739  070B                     l1020:	
   740                           
   741                           ;Lab4_Master.c: 66:         pot1 = spiRead();
   742  070B  120A  118A  25CA  120A  118A  	fcall	_spiRead
   743  0710  00F9               	movwf	??_main
   744  0711  0879               	movf	??_main,w
   745  0712  00FD               	movwf	_pot1
   746  0713                     l1022:	
   747                           
   748                           ;Lab4_Master.c: 68:         _delay((unsigned long)((1)*(8000000/4000.0)));
   749  0713  3003               	movlw	3
   750  0714  00FA               	movwf	??_main+1
   751  0715  3097               	movlw	151
   752  0716  00F9               	movwf	??_main
   753  0717                     u337:	
   754  0717  0BF9               	decfsz	??_main,f
   755  0718  2F17               	goto	u337
   756  0719  0BFA               	decfsz	??_main+1,f
   757  071A  2F17               	goto	u337
   758  071B  2F1C               	nop2
   759  071C                     l1024:	
   760                           
   761                           ;Lab4_Master.c: 69:         PORTDbits.RD1 = 1;
   762  071C  1283               	bcf	3,5	;RP0=0, select bank0
   763  071D  1303               	bcf	3,6	;RP1=0, select bank0
   764  071E  1488               	bsf	8,1	;volatile
   765  071F                     l1026:	
   766                           
   767                           ;Lab4_Master.c: 71:         PORTDbits.RD1 = 0;
   768  071F  1088               	bcf	8,1	;volatile
   769  0720                     l1028:	
   770                           
   771                           ;Lab4_Master.c: 72:         _delay((unsigned long)((1)*(8000000/4000.0)));
   772  0720  3003               	movlw	3
   773  0721  00FA               	movwf	??_main+1
   774  0722  3097               	movlw	151
   775  0723  00F9               	movwf	??_main
   776  0724                     u347:	
   777  0724  0BF9               	decfsz	??_main,f
   778  0725  2F24               	goto	u347
   779  0726  0BFA               	decfsz	??_main+1,f
   780  0727  2F24               	goto	u347
   781  0728  2F29               	nop2
   782  0729                     l1030:	
   783                           
   784                           ;Lab4_Master.c: 73:         spiWrite(2);
   785  0729  3002               	movlw	2
   786  072A  120A  118A  25B5  120A  118A  	fcall	_spiWrite
   787  072F                     l1032:	
   788                           
   789                           ;Lab4_Master.c: 74:         pot2= spiRead();
   790  072F  120A  118A  25CA  120A  118A  	fcall	_spiRead
   791  0734  00F9               	movwf	??_main
   792  0735  0879               	movf	??_main,w
   793  0736  00FC               	movwf	_pot2
   794  0737                     l1034:	
   795                           
   796                           ;Lab4_Master.c: 75:         _delay((unsigned long)((1)*(8000000/4000.0)));
   797  0737  3003               	movlw	3
   798  0738  00FA               	movwf	??_main+1
   799  0739  3097               	movlw	151
   800  073A  00F9               	movwf	??_main
   801  073B                     u357:	
   802  073B  0BF9               	decfsz	??_main,f
   803  073C  2F3B               	goto	u357
   804  073D  0BFA               	decfsz	??_main+1,f
   805  073E  2F3B               	goto	u357
   806  073F  2F40               	nop2
   807  0740                     l1036:	
   808                           
   809                           ;Lab4_Master.c: 76:         PORTDbits.RD1 = 1;
   810  0740  1283               	bcf	3,5	;RP0=0, select bank0
   811  0741  1303               	bcf	3,6	;RP1=0, select bank0
   812  0742  1488               	bsf	8,1	;volatile
   813  0743                     l1038:	
   814                           
   815                           ;Lab4_Master.c: 79:         UART_WRITE(pot1);
   816  0743  087D               	movf	_pot1,w
   817  0744  120A  118A  25D3  120A  118A  	fcall	_UART_WRITE
   818  0749                     l1040:	
   819                           
   820                           ;Lab4_Master.c: 80:         _delay((unsigned long)((5)*(8000000/4000.0)));
   821  0749  300D               	movlw	13
   822  074A  00FA               	movwf	??_main+1
   823  074B  30FB               	movlw	251
   824  074C  00F9               	movwf	??_main
   825  074D                     u367:	
   826  074D  0BF9               	decfsz	??_main,f
   827  074E  2F4D               	goto	u367
   828  074F  0BFA               	decfsz	??_main+1,f
   829  0750  2F4D               	goto	u367
   830  0751  2F52               	nop2
   831  0752                     l1042:	
   832                           
   833                           ;Lab4_Master.c: 81:         UART_WRITE(pot2);
   834  0752  087C               	movf	_pot2,w
   835  0753  120A  118A  25D3  120A  118A  	fcall	_UART_WRITE
   836  0758  2EF3               	goto	l1012
   837  0759  120A  118A  2800   	ljmp	start
   838  075C                     __end_of_main:	
   839                           
   840                           	psect	text1
   841  05B5                     __ptext1:	
   842 ;; *************** function _spiWrite *****************
   843 ;; Defined at:
   844 ;;		line 37 in file "SPI_MASTER.c"
   845 ;; Parameters:    Size  Location     Type
   846 ;;  dat             1    wreg     unsigned char 
   847 ;; Auto vars:     Size  Location     Type
   848 ;;  dat             1    0[COMMON] unsigned char 
   849 ;; Return value:  Size  Location     Type
   850 ;;                  1    wreg      void 
   851 ;; Registers used:
   852 ;;		wreg
   853 ;; Tracked objects:
   854 ;;		On entry : 0/0
   855 ;;		On exit  : 0/0
   856 ;;		Unchanged: 0/0
   857 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   858 ;;      Params:         0       0       0       0       0
   859 ;;      Locals:         1       0       0       0       0
   860 ;;      Temps:          0       0       0       0       0
   861 ;;      Totals:         1       0       0       0       0
   862 ;;Total ram usage:        1 bytes
   863 ;; Hardware stack levels used:    1
   864 ;; This function calls:
   865 ;;		Nothing
   866 ;; This function is called by:
   867 ;;		_main
   868 ;; This function uses a non-reentrant model
   869 ;;
   870                           
   871                           
   872                           ;psect for function _spiWrite
   873  05B5                     _spiWrite:	
   874                           
   875                           ;incstack = 0
   876                           ; Regs used in _spiWrite: [wreg]
   877                           ;spiWrite@dat stored from wreg
   878  05B5  00F0               	movwf	spiWrite@dat
   879  05B6                     l832:	
   880                           
   881                           ;SPI_MASTER.c: 37: void spiWrite(char dat);SPI_MASTER.c: 38: {;SPI_MASTER.c: 39:     SSP
      +                          BUF = dat;
   882  05B6  0870               	movf	spiWrite@dat,w
   883  05B7  1283               	bcf	3,5	;RP0=0, select bank0
   884  05B8  1303               	bcf	3,6	;RP1=0, select bank0
   885  05B9  0093               	movwf	19	;volatile
   886  05BA                     l116:	
   887  05BA  0008               	return
   888  05BB                     __end_of_spiWrite:	
   889                           
   890                           	psect	text2
   891  05CA                     __ptext2:	
   892 ;; *************** function _spiRead *****************
   893 ;; Defined at:
   894 ;;		line 50 in file "SPI_MASTER.c"
   895 ;; Parameters:    Size  Location     Type
   896 ;;		None
   897 ;; Auto vars:     Size  Location     Type
   898 ;;		None
   899 ;; Return value:  Size  Location     Type
   900 ;;                  1    wreg      unsigned char 
   901 ;; Registers used:
   902 ;;		wreg, status,2, status,0, pclath, cstack
   903 ;; Tracked objects:
   904 ;;		On entry : 0/0
   905 ;;		On exit  : 0/0
   906 ;;		Unchanged: 0/0
   907 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   908 ;;      Params:         0       0       0       0       0
   909 ;;      Locals:         0       0       0       0       0
   910 ;;      Temps:          0       0       0       0       0
   911 ;;      Totals:         0       0       0       0       0
   912 ;;Total ram usage:        0 bytes
   913 ;; Hardware stack levels used:    1
   914 ;; Hardware stack levels required when called:    1
   915 ;; This function calls:
   916 ;;		_spiReceiveWait
   917 ;; This function is called by:
   918 ;;		_main
   919 ;; This function uses a non-reentrant model
   920 ;;
   921                           
   922                           
   923                           ;psect for function _spiRead
   924  05CA                     _spiRead:	
   925  05CA                     l834:	
   926                           ;incstack = 0
   927                           ; Regs used in _spiRead: [wreg+status,2+status,0+pclath+cstack]
   928                           
   929                           
   930                           ;SPI_MASTER.c: 52:     spiReceiveWait();
   931  05CA  120A  118A  25BB  120A  118A  	fcall	_spiReceiveWait
   932  05CF                     l836:	
   933                           
   934                           ;SPI_MASTER.c: 53:     return(SSPBUF);
   935  05CF  1283               	bcf	3,5	;RP0=0, select bank0
   936  05D0  1303               	bcf	3,6	;RP1=0, select bank0
   937  05D1  0813               	movf	19,w	;volatile
   938  05D2                     l124:	
   939  05D2  0008               	return
   940  05D3                     __end_of_spiRead:	
   941                           
   942                           	psect	text3
   943  05BB                     __ptext3:	
   944 ;; *************** function _spiReceiveWait *****************
   945 ;; Defined at:
   946 ;;		line 32 in file "SPI_MASTER.c"
   947 ;; Parameters:    Size  Location     Type
   948 ;;		None
   949 ;; Auto vars:     Size  Location     Type
   950 ;;		None
   951 ;; Return value:  Size  Location     Type
   952 ;;                  1    wreg      void 
   953 ;; Registers used:
   954 ;;		None
   955 ;; Tracked objects:
   956 ;;		On entry : 0/0
   957 ;;		On exit  : 0/0
   958 ;;		Unchanged: 0/0
   959 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   960 ;;      Params:         0       0       0       0       0
   961 ;;      Locals:         0       0       0       0       0
   962 ;;      Temps:          0       0       0       0       0
   963 ;;      Totals:         0       0       0       0       0
   964 ;;Total ram usage:        0 bytes
   965 ;; Hardware stack levels used:    1
   966 ;; This function calls:
   967 ;;		Nothing
   968 ;; This function is called by:
   969 ;;		_spiRead
   970 ;; This function uses a non-reentrant model
   971 ;;
   972                           
   973                           
   974                           ;psect for function _spiReceiveWait
   975  05BB                     _spiReceiveWait:	
   976  05BB                     l742:	
   977                           ;incstack = 0
   978                           ; Regs used in _spiReceiveWait: []
   979                           
   980  05BB                     l110:	
   981                           ;SPI_MASTER.c: 34:     while ( !SSPSTATbits.BF );
   982                           
   983  05BB  1683               	bsf	3,5	;RP0=1, select bank1
   984  05BC  1303               	bcf	3,6	;RP1=0, select bank1
   985  05BD  1C14               	btfss	20,0	;volatile
   986  05BE  2DC0               	goto	u21
   987  05BF  2DC1               	goto	u20
   988  05C0                     u21:	
   989  05C0  2DBB               	goto	l110
   990  05C1                     u20:	
   991  05C1                     l113:	
   992  05C1  0008               	return
   993  05C2                     __end_of_spiReceiveWait:	
   994                           
   995                           	psect	text4
   996  05F6                     __ptext4:	
   997 ;; *************** function _setup *****************
   998 ;; Defined at:
   999 ;;		line 86 in file "Lab4_Master.c"
  1000 ;; Parameters:    Size  Location     Type
  1001 ;;		None
  1002 ;; Auto vars:     Size  Location     Type
  1003 ;;		None
  1004 ;; Return value:  Size  Location     Type
  1005 ;;                  1    wreg      void 
  1006 ;; Registers used:
  1007 ;;		wreg, status,2, status,0, pclath, cstack
  1008 ;; Tracked objects:
  1009 ;;		On entry : 0/0
  1010 ;;		On exit  : 0/0
  1011 ;;		Unchanged: 0/0
  1012 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1013 ;;      Params:         0       0       0       0       0
  1014 ;;      Locals:         0       0       0       0       0
  1015 ;;      Temps:          0       0       0       0       0
  1016 ;;      Totals:         0       0       0       0       0
  1017 ;;Total ram usage:        0 bytes
  1018 ;; Hardware stack levels used:    1
  1019 ;; Hardware stack levels required when called:    1
  1020 ;; This function calls:
  1021 ;;		_spiInit
  1022 ;; This function is called by:
  1023 ;;		_main
  1024 ;; This function uses a non-reentrant model
  1025 ;;
  1026                           
  1027                           
  1028                           ;psect for function _setup
  1029  05F6                     _setup:	
  1030  05F6                     l966:	
  1031                           ;incstack = 0
  1032                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
  1033                           
  1034                           
  1035                           ;Lab4_Master.c: 87:     TRISA = 0;
  1036  05F6  1683               	bsf	3,5	;RP0=1, select bank1
  1037  05F7  1303               	bcf	3,6	;RP1=0, select bank1
  1038  05F8  0185               	clrf	5	;volatile
  1039                           
  1040                           ;Lab4_Master.c: 88:     TRISB = 0;
  1041  05F9  0186               	clrf	6	;volatile
  1042                           
  1043                           ;Lab4_Master.c: 89:     TRISC = 0;
  1044  05FA  0187               	clrf	7	;volatile
  1045  05FB                     l968:	
  1046                           
  1047                           ;Lab4_Master.c: 90:     TRISCbits.TRISC4 = 1;
  1048  05FB  1607               	bsf	7,4	;volatile
  1049  05FC                     l970:	
  1050                           
  1051                           ;Lab4_Master.c: 91:     TRISCbits.TRISC7 = 1;
  1052  05FC  1787               	bsf	7,7	;volatile
  1053                           
  1054                           ;Lab4_Master.c: 92:     TRISD = 0;
  1055  05FD  0188               	clrf	8	;volatile
  1056  05FE                     l972:	
  1057                           
  1058                           ;Lab4_Master.c: 93:     TRISDbits.TRISD1 = 0;
  1059  05FE  1088               	bcf	8,1	;volatile
  1060                           
  1061                           ;Lab4_Master.c: 94:     ANSEL = 0;
  1062  05FF  1683               	bsf	3,5	;RP0=1, select bank3
  1063  0600  1703               	bsf	3,6	;RP1=1, select bank3
  1064  0601  0188               	clrf	8	;volatile
  1065                           
  1066                           ;Lab4_Master.c: 95:     ANSELH = 0;
  1067  0602  0189               	clrf	9	;volatile
  1068  0603                     l974:	
  1069                           
  1070                           ;Lab4_Master.c: 96:     INTCONbits.GIE = 1;
  1071  0603  178B               	bsf	11,7	;volatile
  1072  0604                     l976:	
  1073                           
  1074                           ;Lab4_Master.c: 97:     INTCONbits.PEIE = 1;
  1075  0604  170B               	bsf	11,6	;volatile
  1076  0605                     l978:	
  1077                           
  1078                           ;Lab4_Master.c: 98:     INTCONbits.T0IE = 1;
  1079  0605  168B               	bsf	11,5	;volatile
  1080  0606                     l980:	
  1081                           
  1082                           ;Lab4_Master.c: 99:     spiInit(SPI_MASTER_OSC_DIV4, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_I
      +                          DLE_LOW, SPI_IDLE_2_ACTIVE);
  1083  0606  01F0               	clrf	spiInit@sDataSample
  1084  0607  01F1               	clrf	spiInit@sClockIdle
  1085  0608  01F2               	clrf	spiInit@sTransmitEdge
  1086  0609  3020               	movlw	32
  1087  060A  120A  118A  25DF  120A  118A  	fcall	_spiInit
  1088  060F                     l63:	
  1089  060F  0008               	return
  1090  0610                     __end_of_setup:	
  1091                           
  1092                           	psect	text5
  1093  05DF                     __ptext5:	
  1094 ;; *************** function _spiInit *****************
  1095 ;; Defined at:
  1096 ;;		line 13 in file "SPI_MASTER.c"
  1097 ;; Parameters:    Size  Location     Type
  1098 ;;  sType           1    wreg     enum E1264
  1099 ;;  sDataSample     1    0[COMMON] enum E1272
  1100 ;;  sClockIdle      1    1[COMMON] enum E1276
  1101 ;;  sTransmitEdg    1    2[COMMON] enum E1280
  1102 ;; Auto vars:     Size  Location     Type
  1103 ;;  sType           1    3[COMMON] enum E1264
  1104 ;; Return value:  Size  Location     Type
  1105 ;;                  1    wreg      void 
  1106 ;; Registers used:
  1107 ;;		wreg, status,2, status,0
  1108 ;; Tracked objects:
  1109 ;;		On entry : 0/0
  1110 ;;		On exit  : 0/0
  1111 ;;		Unchanged: 0/0
  1112 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1113 ;;      Params:         3       0       0       0       0
  1114 ;;      Locals:         1       0       0       0       0
  1115 ;;      Temps:          0       0       0       0       0
  1116 ;;      Totals:         4       0       0       0       0
  1117 ;;Total ram usage:        4 bytes
  1118 ;; Hardware stack levels used:    1
  1119 ;; This function calls:
  1120 ;;		Nothing
  1121 ;; This function is called by:
  1122 ;;		_setup
  1123 ;; This function uses a non-reentrant model
  1124 ;;
  1125                           
  1126                           
  1127                           ;psect for function _spiInit
  1128  05DF                     _spiInit:	
  1129                           
  1130                           ;incstack = 0
  1131                           ; Regs used in _spiInit: [wreg+status,2+status,0]
  1132                           ;spiInit@sType stored from wreg
  1133  05DF  00F3               	movwf	spiInit@sType
  1134  05E0                     l916:	
  1135                           
  1136                           ;SPI_MASTER.c: 13: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_I
      +                          dle sClockIdle, Spi_Transmit_Edge sTransmitEdge);SPI_MASTER.c: 14: {;SPI_MASTER.c: 15:  
      +                             TRISC5 = 0;
  1137  05E0  1683               	bsf	3,5	;RP0=1, select bank1
  1138  05E1  1303               	bcf	3,6	;RP1=0, select bank1
  1139  05E2  1287               	bcf	7,5	;volatile
  1140                           
  1141                           ;SPI_MASTER.c: 16:     TRISC4 = 1;
  1142  05E3  1607               	bsf	7,4	;volatile
  1143                           
  1144                           ;SPI_MASTER.c: 18:     if(sType & 0b00000100)
  1145  05E4  1D73               	btfss	spiInit@sType,2
  1146  05E5  2DE7               	goto	u181
  1147  05E6  2DE8               	goto	u180
  1148  05E7                     u181:	
  1149  05E7  2DEC               	goto	l922
  1150  05E8                     u180:	
  1151  05E8                     l918:	
  1152                           
  1153                           ;SPI_MASTER.c: 19:     {;SPI_MASTER.c: 20:         SSPSTAT = sTransmitEdge;
  1154  05E8  0872               	movf	spiInit@sTransmitEdge,w
  1155  05E9  0094               	movwf	20	;volatile
  1156  05EA                     l920:	
  1157                           
  1158                           ;SPI_MASTER.c: 21:         TRISC3 = 1;
  1159  05EA  1587               	bsf	7,3	;volatile
  1160                           
  1161                           ;SPI_MASTER.c: 22:     }
  1162  05EB  2DF0               	goto	l106
  1163  05EC                     l922:	
  1164                           
  1165                           ;SPI_MASTER.c: 24:     {;SPI_MASTER.c: 25:         SSPSTAT = sDataSample | sTransmitEdge
      +                          ;
  1166  05EC  0870               	movf	spiInit@sDataSample,w
  1167  05ED  0472               	iorwf	spiInit@sTransmitEdge,w
  1168  05EE  0094               	movwf	20	;volatile
  1169  05EF                     l924:	
  1170                           
  1171                           ;SPI_MASTER.c: 26:         TRISC3 = 0;
  1172  05EF  1187               	bcf	7,3	;volatile
  1173  05F0                     l106:	
  1174                           ;SPI_MASTER.c: 27:     }
  1175                           
  1176                           
  1177                           ;SPI_MASTER.c: 29:     SSPCON = sType | sClockIdle;
  1178  05F0  0873               	movf	spiInit@sType,w
  1179  05F1  0471               	iorwf	spiInit@sClockIdle,w
  1180  05F2  1283               	bcf	3,5	;RP0=0, select bank0
  1181  05F3  1303               	bcf	3,6	;RP1=0, select bank0
  1182  05F4  0094               	movwf	20	;volatile
  1183  05F5                     l107:	
  1184  05F5  0008               	return
  1185  05F6                     __end_of_spiInit:	
  1186                           
  1187                           	psect	text6
  1188  0610                     __ptext6:	
  1189 ;; *************** function _initOsc *****************
  1190 ;; Defined at:
  1191 ;;		line 8 in file "OSCI.c"
  1192 ;; Parameters:    Size  Location     Type
  1193 ;;  frec            1    wreg     unsigned char 
  1194 ;; Auto vars:     Size  Location     Type
  1195 ;;  frec            1    2[COMMON] unsigned char 
  1196 ;; Return value:  Size  Location     Type
  1197 ;;                  1    wreg      void 
  1198 ;; Registers used:
  1199 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1200 ;; Tracked objects:
  1201 ;;		On entry : 0/0
  1202 ;;		On exit  : 0/0
  1203 ;;		Unchanged: 0/0
  1204 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1205 ;;      Params:         0       0       0       0       0
  1206 ;;      Locals:         1       0       0       0       0
  1207 ;;      Temps:          2       0       0       0       0
  1208 ;;      Totals:         3       0       0       0       0
  1209 ;;Total ram usage:        3 bytes
  1210 ;; Hardware stack levels used:    1
  1211 ;; This function calls:
  1212 ;;		Nothing
  1213 ;; This function is called by:
  1214 ;;		_main
  1215 ;; This function uses a non-reentrant model
  1216 ;;
  1217                           
  1218                           
  1219                           ;psect for function _initOsc
  1220  0610                     _initOsc:	
  1221                           
  1222                           ;incstack = 0
  1223                           ; Regs used in _initOsc: [wreg-fsr0h+status,2+status,0]
  1224                           ;initOsc@frec stored from wreg
  1225  0610  00F2               	movwf	initOsc@frec
  1226  0611                     l800:	
  1227                           
  1228                           ;OSCI.c: 9:     switch(frec){
  1229  0611  2E48               	goto	l804
  1230  0612                     l130:	
  1231                           ;OSCI.c: 10:         case 0:
  1232                           
  1233                           
  1234                           ;OSCI.c: 11:             OSCCONbits.IRCF0 = 0;
  1235  0612  1683               	bsf	3,5	;RP0=1, select bank1
  1236  0613  1303               	bcf	3,6	;RP1=0, select bank1
  1237  0614  120F               	bcf	15,4	;volatile
  1238                           
  1239                           ;OSCI.c: 12:             OSCCONbits.IRCF1 = 0;
  1240  0615  128F               	bcf	15,5	;volatile
  1241                           
  1242                           ;OSCI.c: 13:             OSCCONbits.IRCF2 = 0;
  1243  0616  130F               	bcf	15,6	;volatile
  1244                           
  1245                           ;OSCI.c: 14:             break;
  1246  0617  2E6A               	goto	l131
  1247  0618                     l132:	
  1248                           ;OSCI.c: 15:         case 1:
  1249                           
  1250                           
  1251                           ;OSCI.c: 16:             OSCCONbits.IRCF0 = 1;
  1252  0618  1683               	bsf	3,5	;RP0=1, select bank1
  1253  0619  1303               	bcf	3,6	;RP1=0, select bank1
  1254  061A  160F               	bsf	15,4	;volatile
  1255                           
  1256                           ;OSCI.c: 17:             OSCCONbits.IRCF1 = 0;
  1257  061B  128F               	bcf	15,5	;volatile
  1258                           
  1259                           ;OSCI.c: 18:             OSCCONbits.IRCF2 = 0;
  1260  061C  130F               	bcf	15,6	;volatile
  1261                           
  1262                           ;OSCI.c: 19:             break;
  1263  061D  2E6A               	goto	l131
  1264  061E                     l133:	
  1265                           ;OSCI.c: 20:         case 2:
  1266                           
  1267                           
  1268                           ;OSCI.c: 21:             OSCCONbits.IRCF0 = 0;
  1269  061E  1683               	bsf	3,5	;RP0=1, select bank1
  1270  061F  1303               	bcf	3,6	;RP1=0, select bank1
  1271  0620  120F               	bcf	15,4	;volatile
  1272                           
  1273                           ;OSCI.c: 22:             OSCCONbits.IRCF1 = 1;
  1274  0621  168F               	bsf	15,5	;volatile
  1275                           
  1276                           ;OSCI.c: 23:             OSCCONbits.IRCF2 = 0;
  1277  0622  130F               	bcf	15,6	;volatile
  1278                           
  1279                           ;OSCI.c: 24:             break;
  1280  0623  2E6A               	goto	l131
  1281  0624                     l134:	
  1282                           ;OSCI.c: 25:         case 3:
  1283                           
  1284                           
  1285                           ;OSCI.c: 26:             OSCCONbits.IRCF0 = 1;
  1286  0624  1683               	bsf	3,5	;RP0=1, select bank1
  1287  0625  1303               	bcf	3,6	;RP1=0, select bank1
  1288  0626  160F               	bsf	15,4	;volatile
  1289                           
  1290                           ;OSCI.c: 27:             OSCCONbits.IRCF1 = 1;
  1291  0627  168F               	bsf	15,5	;volatile
  1292                           
  1293                           ;OSCI.c: 28:             OSCCONbits.IRCF2 = 0;
  1294  0628  130F               	bcf	15,6	;volatile
  1295                           
  1296                           ;OSCI.c: 29:             break;
  1297  0629  2E6A               	goto	l131
  1298  062A                     l135:	
  1299                           ;OSCI.c: 30:         case 4:
  1300                           
  1301                           
  1302                           ;OSCI.c: 31:             OSCCONbits.IRCF0 = 0;
  1303  062A  1683               	bsf	3,5	;RP0=1, select bank1
  1304  062B  1303               	bcf	3,6	;RP1=0, select bank1
  1305  062C  120F               	bcf	15,4	;volatile
  1306                           
  1307                           ;OSCI.c: 32:             OSCCONbits.IRCF1 = 0;
  1308  062D  128F               	bcf	15,5	;volatile
  1309                           
  1310                           ;OSCI.c: 33:             OSCCONbits.IRCF2 = 1;
  1311  062E  170F               	bsf	15,6	;volatile
  1312                           
  1313                           ;OSCI.c: 34:             break;
  1314  062F  2E6A               	goto	l131
  1315  0630                     l136:	
  1316                           ;OSCI.c: 35:         case 5:
  1317                           
  1318                           
  1319                           ;OSCI.c: 36:             OSCCONbits.IRCF0 = 1;
  1320  0630  1683               	bsf	3,5	;RP0=1, select bank1
  1321  0631  1303               	bcf	3,6	;RP1=0, select bank1
  1322  0632  160F               	bsf	15,4	;volatile
  1323                           
  1324                           ;OSCI.c: 37:             OSCCONbits.IRCF1 = 0;
  1325  0633  128F               	bcf	15,5	;volatile
  1326                           
  1327                           ;OSCI.c: 38:             OSCCONbits.IRCF2 = 1;
  1328  0634  170F               	bsf	15,6	;volatile
  1329                           
  1330                           ;OSCI.c: 39:             break;
  1331  0635  2E6A               	goto	l131
  1332  0636                     l137:	
  1333                           ;OSCI.c: 40:         case 6:
  1334                           
  1335                           
  1336                           ;OSCI.c: 41:             OSCCONbits.IRCF0 = 0;
  1337  0636  1683               	bsf	3,5	;RP0=1, select bank1
  1338  0637  1303               	bcf	3,6	;RP1=0, select bank1
  1339  0638  120F               	bcf	15,4	;volatile
  1340                           
  1341                           ;OSCI.c: 42:             OSCCONbits.IRCF1 = 1;
  1342  0639  168F               	bsf	15,5	;volatile
  1343                           
  1344                           ;OSCI.c: 43:             OSCCONbits.IRCF2 = 1;
  1345  063A  170F               	bsf	15,6	;volatile
  1346                           
  1347                           ;OSCI.c: 44:             break;
  1348  063B  2E6A               	goto	l131
  1349  063C                     l138:	
  1350                           ;OSCI.c: 45:         case 7:
  1351                           
  1352                           
  1353                           ;OSCI.c: 46:             OSCCONbits.IRCF0 = 1;
  1354  063C  1683               	bsf	3,5	;RP0=1, select bank1
  1355  063D  1303               	bcf	3,6	;RP1=0, select bank1
  1356  063E  160F               	bsf	15,4	;volatile
  1357                           
  1358                           ;OSCI.c: 47:             OSCCONbits.IRCF1 = 1;
  1359  063F  168F               	bsf	15,5	;volatile
  1360                           
  1361                           ;OSCI.c: 48:             OSCCONbits.IRCF2 = 1;
  1362  0640  170F               	bsf	15,6	;volatile
  1363                           
  1364                           ;OSCI.c: 49:             break;
  1365  0641  2E6A               	goto	l131
  1366  0642                     l139:	
  1367                           ;OSCI.c: 50:         default:
  1368                           
  1369                           
  1370                           ;OSCI.c: 51:             OSCCONbits.IRCF0 = 0;
  1371  0642  1683               	bsf	3,5	;RP0=1, select bank1
  1372  0643  1303               	bcf	3,6	;RP1=0, select bank1
  1373  0644  120F               	bcf	15,4	;volatile
  1374                           
  1375                           ;OSCI.c: 52:             OSCCONbits.IRCF1 = 1;
  1376  0645  168F               	bsf	15,5	;volatile
  1377                           
  1378                           ;OSCI.c: 53:             OSCCONbits.IRCF2 = 1;
  1379  0646  170F               	bsf	15,6	;volatile
  1380                           
  1381                           ;OSCI.c: 54:             break;
  1382  0647  2E6A               	goto	l131
  1383  0648                     l804:	
  1384  0648  0872               	movf	initOsc@frec,w
  1385  0649  00F0               	movwf	??_initOsc
  1386  064A  01F1               	clrf	??_initOsc+1
  1387                           
  1388                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1389                           ; Switch size 1, requested type "simple"
  1390                           ; Number of cases is 1, Range of values is 0 to 0
  1391                           ; switch strategies available:
  1392                           ; Name         Instructions Cycles
  1393                           ; simple_byte            4     3 (average)
  1394                           ; direct_byte           11     8 (fixed)
  1395                           ; jumptable            260     6 (fixed)
  1396                           ;	Chosen strategy is simple_byte
  1397  064B  0871               	movf	??_initOsc+1,w
  1398  064C  3A00               	xorlw	0	; case 0
  1399  064D  1903               	skipnz
  1400  064E  2E50               	goto	l1064
  1401  064F  2E42               	goto	l139
  1402  0650                     l1064:	
  1403                           
  1404                           ; Switch size 1, requested type "simple"
  1405                           ; Number of cases is 8, Range of values is 0 to 7
  1406                           ; switch strategies available:
  1407                           ; Name         Instructions Cycles
  1408                           ; simple_byte           25    13 (average)
  1409                           ; direct_byte           32     8 (fixed)
  1410                           ; jumptable            260     6 (fixed)
  1411                           ;	Chosen strategy is simple_byte
  1412  0650  0870               	movf	??_initOsc,w
  1413  0651  3A00               	xorlw	0	; case 0
  1414  0652  1903               	skipnz
  1415  0653  2E12               	goto	l130
  1416  0654  3A01               	xorlw	1	; case 1
  1417  0655  1903               	skipnz
  1418  0656  2E18               	goto	l132
  1419  0657  3A03               	xorlw	3	; case 2
  1420  0658  1903               	skipnz
  1421  0659  2E1E               	goto	l133
  1422  065A  3A01               	xorlw	1	; case 3
  1423  065B  1903               	skipnz
  1424  065C  2E24               	goto	l134
  1425  065D  3A07               	xorlw	7	; case 4
  1426  065E  1903               	skipnz
  1427  065F  2E2A               	goto	l135
  1428  0660  3A01               	xorlw	1	; case 5
  1429  0661  1903               	skipnz
  1430  0662  2E30               	goto	l136
  1431  0663  3A03               	xorlw	3	; case 6
  1432  0664  1903               	skipnz
  1433  0665  2E36               	goto	l137
  1434  0666  3A01               	xorlw	1	; case 7
  1435  0667  1903               	skipnz
  1436  0668  2E3C               	goto	l138
  1437  0669  2E42               	goto	l139
  1438  066A                     l131:	
  1439                           
  1440                           ;OSCI.c: 57:     OSCCONbits.SCS = 1;
  1441  066A  140F               	bsf	15,0	;volatile
  1442  066B                     l140:	
  1443  066B  0008               	return
  1444  066C                     __end_of_initOsc:	
  1445                           
  1446                           	psect	text7
  1447  05D3                     __ptext7:	
  1448 ;; *************** function _UART_WRITE *****************
  1449 ;; Defined at:
  1450 ;;		line 30 in file "UART.c"
  1451 ;; Parameters:    Size  Location     Type
  1452 ;;  data            1    wreg     unsigned char 
  1453 ;; Auto vars:     Size  Location     Type
  1454 ;;  data            1    0[COMMON] unsigned char 
  1455 ;; Return value:  Size  Location     Type
  1456 ;;                  1    wreg      void 
  1457 ;; Registers used:
  1458 ;;		wreg
  1459 ;; Tracked objects:
  1460 ;;		On entry : 0/0
  1461 ;;		On exit  : 0/0
  1462 ;;		Unchanged: 0/0
  1463 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1464 ;;      Params:         0       0       0       0       0
  1465 ;;      Locals:         1       0       0       0       0
  1466 ;;      Temps:          0       0       0       0       0
  1467 ;;      Totals:         1       0       0       0       0
  1468 ;;Total ram usage:        1 bytes
  1469 ;; Hardware stack levels used:    1
  1470 ;; This function calls:
  1471 ;;		Nothing
  1472 ;; This function is called by:
  1473 ;;		_main
  1474 ;; This function uses a non-reentrant model
  1475 ;;
  1476                           
  1477                           
  1478                           ;psect for function _UART_WRITE
  1479  05D3                     _UART_WRITE:	
  1480                           
  1481                           ;incstack = 0
  1482                           ; Regs used in _UART_WRITE: [wreg]
  1483                           ;UART_WRITE@data stored from wreg
  1484  05D3  00F0               	movwf	UART_WRITE@data
  1485  05D4                     l840:	
  1486  05D4                     l85:	
  1487                           ;UART.c: 31:   while(!TXSTAbits.TRMT);
  1488                           
  1489  05D4  1683               	bsf	3,5	;RP0=1, select bank1
  1490  05D5  1303               	bcf	3,6	;RP1=0, select bank1
  1491  05D6  1C98               	btfss	24,1	;volatile
  1492  05D7  2DD9               	goto	u171
  1493  05D8  2DDA               	goto	u170
  1494  05D9                     u171:	
  1495  05D9  2DD4               	goto	l85
  1496  05DA                     u170:	
  1497  05DA                     l842:	
  1498                           
  1499                           ;UART.c: 32:   TXREG = data;
  1500  05DA  0870               	movf	UART_WRITE@data,w
  1501  05DB  1283               	bcf	3,5	;RP0=0, select bank0
  1502  05DC  1303               	bcf	3,6	;RP1=0, select bank0
  1503  05DD  0099               	movwf	25	;volatile
  1504  05DE                     l88:	
  1505  05DE  0008               	return
  1506  05DF                     __end_of_UART_WRITE:	
  1507                           
  1508                           	psect	text8
  1509  05C2                     __ptext8:	
  1510 ;; *************** function _UART_READ *****************
  1511 ;; Defined at:
  1512 ;;		line 22 in file "UART.c"
  1513 ;; Parameters:    Size  Location     Type
  1514 ;;		None
  1515 ;; Auto vars:     Size  Location     Type
  1516 ;;		None
  1517 ;; Return value:  Size  Location     Type
  1518 ;;                  1    wreg      unsigned char 
  1519 ;; Registers used:
  1520 ;;		wreg
  1521 ;; Tracked objects:
  1522 ;;		On entry : 0/0
  1523 ;;		On exit  : 0/0
  1524 ;;		Unchanged: 0/0
  1525 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1526 ;;      Params:         0       0       0       0       0
  1527 ;;      Locals:         0       0       0       0       0
  1528 ;;      Temps:          0       0       0       0       0
  1529 ;;      Totals:         0       0       0       0       0
  1530 ;;Total ram usage:        0 bytes
  1531 ;; Hardware stack levels used:    1
  1532 ;; This function calls:
  1533 ;;		Nothing
  1534 ;; This function is called by:
  1535 ;;		_main
  1536 ;; This function uses a non-reentrant model
  1537 ;;
  1538                           
  1539                           
  1540                           ;psect for function _UART_READ
  1541  05C2                     _UART_READ:	
  1542  05C2                     l826:	
  1543                           ;incstack = 0
  1544                           ; Regs used in _UART_READ: [wreg]
  1545                           
  1546                           
  1547                           ;UART.c: 23:     if(PIR1bits.RCIF==1){
  1548  05C2  1283               	bcf	3,5	;RP0=0, select bank0
  1549  05C3  1303               	bcf	3,6	;RP1=0, select bank0
  1550  05C4  1E8C               	btfss	12,5	;volatile
  1551  05C5  2DC7               	goto	u161
  1552  05C6  2DC8               	goto	u160
  1553  05C7                     u161:	
  1554  05C7  2DC9               	goto	l82
  1555  05C8                     u160:	
  1556  05C8                     l828:	
  1557                           
  1558                           ;UART.c: 24:         return RCREG;
  1559  05C8  081A               	movf	26,w	;volatile
  1560  05C9                     l82:	
  1561  05C9  0008               	return
  1562  05CA                     __end_of_UART_READ:	
  1563                           
  1564                           	psect	text9
  1565  066C                     __ptext9:	
  1566 ;; *************** function _UART_INIT *****************
  1567 ;; Defined at:
  1568 ;;		line 6 in file "UART.c"
  1569 ;; Parameters:    Size  Location     Type
  1570 ;;  baudrate        4    6[BANK0 ] const long 
  1571 ;; Auto vars:     Size  Location     Type
  1572 ;;		None
  1573 ;; Return value:  Size  Location     Type
  1574 ;;                  1    wreg      unsigned char 
  1575 ;; Registers used:
  1576 ;;		wreg, status,2, status,0, pclath, cstack
  1577 ;; Tracked objects:
  1578 ;;		On entry : 0/0
  1579 ;;		On exit  : 0/0
  1580 ;;		Unchanged: 0/0
  1581 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1582 ;;      Params:         0       4       0       0       0
  1583 ;;      Locals:         0       0       0       0       0
  1584 ;;      Temps:          0      12       0       0       0
  1585 ;;      Totals:         0      16       0       0       0
  1586 ;;Total ram usage:       16 bytes
  1587 ;; Hardware stack levels used:    1
  1588 ;; Hardware stack levels required when called:    1
  1589 ;; This function calls:
  1590 ;;		___aldiv
  1591 ;; This function is called by:
  1592 ;;		_main
  1593 ;; This function uses a non-reentrant model
  1594 ;;
  1595                           
  1596                           
  1597                           ;psect for function _UART_INIT
  1598  066C                     _UART_INIT:	
  1599  066C                     l982:	
  1600                           ;incstack = 0
  1601                           ; Regs used in _UART_INIT: [wreg+status,2+status,0+pclath+cstack]
  1602                           
  1603                           
  1604                           ;UART.c: 7:  SPBRG = (8000000 - baudrate*16)/(baudrate*16);
  1605  066C  1283               	bcf	3,5	;RP0=0, select bank0
  1606  066D  1303               	bcf	3,6	;RP1=0, select bank0
  1607  066E  0826               	movf	UART_INIT@baudrate,w
  1608  066F  00AA               	movwf	??_UART_INIT
  1609  0670  0827               	movf	UART_INIT@baudrate+1,w
  1610  0671  00AB               	movwf	??_UART_INIT+1
  1611  0672  0828               	movf	UART_INIT@baudrate+2,w
  1612  0673  00AC               	movwf	??_UART_INIT+2
  1613  0674  0829               	movf	UART_INIT@baudrate+3,w
  1614  0675  00AD               	movwf	??_UART_INIT+3
  1615  0676  3004               	movlw	4
  1616  0677                     u295:	
  1617  0677  1003               	clrc
  1618  0678  0DAA               	rlf	??_UART_INIT,f
  1619  0679  0DAB               	rlf	??_UART_INIT+1,f
  1620  067A  0DAC               	rlf	??_UART_INIT+2,f
  1621  067B  0DAD               	rlf	??_UART_INIT+3,f
  1622  067C                     u290:	
  1623  067C  3EFF               	addlw	-1
  1624  067D  1D03               	skipz
  1625  067E  2E77               	goto	u295
  1626  067F  082D               	movf	??_UART_INIT+3,w
  1627  0680  00F3               	movwf	___aldiv@divisor+3
  1628  0681  082C               	movf	??_UART_INIT+2,w
  1629  0682  00F2               	movwf	___aldiv@divisor+2
  1630  0683  082B               	movf	??_UART_INIT+1,w
  1631  0684  00F1               	movwf	___aldiv@divisor+1
  1632  0685  082A               	movf	??_UART_INIT,w
  1633  0686  00F0               	movwf	___aldiv@divisor
  1634  0687  0826               	movf	UART_INIT@baudrate,w
  1635  0688  00AE               	movwf	??_UART_INIT+4
  1636  0689  0827               	movf	UART_INIT@baudrate+1,w
  1637  068A  00AF               	movwf	??_UART_INIT+5
  1638  068B  0828               	movf	UART_INIT@baudrate+2,w
  1639  068C  00B0               	movwf	??_UART_INIT+6
  1640  068D  0829               	movf	UART_INIT@baudrate+3,w
  1641  068E  00B1               	movwf	??_UART_INIT+7
  1642  068F  3004               	movlw	4
  1643  0690                     u305:	
  1644  0690  1003               	clrc
  1645  0691  0DAE               	rlf	??_UART_INIT+4,f
  1646  0692  0DAF               	rlf	??_UART_INIT+5,f
  1647  0693  0DB0               	rlf	??_UART_INIT+6,f
  1648  0694  0DB1               	rlf	??_UART_INIT+7,f
  1649  0695                     u300:	
  1650  0695  3EFF               	addlw	-1
  1651  0696  1D03               	skipz
  1652  0697  2E90               	goto	u305
  1653  0698  3000               	movlw	0
  1654  0699  00B2               	movwf	??_UART_INIT+8
  1655  069A  3012               	movlw	18
  1656  069B  00B3               	movwf	??_UART_INIT+9
  1657  069C  307A               	movlw	122
  1658  069D  00B4               	movwf	??_UART_INIT+10
  1659  069E  3000               	movlw	0
  1660  069F  00B5               	movwf	??_UART_INIT+11
  1661  06A0  082E               	movf	??_UART_INIT+4,w
  1662  06A1  02B2               	subwf	??_UART_INIT+8,f
  1663  06A2  082F               	movf	??_UART_INIT+5,w
  1664  06A3  1C03               	skipc
  1665  06A4  0F2F               	incfsz	??_UART_INIT+5,w
  1666  06A5  2EA7               	goto	u311
  1667  06A6  2EA8               	goto	u312
  1668  06A7                     u311:	
  1669  06A7  02B3               	subwf	??_UART_INIT+9,f
  1670  06A8                     u312:	
  1671  06A8  0830               	movf	??_UART_INIT+6,w
  1672  06A9  1C03               	skipc
  1673  06AA  0F30               	incfsz	??_UART_INIT+6,w
  1674  06AB  2EAD               	goto	u313
  1675  06AC  2EAE               	goto	u314
  1676  06AD                     u313:	
  1677  06AD  02B4               	subwf	??_UART_INIT+10,f
  1678  06AE                     u314:	
  1679  06AE  0831               	movf	??_UART_INIT+7,w
  1680  06AF  1C03               	skipc
  1681  06B0  0F31               	incfsz	??_UART_INIT+7,w
  1682  06B1  2EB3               	goto	u315
  1683  06B2  2EB4               	goto	u316
  1684  06B3                     u315:	
  1685  06B3  02B5               	subwf	??_UART_INIT+11,f
  1686  06B4                     u316:	
  1687  06B4  0835               	movf	??_UART_INIT+11,w
  1688  06B5  00F7               	movwf	___aldiv@dividend+3
  1689  06B6  0834               	movf	??_UART_INIT+10,w
  1690  06B7  00F6               	movwf	___aldiv@dividend+2
  1691  06B8  0833               	movf	??_UART_INIT+9,w
  1692  06B9  00F5               	movwf	___aldiv@dividend+1
  1693  06BA  0832               	movf	??_UART_INIT+8,w
  1694  06BB  00F4               	movwf	___aldiv@dividend
  1695  06BC  120A  118A  275C  120A  118A  	fcall	___aldiv
  1696  06C1  0870               	movf	?___aldiv,w
  1697  06C2  1683               	bsf	3,5	;RP0=1, select bank1
  1698  06C3  1303               	bcf	3,6	;RP1=0, select bank1
  1699  06C4  0099               	movwf	25	;volatile
  1700  06C5                     l984:	
  1701                           
  1702                           ;UART.c: 8:     TXSTAbits.BRGH = 1;
  1703  06C5  1518               	bsf	24,2	;volatile
  1704  06C6                     l986:	
  1705                           
  1706                           ;UART.c: 9:     TXSTAbits.SYNC = 0;
  1707  06C6  1218               	bcf	24,4	;volatile
  1708  06C7                     l988:	
  1709                           
  1710                           ;UART.c: 10:     RCSTAbits.SPEN = 1;
  1711  06C7  1283               	bcf	3,5	;RP0=0, select bank0
  1712  06C8  1303               	bcf	3,6	;RP1=0, select bank0
  1713  06C9  1798               	bsf	24,7	;volatile
  1714  06CA                     l990:	
  1715                           
  1716                           ;UART.c: 11:     RCSTAbits.CREN = 1;
  1717  06CA  1618               	bsf	24,4	;volatile
  1718  06CB                     l992:	
  1719                           
  1720                           ;UART.c: 12:     TXSTAbits.TXEN = 1;
  1721  06CB  1683               	bsf	3,5	;RP0=1, select bank1
  1722  06CC  1303               	bcf	3,6	;RP1=0, select bank1
  1723  06CD  1698               	bsf	24,5	;volatile
  1724  06CE                     l994:	
  1725                           
  1726                           ;UART.c: 13:     TXSTAbits.TX9 = 0;
  1727  06CE  1318               	bcf	24,6	;volatile
  1728  06CF                     l996:	
  1729                           
  1730                           ;UART.c: 14:     RCSTAbits.RX9 = 0;
  1731  06CF  1283               	bcf	3,5	;RP0=0, select bank0
  1732  06D0  1303               	bcf	3,6	;RP1=0, select bank0
  1733  06D1  1318               	bcf	24,6	;volatile
  1734  06D2                     l78:	
  1735  06D2  0008               	return
  1736  06D3                     __end_of_UART_INIT:	
  1737                           
  1738                           	psect	text10
  1739  075C                     __ptext10:	
  1740 ;; *************** function ___aldiv *****************
  1741 ;; Defined at:
  1742 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\aldiv.c"
  1743 ;; Parameters:    Size  Location     Type
  1744 ;;  divisor         4    0[COMMON] long 
  1745 ;;  dividend        4    4[COMMON] long 
  1746 ;; Auto vars:     Size  Location     Type
  1747 ;;  quotient        4    2[BANK0 ] long 
  1748 ;;  sign            1    1[BANK0 ] unsigned char 
  1749 ;;  counter         1    0[BANK0 ] unsigned char 
  1750 ;; Return value:  Size  Location     Type
  1751 ;;                  4    0[COMMON] long 
  1752 ;; Registers used:
  1753 ;;		wreg, status,2, status,0
  1754 ;; Tracked objects:
  1755 ;;		On entry : 0/0
  1756 ;;		On exit  : 0/0
  1757 ;;		Unchanged: 0/0
  1758 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1759 ;;      Params:         8       0       0       0       0
  1760 ;;      Locals:         0       6       0       0       0
  1761 ;;      Temps:          1       0       0       0       0
  1762 ;;      Totals:         9       6       0       0       0
  1763 ;;Total ram usage:       15 bytes
  1764 ;; Hardware stack levels used:    1
  1765 ;; This function calls:
  1766 ;;		Nothing
  1767 ;; This function is called by:
  1768 ;;		_UART_INIT
  1769 ;; This function uses a non-reentrant model
  1770 ;;
  1771                           
  1772                           
  1773                           ;psect for function ___aldiv
  1774  075C                     ___aldiv:	
  1775  075C                     l926:	
  1776                           ;incstack = 0
  1777                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  1778                           
  1779  075C  1283               	bcf	3,5	;RP0=0, select bank0
  1780  075D  1303               	bcf	3,6	;RP1=0, select bank0
  1781  075E  01A1               	clrf	___aldiv@sign
  1782  075F                     l928:	
  1783  075F  1FF3               	btfss	___aldiv@divisor+3,7
  1784  0760  2F62               	goto	u191
  1785  0761  2F63               	goto	u190
  1786  0762                     u191:	
  1787  0762  2F70               	goto	l291
  1788  0763                     u190:	
  1789  0763                     l930:	
  1790  0763  09F0               	comf	___aldiv@divisor,f
  1791  0764  09F1               	comf	___aldiv@divisor+1,f
  1792  0765  09F2               	comf	___aldiv@divisor+2,f
  1793  0766  09F3               	comf	___aldiv@divisor+3,f
  1794  0767  0AF0               	incf	___aldiv@divisor,f
  1795  0768  1903               	skipnz
  1796  0769  0AF1               	incf	___aldiv@divisor+1,f
  1797  076A  1903               	skipnz
  1798  076B  0AF2               	incf	___aldiv@divisor+2,f
  1799  076C  1903               	skipnz
  1800  076D  0AF3               	incf	___aldiv@divisor+3,f
  1801  076E  01A1               	clrf	___aldiv@sign
  1802  076F  0AA1               	incf	___aldiv@sign,f
  1803  0770                     l291:	
  1804  0770  1FF7               	btfss	___aldiv@dividend+3,7
  1805  0771  2F73               	goto	u201
  1806  0772  2F74               	goto	u200
  1807  0773                     u201:	
  1808  0773  2F83               	goto	l936
  1809  0774                     u200:	
  1810  0774                     l932:	
  1811  0774  09F4               	comf	___aldiv@dividend,f
  1812  0775  09F5               	comf	___aldiv@dividend+1,f
  1813  0776  09F6               	comf	___aldiv@dividend+2,f
  1814  0777  09F7               	comf	___aldiv@dividend+3,f
  1815  0778  0AF4               	incf	___aldiv@dividend,f
  1816  0779  1903               	skipnz
  1817  077A  0AF5               	incf	___aldiv@dividend+1,f
  1818  077B  1903               	skipnz
  1819  077C  0AF6               	incf	___aldiv@dividend+2,f
  1820  077D  1903               	skipnz
  1821  077E  0AF7               	incf	___aldiv@dividend+3,f
  1822  077F                     l934:	
  1823  077F  3001               	movlw	1
  1824  0780  00F8               	movwf	??___aldiv
  1825  0781  0878               	movf	??___aldiv,w
  1826  0782  06A1               	xorwf	___aldiv@sign,f
  1827  0783                     l936:	
  1828  0783  3000               	movlw	0
  1829  0784  00A5               	movwf	___aldiv@quotient+3
  1830  0785  3000               	movlw	0
  1831  0786  00A4               	movwf	___aldiv@quotient+2
  1832  0787  3000               	movlw	0
  1833  0788  00A3               	movwf	___aldiv@quotient+1
  1834  0789  3000               	movlw	0
  1835  078A  00A2               	movwf	___aldiv@quotient
  1836  078B                     l938:	
  1837  078B  0873               	movf	___aldiv@divisor+3,w
  1838  078C  0472               	iorwf	___aldiv@divisor+2,w
  1839  078D  0471               	iorwf	___aldiv@divisor+1,w
  1840  078E  0470               	iorwf	___aldiv@divisor,w
  1841  078F  1903               	skipnz
  1842  0790  2F92               	goto	u211
  1843  0791  2F93               	goto	u210
  1844  0792                     u211:	
  1845  0792  2FE0               	goto	l958
  1846  0793                     u210:	
  1847  0793                     l940:	
  1848  0793  01A0               	clrf	___aldiv@counter
  1849  0794  0AA0               	incf	___aldiv@counter,f
  1850  0795  2FA3               	goto	l944
  1851  0796                     l942:	
  1852  0796  3001               	movlw	1
  1853  0797  00F8               	movwf	??___aldiv
  1854  0798                     u225:	
  1855  0798  1003               	clrc
  1856  0799  0DF0               	rlf	___aldiv@divisor,f
  1857  079A  0DF1               	rlf	___aldiv@divisor+1,f
  1858  079B  0DF2               	rlf	___aldiv@divisor+2,f
  1859  079C  0DF3               	rlf	___aldiv@divisor+3,f
  1860  079D  0BF8               	decfsz	??___aldiv,f
  1861  079E  2F98               	goto	u225
  1862  079F  3001               	movlw	1
  1863  07A0  00F8               	movwf	??___aldiv
  1864  07A1  0878               	movf	??___aldiv,w
  1865  07A2  07A0               	addwf	___aldiv@counter,f
  1866  07A3                     l944:	
  1867  07A3  1FF3               	btfss	___aldiv@divisor+3,7
  1868  07A4  2FA6               	goto	u231
  1869  07A5  2FA7               	goto	u230
  1870  07A6                     u231:	
  1871  07A6  2F96               	goto	l942
  1872  07A7                     u230:	
  1873  07A7                     l946:	
  1874  07A7  3001               	movlw	1
  1875  07A8  00F8               	movwf	??___aldiv
  1876  07A9                     u245:	
  1877  07A9  1003               	clrc
  1878  07AA  0DA2               	rlf	___aldiv@quotient,f
  1879  07AB  0DA3               	rlf	___aldiv@quotient+1,f
  1880  07AC  0DA4               	rlf	___aldiv@quotient+2,f
  1881  07AD  0DA5               	rlf	___aldiv@quotient+3,f
  1882  07AE  0BF8               	decfsz	??___aldiv,f
  1883  07AF  2FA9               	goto	u245
  1884  07B0                     l948:	
  1885  07B0  0873               	movf	___aldiv@divisor+3,w
  1886  07B1  0277               	subwf	___aldiv@dividend+3,w
  1887  07B2  1D03               	skipz
  1888  07B3  2FBE               	goto	u255
  1889  07B4  0872               	movf	___aldiv@divisor+2,w
  1890  07B5  0276               	subwf	___aldiv@dividend+2,w
  1891  07B6  1D03               	skipz
  1892  07B7  2FBE               	goto	u255
  1893  07B8  0871               	movf	___aldiv@divisor+1,w
  1894  07B9  0275               	subwf	___aldiv@dividend+1,w
  1895  07BA  1D03               	skipz
  1896  07BB  2FBE               	goto	u255
  1897  07BC  0870               	movf	___aldiv@divisor,w
  1898  07BD  0274               	subwf	___aldiv@dividend,w
  1899  07BE                     u255:	
  1900  07BE  1C03               	skipc
  1901  07BF  2FC1               	goto	u251
  1902  07C0  2FC2               	goto	u250
  1903  07C1                     u251:	
  1904  07C1  2FD1               	goto	l954
  1905  07C2                     u250:	
  1906  07C2                     l950:	
  1907  07C2  0870               	movf	___aldiv@divisor,w
  1908  07C3  02F4               	subwf	___aldiv@dividend,f
  1909  07C4  0871               	movf	___aldiv@divisor+1,w
  1910  07C5  1C03               	skipc
  1911  07C6  0F71               	incfsz	___aldiv@divisor+1,w
  1912  07C7  02F5               	subwf	___aldiv@dividend+1,f
  1913  07C8  0872               	movf	___aldiv@divisor+2,w
  1914  07C9  1C03               	skipc
  1915  07CA  0F72               	incfsz	___aldiv@divisor+2,w
  1916  07CB  02F6               	subwf	___aldiv@dividend+2,f
  1917  07CC  0873               	movf	___aldiv@divisor+3,w
  1918  07CD  1C03               	skipc
  1919  07CE  0F73               	incfsz	___aldiv@divisor+3,w
  1920  07CF  02F7               	subwf	___aldiv@dividend+3,f
  1921  07D0                     l952:	
  1922  07D0  1422               	bsf	___aldiv@quotient,0
  1923  07D1                     l954:	
  1924  07D1  3001               	movlw	1
  1925  07D2                     u265:	
  1926  07D2  1003               	clrc
  1927  07D3  0CF3               	rrf	___aldiv@divisor+3,f
  1928  07D4  0CF2               	rrf	___aldiv@divisor+2,f
  1929  07D5  0CF1               	rrf	___aldiv@divisor+1,f
  1930  07D6  0CF0               	rrf	___aldiv@divisor,f
  1931  07D7  3EFF               	addlw	-1
  1932  07D8  1D03               	skipz
  1933  07D9  2FD2               	goto	u265
  1934  07DA                     l956:	
  1935  07DA  3001               	movlw	1
  1936  07DB  02A0               	subwf	___aldiv@counter,f
  1937  07DC  1D03               	btfss	3,2
  1938  07DD  2FDF               	goto	u271
  1939  07DE  2FE0               	goto	u270
  1940  07DF                     u271:	
  1941  07DF  2FA7               	goto	l946
  1942  07E0                     u270:	
  1943  07E0                     l958:	
  1944  07E0  0821               	movf	___aldiv@sign,w
  1945  07E1  1903               	btfsc	3,2
  1946  07E2  2FE4               	goto	u281
  1947  07E3  2FE5               	goto	u280
  1948  07E4                     u281:	
  1949  07E4  2FF0               	goto	l962
  1950  07E5                     u280:	
  1951  07E5                     l960:	
  1952  07E5  09A2               	comf	___aldiv@quotient,f
  1953  07E6  09A3               	comf	___aldiv@quotient+1,f
  1954  07E7  09A4               	comf	___aldiv@quotient+2,f
  1955  07E8  09A5               	comf	___aldiv@quotient+3,f
  1956  07E9  0AA2               	incf	___aldiv@quotient,f
  1957  07EA  1903               	skipnz
  1958  07EB  0AA3               	incf	___aldiv@quotient+1,f
  1959  07EC  1903               	skipnz
  1960  07ED  0AA4               	incf	___aldiv@quotient+2,f
  1961  07EE  1903               	skipnz
  1962  07EF  0AA5               	incf	___aldiv@quotient+3,f
  1963  07F0                     l962:	
  1964  07F0  0825               	movf	___aldiv@quotient+3,w
  1965  07F1  00F3               	movwf	?___aldiv+3
  1966  07F2  0824               	movf	___aldiv@quotient+2,w
  1967  07F3  00F2               	movwf	?___aldiv+2
  1968  07F4  0823               	movf	___aldiv@quotient+1,w
  1969  07F5  00F1               	movwf	?___aldiv+1
  1970  07F6  0822               	movf	___aldiv@quotient,w
  1971  07F7  00F0               	movwf	?___aldiv
  1972  07F8                     l301:	
  1973  07F8  0008               	return
  1974  07F9                     __end_of___aldiv:	
  1975  007E                     btemp	set	126	;btemp
  1976  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         3
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     11      14
    BANK0            80     22      22
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _setup->_spiInit
    _UART_INIT->___aldiv

Critical Paths under _main in BANK0

    _main->_UART_INIT
    _UART_INIT->___aldiv

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     977
                                              9 COMMON     2     2      0
                          _UART_INIT
                          _UART_READ
                         _UART_WRITE
                            _initOsc
                              _setup
                            _spiRead
                           _spiWrite
 ---------------------------------------------------------------------------------
 (1) _spiWrite                                             1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (2) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     360
                            _spiInit
 ---------------------------------------------------------------------------------
 (2) _spiInit                                              4     1      3     360
                                              0 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (1) _initOsc                                              3     3      0      15
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _UART_WRITE                                           1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _UART_READ                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _UART_INIT                                           16    12      4     572
                                              6 BANK0     16    12      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     452
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _UART_INIT
     ___aldiv
   _UART_READ
   _UART_WRITE
   _initOsc
   _setup
     _spiInit
   _spiRead
     _spiReceiveWait
   _spiWrite

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      B       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      24       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     16      16       5       27.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      24      12        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Fri Feb 21 16:21:28 2020

             __CFG_CP$OFF 0000               _SSPSTATbits 0094                        l63 060F  
                      l82 05C9                        l85 05D4                        l78 06D2  
                      l88 05DE                        u20 05C1                        u21 05C0  
                     l110 05BB                       l113 05C1                       l130 0612  
                     l106 05F0                       l131 066A                       l107 05F5  
                     l140 066B                       l132 0618                       l124 05D2  
                     l116 05BA                       l301 07F8                       l133 061E  
                     l134 0624                       l135 062A                       l136 0630  
                     l137 0636                       l138 063C                       l139 0642  
                     l291 0770                       l800 0611                       l804 0648  
                     l742 05BB                       l840 05D4                       l920 05EA  
                     l832 05B6                       l930 0763                       l826 05C2  
                     l842 05DA                       l922 05EC                       l834 05CA  
                     l940 0793                       l932 0774                       l828 05C8  
                     l924 05EF                       l916 05E0                       l836 05CF  
                     l950 07C2                       l942 0796                       l934 077F  
                     l926 075C                       l918 05E8                       l960 07E5  
                     l952 07D0                       l944 07A3                       l936 0783  
                     l928 075F                       l962 07F0                       l954 07D1  
                     l946 07A7                       l938 078B                       l970 05FC  
                     l956 07DA                       l948 07B0                       l980 0606  
                     l972 05FE                       l958 07E0                       l990 06CA  
                     l982 066C                       l974 0603                       l966 05F6  
                     l992 06CB                       l984 06C5                       l976 0604  
                     l968 05FB                       l994 06CE                       l986 06C6  
                     l978 0605                       l996 06CF                       l988 06C7  
                     l998 06D3                       u200 0774                       u201 0773  
                     u210 0793                       u211 0792                       u300 0695  
                     u230 07A7                       u231 07A6                       u311 06A7  
                     u312 06A8                       u160 05C8                       u225 0798  
                     u313 06AD                       u305 0690                       u161 05C7  
                     u250 07C2                       u314 06AE                       u170 05DA  
                     u251 07C1                       u315 06B3                       u171 05D9  
                     u316 06B4                       u180 05E8                       u245 07A9  
                     u181 05E7                       u270 07E0                       u190 0763  
                     u271 07DF                       u255 07BE                       u191 0762  
                     u327 0700                       u280 07E5                       u281 07E4  
                     u265 07D2                       u337 0717                       u290 067C  
            __CFG_CPD$OFF 0000                       u347 0724                       u357 073B  
                     u295 0677                       u367 074D              __CFG_LVP$OFF 0000  
                    l1000 06D8                      l1010 06F2                      l1002 06DE  
                    l1020 070B                      l1012 06F3                      l1004 06ED  
                    l1030 0729                      l1022 0713                      l1014 06FB  
                    l1006 06F0                      l1040 0749                      l1032 072F  
                    l1024 071C                      l1016 06FC                      l1008 06F1  
                    l1042 0752                      l1034 0737                      l1026 071F  
                    l1018 0705                      l1036 0740                      l1028 0720  
                    l1038 0743                      l1064 0650              __CFG_WRT$OFF 0000  
                    _cont 007B                      _main 06D3                      _pot1 007D  
                    _pot2 007C                      btemp 007E                      start 0000  
           __CFG_IESO$OFF 0000           __end_of___aldiv 07F9                     ?_main 0070  
           __CFG_WDTE$OFF 0000                     _ANSEL 0188                     _RCREG 001A  
             ?_UART_WRITE 0070                     _SPBRG 0099                     _PORTA 0005  
                   _PORTB 0006                     _PORTC 0007                     _PORTD 0008  
                   _TRISA 0085                     _TRISB 0086                     _TRISC 0087  
                   _TRISD 0088                     _TXREG 0019        __size_of_UART_INIT 0067  
      __size_of_UART_READ 0008            __CFG_FCMEN$OFF 0000           __end_of_initOsc 066C  
                   _setup 05F6            __CFG_BOREN$OFF 0000           __end_of_spiInit 05F6  
         __end_of_spiRead 05D3                     status 0003                     wtemp0 007E  
          __CFG_MCLRE$OFF 0000           __initialization 07F9              __end_of_main 075C  
                  ??_main 0079                    ?_setup 0070                    _ANSELH 0189  
             initOsc@frec 0072                    _TRISC3 043B                    _TRISC4 043C  
                  _TRISC5 043D                    _SSPCON 0014                    _SSPBUF 0013  
          __CFG_PWRTE$OFF 0000       __size_of_UART_WRITE 000C         __end_of_UART_INIT 06D3  
       __end_of_UART_READ 05CA                 ??___aldiv 0078                 ??_initOsc 0070  
        __end_of_spiWrite 05BB                 ??_spiInit 0073                 ??_spiRead 0070  
          UART_WRITE@data 0070   __end_of__initialization 07FC            __pcstackCOMMON 0070  
           __end_of_setup 0610                   ??_setup 0074                __pmaintext 06D3  
 __size_of_spiReceiveWait 0007              ??_UART_WRITE 0070                   _SSPSTAT 0094  
      __end_of_UART_WRITE 05DF                 ?_spiWrite 0070                   ___aldiv 075C  
                 __ptext1 05B5                   __ptext2 05CA                   __ptext3 05BB  
                 __ptext4 05F6                   __ptext5 05DF                   __ptext6 0610  
                 __ptext7 05D3                   __ptext8 05C2                   __ptext9 066C  
                 _initOsc 0610          ___aldiv@dividend 0074                   _spiInit 05DF  
                 _spiRead 05CA      end_of_initialization 07FC                 _RCSTAbits 0018  
        ___aldiv@quotient 0022                ??_spiWrite 0070                 _UART_INIT 066C  
               _UART_READ 05C2                 _PORTDbits 0008                 _TRISCbits 0087  
               _TRISDbits 0088               spiWrite@dat 0070                 _TXSTAbits 0098  
          _spiReceiveWait 05BB                ?_UART_INIT 0026                ?_UART_READ 0070  
     start_initialization 07F9  __CFG_FOSC$INTRC_NOCLKOUT 0000    __end_of_spiReceiveWait 05C2  
             __pbssCOMMON 007B                 ___latbits 0002             __pcstackBANK0 0020  
         ?_spiReceiveWait 0070                  ?___aldiv 0070               ??_UART_INIT 002A  
             ??_UART_READ 0070         __size_of_spiWrite 0006                  ?_initOsc 0070  
                ?_spiInit 0070                  ?_spiRead 0070            __size_of_setup 001A  
         ___aldiv@divisor 0070      spiInit@sTransmitEdge 0072           ___aldiv@counter 0020  
      spiInit@sDataSample 0070                  _PIR1bits 000C          __size_of___aldiv 009D  
        __size_of_initOsc 005C                  __ptext10 075C          __size_of_spiInit 0017  
        __size_of_spiRead 0009         __CFG_BOR4V$BOR40V 0000         UART_INIT@baudrate 0026  
           __size_of_main 0089                  _spiWrite 05B5              spiInit@sType 0073  
       spiInit@sClockIdle 0071                _INTCONbits 000B          ??_spiReceiveWait 0070  
              _OSCCONbits 008F                _UART_WRITE 05D3              ___aldiv@sign 0021  
