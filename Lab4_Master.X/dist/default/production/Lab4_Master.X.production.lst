

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Fri Feb 21 18:38:38 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	text6,local,class=CODE,merge=1,delta=2
    15                           	psect	text7,local,class=CODE,merge=1,delta=2
    16                           	psect	text8,local,class=CODE,merge=1,delta=2
    17                           	psect	text9,local,class=CODE,merge=1,delta=2
    18                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    19                           	dabs	1,0x7E,2
    20  0000                     
    21                           ; Version 2.10
    22                           ; Generated 31/07/2019 GMT
    23                           ; 
    24                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    25                           ; All rights reserved.
    26                           ; 
    27                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    28                           ; 
    29                           ; Redistribution and use in source and binary forms, with or without modification, are
    30                           ; permitted provided that the following conditions are met:
    31                           ; 
    32                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    33                           ;        conditions and the following disclaimer.
    34                           ; 
    35                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    36                           ;        of conditions and the following disclaimer in the documentation and/or other
    37                           ;        materials provided with the distribution.
    38                           ; 
    39                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    40                           ;        software without specific prior written permission.
    41                           ; 
    42                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    43                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    44                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    45                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    46                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    47                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    48                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    49                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    50                           ; 
    51                           ; 
    52                           ; Code-generator required, PIC16F887 Definitions
    53                           ; 
    54                           ; SFR Addresses
    55  0000                     	;# 
    56  0001                     	;# 
    57  0002                     	;# 
    58  0003                     	;# 
    59  0004                     	;# 
    60  0005                     	;# 
    61  0006                     	;# 
    62  0007                     	;# 
    63  0008                     	;# 
    64  0009                     	;# 
    65  000A                     	;# 
    66  000B                     	;# 
    67  000C                     	;# 
    68  000D                     	;# 
    69  000E                     	;# 
    70  000E                     	;# 
    71  000F                     	;# 
    72  0010                     	;# 
    73  0011                     	;# 
    74  0012                     	;# 
    75  0013                     	;# 
    76  0014                     	;# 
    77  0015                     	;# 
    78  0015                     	;# 
    79  0016                     	;# 
    80  0017                     	;# 
    81  0018                     	;# 
    82  0019                     	;# 
    83  001A                     	;# 
    84  001B                     	;# 
    85  001B                     	;# 
    86  001C                     	;# 
    87  001D                     	;# 
    88  001E                     	;# 
    89  001F                     	;# 
    90  0081                     	;# 
    91  0085                     	;# 
    92  0086                     	;# 
    93  0087                     	;# 
    94  0088                     	;# 
    95  0089                     	;# 
    96  008C                     	;# 
    97  008D                     	;# 
    98  008E                     	;# 
    99  008F                     	;# 
   100  0090                     	;# 
   101  0091                     	;# 
   102  0092                     	;# 
   103  0093                     	;# 
   104  0093                     	;# 
   105  0093                     	;# 
   106  0094                     	;# 
   107  0095                     	;# 
   108  0096                     	;# 
   109  0097                     	;# 
   110  0098                     	;# 
   111  0099                     	;# 
   112  009A                     	;# 
   113  009B                     	;# 
   114  009C                     	;# 
   115  009D                     	;# 
   116  009E                     	;# 
   117  009F                     	;# 
   118  0105                     	;# 
   119  0107                     	;# 
   120  0108                     	;# 
   121  0109                     	;# 
   122  010C                     	;# 
   123  010C                     	;# 
   124  010D                     	;# 
   125  010E                     	;# 
   126  010F                     	;# 
   127  0185                     	;# 
   128  0187                     	;# 
   129  0188                     	;# 
   130  0189                     	;# 
   131  018C                     	;# 
   132  018D                     	;# 
   133  0000                     	;# 
   134  0001                     	;# 
   135  0002                     	;# 
   136  0003                     	;# 
   137  0004                     	;# 
   138  0005                     	;# 
   139  0006                     	;# 
   140  0007                     	;# 
   141  0008                     	;# 
   142  0009                     	;# 
   143  000A                     	;# 
   144  000B                     	;# 
   145  000C                     	;# 
   146  000D                     	;# 
   147  000E                     	;# 
   148  000E                     	;# 
   149  000F                     	;# 
   150  0010                     	;# 
   151  0011                     	;# 
   152  0012                     	;# 
   153  0013                     	;# 
   154  0014                     	;# 
   155  0015                     	;# 
   156  0015                     	;# 
   157  0016                     	;# 
   158  0017                     	;# 
   159  0018                     	;# 
   160  0019                     	;# 
   161  001A                     	;# 
   162  001B                     	;# 
   163  001B                     	;# 
   164  001C                     	;# 
   165  001D                     	;# 
   166  001E                     	;# 
   167  001F                     	;# 
   168  0081                     	;# 
   169  0085                     	;# 
   170  0086                     	;# 
   171  0087                     	;# 
   172  0088                     	;# 
   173  0089                     	;# 
   174  008C                     	;# 
   175  008D                     	;# 
   176  008E                     	;# 
   177  008F                     	;# 
   178  0090                     	;# 
   179  0091                     	;# 
   180  0092                     	;# 
   181  0093                     	;# 
   182  0093                     	;# 
   183  0093                     	;# 
   184  0094                     	;# 
   185  0095                     	;# 
   186  0096                     	;# 
   187  0097                     	;# 
   188  0098                     	;# 
   189  0099                     	;# 
   190  009A                     	;# 
   191  009B                     	;# 
   192  009C                     	;# 
   193  009D                     	;# 
   194  009E                     	;# 
   195  009F                     	;# 
   196  0105                     	;# 
   197  0107                     	;# 
   198  0108                     	;# 
   199  0109                     	;# 
   200  010C                     	;# 
   201  010C                     	;# 
   202  010D                     	;# 
   203  010E                     	;# 
   204  010F                     	;# 
   205  0185                     	;# 
   206  0187                     	;# 
   207  0188                     	;# 
   208  0189                     	;# 
   209  018C                     	;# 
   210  018D                     	;# 
   211  0000                     	;# 
   212  0001                     	;# 
   213  0002                     	;# 
   214  0003                     	;# 
   215  0004                     	;# 
   216  0005                     	;# 
   217  0006                     	;# 
   218  0007                     	;# 
   219  0008                     	;# 
   220  0009                     	;# 
   221  000A                     	;# 
   222  000B                     	;# 
   223  000C                     	;# 
   224  000D                     	;# 
   225  000E                     	;# 
   226  000E                     	;# 
   227  000F                     	;# 
   228  0010                     	;# 
   229  0011                     	;# 
   230  0012                     	;# 
   231  0013                     	;# 
   232  0014                     	;# 
   233  0015                     	;# 
   234  0015                     	;# 
   235  0016                     	;# 
   236  0017                     	;# 
   237  0018                     	;# 
   238  0019                     	;# 
   239  001A                     	;# 
   240  001B                     	;# 
   241  001B                     	;# 
   242  001C                     	;# 
   243  001D                     	;# 
   244  001E                     	;# 
   245  001F                     	;# 
   246  0081                     	;# 
   247  0085                     	;# 
   248  0086                     	;# 
   249  0087                     	;# 
   250  0088                     	;# 
   251  0089                     	;# 
   252  008C                     	;# 
   253  008D                     	;# 
   254  008E                     	;# 
   255  008F                     	;# 
   256  0090                     	;# 
   257  0091                     	;# 
   258  0092                     	;# 
   259  0093                     	;# 
   260  0093                     	;# 
   261  0093                     	;# 
   262  0094                     	;# 
   263  0095                     	;# 
   264  0096                     	;# 
   265  0097                     	;# 
   266  0098                     	;# 
   267  0099                     	;# 
   268  009A                     	;# 
   269  009B                     	;# 
   270  009C                     	;# 
   271  009D                     	;# 
   272  009E                     	;# 
   273  009F                     	;# 
   274  0105                     	;# 
   275  0107                     	;# 
   276  0108                     	;# 
   277  0109                     	;# 
   278  010C                     	;# 
   279  010C                     	;# 
   280  010D                     	;# 
   281  010E                     	;# 
   282  010F                     	;# 
   283  0185                     	;# 
   284  0187                     	;# 
   285  0188                     	;# 
   286  0189                     	;# 
   287  018C                     	;# 
   288  018D                     	;# 
   289  0000                     	;# 
   290  0001                     	;# 
   291  0002                     	;# 
   292  0003                     	;# 
   293  0004                     	;# 
   294  0005                     	;# 
   295  0006                     	;# 
   296  0007                     	;# 
   297  0008                     	;# 
   298  0009                     	;# 
   299  000A                     	;# 
   300  000B                     	;# 
   301  000C                     	;# 
   302  000D                     	;# 
   303  000E                     	;# 
   304  000E                     	;# 
   305  000F                     	;# 
   306  0010                     	;# 
   307  0011                     	;# 
   308  0012                     	;# 
   309  0013                     	;# 
   310  0014                     	;# 
   311  0015                     	;# 
   312  0015                     	;# 
   313  0016                     	;# 
   314  0017                     	;# 
   315  0018                     	;# 
   316  0019                     	;# 
   317  001A                     	;# 
   318  001B                     	;# 
   319  001B                     	;# 
   320  001C                     	;# 
   321  001D                     	;# 
   322  001E                     	;# 
   323  001F                     	;# 
   324  0081                     	;# 
   325  0085                     	;# 
   326  0086                     	;# 
   327  0087                     	;# 
   328  0088                     	;# 
   329  0089                     	;# 
   330  008C                     	;# 
   331  008D                     	;# 
   332  008E                     	;# 
   333  008F                     	;# 
   334  0090                     	;# 
   335  0091                     	;# 
   336  0092                     	;# 
   337  0093                     	;# 
   338  0093                     	;# 
   339  0093                     	;# 
   340  0094                     	;# 
   341  0095                     	;# 
   342  0096                     	;# 
   343  0097                     	;# 
   344  0098                     	;# 
   345  0099                     	;# 
   346  009A                     	;# 
   347  009B                     	;# 
   348  009C                     	;# 
   349  009D                     	;# 
   350  009E                     	;# 
   351  009F                     	;# 
   352  0105                     	;# 
   353  0107                     	;# 
   354  0108                     	;# 
   355  0109                     	;# 
   356  010C                     	;# 
   357  010C                     	;# 
   358  010D                     	;# 
   359  010E                     	;# 
   360  010F                     	;# 
   361  0185                     	;# 
   362  0187                     	;# 
   363  0188                     	;# 
   364  0189                     	;# 
   365  018C                     	;# 
   366  018D                     	;# 
   367  0000                     	;# 
   368  0001                     	;# 
   369  0002                     	;# 
   370  0003                     	;# 
   371  0004                     	;# 
   372  0005                     	;# 
   373  0006                     	;# 
   374  0007                     	;# 
   375  0008                     	;# 
   376  0009                     	;# 
   377  000A                     	;# 
   378  000B                     	;# 
   379  000C                     	;# 
   380  000D                     	;# 
   381  000E                     	;# 
   382  000E                     	;# 
   383  000F                     	;# 
   384  0010                     	;# 
   385  0011                     	;# 
   386  0012                     	;# 
   387  0013                     	;# 
   388  0014                     	;# 
   389  0015                     	;# 
   390  0015                     	;# 
   391  0016                     	;# 
   392  0017                     	;# 
   393  0018                     	;# 
   394  0019                     	;# 
   395  001A                     	;# 
   396  001B                     	;# 
   397  001B                     	;# 
   398  001C                     	;# 
   399  001D                     	;# 
   400  001E                     	;# 
   401  001F                     	;# 
   402  0081                     	;# 
   403  0085                     	;# 
   404  0086                     	;# 
   405  0087                     	;# 
   406  0088                     	;# 
   407  0089                     	;# 
   408  008C                     	;# 
   409  008D                     	;# 
   410  008E                     	;# 
   411  008F                     	;# 
   412  0090                     	;# 
   413  0091                     	;# 
   414  0092                     	;# 
   415  0093                     	;# 
   416  0093                     	;# 
   417  0093                     	;# 
   418  0094                     	;# 
   419  0095                     	;# 
   420  0096                     	;# 
   421  0097                     	;# 
   422  0098                     	;# 
   423  0099                     	;# 
   424  009A                     	;# 
   425  009B                     	;# 
   426  009C                     	;# 
   427  009D                     	;# 
   428  009E                     	;# 
   429  009F                     	;# 
   430  0105                     	;# 
   431  0107                     	;# 
   432  0108                     	;# 
   433  0109                     	;# 
   434  010C                     	;# 
   435  010C                     	;# 
   436  010D                     	;# 
   437  010E                     	;# 
   438  010F                     	;# 
   439  0185                     	;# 
   440  0187                     	;# 
   441  0188                     	;# 
   442  0189                     	;# 
   443  018C                     	;# 
   444  018D                     	;# 
   445  0013                     _SSPBUF	set	19
   446  0014                     _SSPCON	set	20
   447  0019                     _TXREG	set	25
   448  001A                     _RCREG	set	26
   449  000C                     _PIR1bits	set	12
   450  0018                     _RCSTAbits	set	24
   451  000B                     _INTCONbits	set	11
   452  0008                     _PORTDbits	set	8
   453  0008                     _PORTD	set	8
   454  0007                     _PORTC	set	7
   455  0006                     _PORTB	set	6
   456  0005                     _PORTA	set	5
   457  008F                     _OSCCONbits	set	143
   458  0094                     _SSPSTATbits	set	148
   459  0094                     _SSPSTAT	set	148
   460  0098                     _TXSTAbits	set	152
   461  0099                     _SPBRG	set	153
   462  008C                     _PIE1bits	set	140
   463  0088                     _TRISDbits	set	136
   464  0088                     _TRISD	set	136
   465  0087                     _TRISCbits	set	135
   466  0087                     _TRISC	set	135
   467  0086                     _TRISB	set	134
   468  0085                     _TRISA	set	133
   469  043B                     _TRISC3	set	1083
   470  043C                     _TRISC4	set	1084
   471  043D                     _TRISC5	set	1085
   472  0189                     _ANSELH	set	393
   473  0188                     _ANSEL	set	392
   474                           
   475                           ; #config settings
   476  0000                     
   477                           	psect	cinit
   478  07F9                     start_initialization:	
   479  07F9                     __initialization:	
   480                           
   481                           ; Clear objects allocated to COMMON
   482  07F9  01FB               	clrf	__pbssCOMMON& (0+127)
   483  07FA  01FC               	clrf	(__pbssCOMMON+1)& (0+127)
   484  07FB  01FD               	clrf	(__pbssCOMMON+2)& (0+127)
   485  07FC                     end_of_initialization:	
   486                           ;End of C runtime variable initialization code
   487                           
   488  07FC                     __end_of__initialization:	
   489  07FC  0183               	clrf	3
   490  07FD  120A  118A  2ED1   	ljmp	_main	;jump to C main() function
   491                           
   492                           	psect	bssCOMMON
   493  007B                     __pbssCOMMON:	
   494  007B                     _cont:	
   495  007B                     	ds	1
   496  007C                     _pot2:	
   497  007C                     	ds	1
   498  007D                     _pot1:	
   499  007D                     	ds	1
   500                           
   501                           	psect	cstackCOMMON
   502  0070                     __pcstackCOMMON:	
   503  0070                     ?_setup:	
   504  0070                     ?_initOsc:	
   505                           ; 1 bytes @ 0x0
   506                           
   507  0070                     ??_initOsc:	
   508                           ; 1 bytes @ 0x0
   509                           
   510  0070                     ?_spiWrite:	
   511                           ; 1 bytes @ 0x0
   512                           
   513  0070                     ??_spiWrite:	
   514                           ; 1 bytes @ 0x0
   515                           
   516  0070                     ?_spiRead:	
   517                           ; 1 bytes @ 0x0
   518                           
   519  0070                     ??_spiRead:	
   520                           ; 1 bytes @ 0x0
   521                           
   522  0070                     ?_UART_READ:	
   523                           ; 1 bytes @ 0x0
   524                           
   525  0070                     ??_UART_READ:	
   526                           ; 1 bytes @ 0x0
   527                           
   528  0070                     ?_UART_WRITE:	
   529                           ; 1 bytes @ 0x0
   530                           
   531  0070                     ??_UART_WRITE:	
   532                           ; 1 bytes @ 0x0
   533                           
   534  0070                     ?_spiInit:	
   535                           ; 1 bytes @ 0x0
   536                           
   537  0070                     ?_main:	
   538                           ; 1 bytes @ 0x0
   539                           
   540  0070                     ?_spiReceiveWait:	
   541                           ; 1 bytes @ 0x0
   542                           
   543  0070                     ??_spiReceiveWait:	
   544                           ; 1 bytes @ 0x0
   545                           
   546  0070                     ?___aldiv:	
   547                           ; 1 bytes @ 0x0
   548                           
   549  0070                     UART_WRITE@data:	
   550                           ; 4 bytes @ 0x0
   551                           
   552  0070                     spiInit@sDataSample:	
   553                           ; 1 bytes @ 0x0
   554                           
   555  0070                     spiWrite@dat:	
   556                           ; 1 bytes @ 0x0
   557                           
   558  0070                     ___aldiv@divisor:	
   559                           ; 1 bytes @ 0x0
   560                           
   561                           
   562                           ; 4 bytes @ 0x0
   563  0070                     	ds	1
   564  0071                     spiInit@sClockIdle:	
   565                           
   566                           ; 1 bytes @ 0x1
   567  0071                     	ds	1
   568  0072                     spiInit@sTransmitEdge:	
   569  0072                     initOsc@frec:	
   570                           ; 1 bytes @ 0x2
   571                           
   572                           
   573                           ; 1 bytes @ 0x2
   574  0072                     	ds	1
   575  0073                     ??_spiInit:	
   576  0073                     spiInit@sType:	
   577                           ; 1 bytes @ 0x3
   578                           
   579                           
   580                           ; 1 bytes @ 0x3
   581  0073                     	ds	1
   582  0074                     ??_setup:	
   583  0074                     ___aldiv@dividend:	
   584                           ; 1 bytes @ 0x4
   585                           
   586                           
   587                           ; 4 bytes @ 0x4
   588  0074                     	ds	4
   589  0078                     ??___aldiv:	
   590                           
   591                           ; 1 bytes @ 0x8
   592  0078                     	ds	1
   593  0079                     ??_main:	
   594                           
   595                           ; 1 bytes @ 0x9
   596  0079                     	ds	2
   597                           
   598                           	psect	cstackBANK0
   599  0020                     __pcstackBANK0:	
   600  0020                     ___aldiv@counter:	
   601                           
   602                           ; 1 bytes @ 0x0
   603  0020                     	ds	1
   604  0021                     ___aldiv@sign:	
   605                           
   606                           ; 1 bytes @ 0x1
   607  0021                     	ds	1
   608  0022                     ___aldiv@quotient:	
   609                           
   610                           ; 4 bytes @ 0x2
   611  0022                     	ds	4
   612  0026                     ?_UART_INIT:	
   613  0026                     UART_INIT@baudrate:	
   614                           ; 1 bytes @ 0x6
   615                           
   616                           
   617                           ; 4 bytes @ 0x6
   618  0026                     	ds	4
   619  002A                     ??_UART_INIT:	
   620                           
   621                           ; 1 bytes @ 0xA
   622  002A                     	ds	12
   623                           
   624                           	psect	maintext
   625  06D1                     __pmaintext:	
   626 ;;
   627 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   628 ;;
   629 ;; *************** function _main *****************
   630 ;; Defined at:
   631 ;;		line 52 in file "Lab4_Master.c"
   632 ;; Parameters:    Size  Location     Type
   633 ;;		None
   634 ;; Auto vars:     Size  Location     Type
   635 ;;		None
   636 ;; Return value:  Size  Location     Type
   637 ;;                  1    wreg      void 
   638 ;; Registers used:
   639 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   640 ;; Tracked objects:
   641 ;;		On entry : B00/0
   642 ;;		On exit  : 0/0
   643 ;;		Unchanged: 0/0
   644 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   645 ;;      Params:         0       0       0       0       0
   646 ;;      Locals:         0       0       0       0       0
   647 ;;      Temps:          2       0       0       0       0
   648 ;;      Totals:         2       0       0       0       0
   649 ;;Total ram usage:        2 bytes
   650 ;; Hardware stack levels required when called:    2
   651 ;; This function calls:
   652 ;;		_UART_INIT
   653 ;;		_UART_READ
   654 ;;		_UART_WRITE
   655 ;;		_initOsc
   656 ;;		_setup
   657 ;;		_spiRead
   658 ;;		_spiWrite
   659 ;; This function is called by:
   660 ;;		Startup code after reset
   661 ;; This function uses a non-reentrant model
   662 ;;
   663                           
   664                           
   665                           ;psect for function _main
   666  06D1                     _main:	
   667  06D1                     l1000:	
   668                           ;incstack = 0
   669                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   670                           
   671                           
   672                           ;Lab4_Master.c: 53:     setup();
   673  06D1  120A  118A  25F6  120A  118A  	fcall	_setup
   674  06D6                     l1002:	
   675                           
   676                           ;Lab4_Master.c: 54:     initOsc(7);
   677  06D6  3007               	movlw	7
   678  06D7  120A  118A  2612  120A  118A  	fcall	_initOsc
   679  06DC                     l1004:	
   680                           
   681                           ;Lab4_Master.c: 55:     UART_INIT(9600);
   682  06DC  3000               	movlw	0
   683  06DD  1283               	bcf	3,5	;RP0=0, select bank0
   684  06DE  1303               	bcf	3,6	;RP1=0, select bank0
   685  06DF  00A9               	movwf	UART_INIT@baudrate+3
   686  06E0  3000               	movlw	0
   687  06E1  00A8               	movwf	UART_INIT@baudrate+2
   688  06E2  3025               	movlw	37
   689  06E3  00A7               	movwf	UART_INIT@baudrate+1
   690  06E4  3080               	movlw	128
   691  06E5  00A6               	movwf	UART_INIT@baudrate
   692  06E6  120A  118A  266E  120A  118A  	fcall	_UART_INIT
   693  06EB                     l1006:	
   694                           
   695                           ;Lab4_Master.c: 56:     PORTA = 0;
   696  06EB  1283               	bcf	3,5	;RP0=0, select bank0
   697  06EC  1303               	bcf	3,6	;RP1=0, select bank0
   698  06ED  0185               	clrf	5	;volatile
   699  06EE                     l1008:	
   700                           
   701                           ;Lab4_Master.c: 57:     PORTB = 0;
   702  06EE  0186               	clrf	6	;volatile
   703  06EF                     l1010:	
   704                           
   705                           ;Lab4_Master.c: 58:     PORTC = 0;
   706  06EF  0187               	clrf	7	;volatile
   707  06F0                     l1012:	
   708                           
   709                           ;Lab4_Master.c: 59:     PORTD = 0;
   710  06F0  0188               	clrf	8	;volatile
   711  06F1                     l1014:	
   712                           
   713                           ;Lab4_Master.c: 63:         PORTDbits.RD1 = 0;
   714  06F1  1283               	bcf	3,5	;RP0=0, select bank0
   715  06F2  1303               	bcf	3,6	;RP1=0, select bank0
   716  06F3  1088               	bcf	8,1	;volatile
   717  06F4                     l1016:	
   718                           
   719                           ;Lab4_Master.c: 64:         _delay((unsigned long)((1)*(8000000/4000.0)));
   720  06F4  3003               	movlw	3
   721  06F5  00FA               	movwf	??_main+1
   722  06F6  3097               	movlw	151
   723  06F7  00F9               	movwf	??_main
   724  06F8                     u327:	
   725  06F8  0BF9               	decfsz	??_main,f
   726  06F9  2EF8               	goto	u327
   727  06FA  0BFA               	decfsz	??_main+1,f
   728  06FB  2EF8               	goto	u327
   729  06FC  2EFD               	nop2
   730  06FD                     l1018:	
   731                           
   732                           ;Lab4_Master.c: 65:         spiWrite(1);
   733  06FD  3001               	movlw	1
   734  06FE  120A  118A  25B5  120A  118A  	fcall	_spiWrite
   735  0703                     l1020:	
   736                           
   737                           ;Lab4_Master.c: 67:         pot1 = spiRead();
   738  0703  120A  118A  25CA  120A  118A  	fcall	_spiRead
   739  0708  00F9               	movwf	??_main
   740  0709  0879               	movf	??_main,w
   741  070A  00FD               	movwf	_pot1
   742  070B                     l1022:	
   743                           
   744                           ;Lab4_Master.c: 69:         _delay((unsigned long)((1)*(8000000/4000.0)));
   745  070B  3003               	movlw	3
   746  070C  00FA               	movwf	??_main+1
   747  070D  3097               	movlw	151
   748  070E  00F9               	movwf	??_main
   749  070F                     u337:	
   750  070F  0BF9               	decfsz	??_main,f
   751  0710  2F0F               	goto	u337
   752  0711  0BFA               	decfsz	??_main+1,f
   753  0712  2F0F               	goto	u337
   754  0713  2F14               	nop2
   755  0714                     l1024:	
   756                           
   757                           ;Lab4_Master.c: 70:         PORTDbits.RD1 = 1;
   758  0714  1283               	bcf	3,5	;RP0=0, select bank0
   759  0715  1303               	bcf	3,6	;RP1=0, select bank0
   760  0716  1488               	bsf	8,1	;volatile
   761  0717                     l1026:	
   762                           
   763                           ;Lab4_Master.c: 72:         PORTDbits.RD1 = 0;
   764  0717  1088               	bcf	8,1	;volatile
   765  0718                     l1028:	
   766                           
   767                           ;Lab4_Master.c: 73:         _delay((unsigned long)((1)*(8000000/4000.0)));
   768  0718  3003               	movlw	3
   769  0719  00FA               	movwf	??_main+1
   770  071A  3097               	movlw	151
   771  071B  00F9               	movwf	??_main
   772  071C                     u347:	
   773  071C  0BF9               	decfsz	??_main,f
   774  071D  2F1C               	goto	u347
   775  071E  0BFA               	decfsz	??_main+1,f
   776  071F  2F1C               	goto	u347
   777  0720  2F21               	nop2
   778  0721                     l1030:	
   779                           
   780                           ;Lab4_Master.c: 74:         spiWrite(2);
   781  0721  3002               	movlw	2
   782  0722  120A  118A  25B5  120A  118A  	fcall	_spiWrite
   783  0727                     l1032:	
   784                           
   785                           ;Lab4_Master.c: 76:         pot2= spiRead();
   786  0727  120A  118A  25CA  120A  118A  	fcall	_spiRead
   787  072C  00F9               	movwf	??_main
   788  072D  0879               	movf	??_main,w
   789  072E  00FC               	movwf	_pot2
   790  072F                     l1034:	
   791                           
   792                           ;Lab4_Master.c: 77:         _delay((unsigned long)((1)*(8000000/4000.0)));
   793  072F  3003               	movlw	3
   794  0730  00FA               	movwf	??_main+1
   795  0731  3097               	movlw	151
   796  0732  00F9               	movwf	??_main
   797  0733                     u357:	
   798  0733  0BF9               	decfsz	??_main,f
   799  0734  2F33               	goto	u357
   800  0735  0BFA               	decfsz	??_main+1,f
   801  0736  2F33               	goto	u357
   802  0737  2F38               	nop2
   803  0738                     l1036:	
   804                           
   805                           ;Lab4_Master.c: 78:         PORTDbits.RD1 = 1;
   806  0738  1283               	bcf	3,5	;RP0=0, select bank0
   807  0739  1303               	bcf	3,6	;RP1=0, select bank0
   808  073A  1488               	bsf	8,1	;volatile
   809  073B                     l1038:	
   810                           
   811                           ;Lab4_Master.c: 81:         PORTB = UART_READ();
   812  073B  120A  118A  25C2  120A  118A  	fcall	_UART_READ
   813  0740  1283               	bcf	3,5	;RP0=0, select bank0
   814  0741  1303               	bcf	3,6	;RP1=0, select bank0
   815  0742  0086               	movwf	6	;volatile
   816  0743                     l1040:	
   817                           
   818                           ;Lab4_Master.c: 83:         UART_WRITE(pot1);
   819  0743  087D               	movf	_pot1,w
   820  0744  120A  118A  25D3  120A  118A  	fcall	_UART_WRITE
   821  0749                     l1042:	
   822                           
   823                           ;Lab4_Master.c: 84:         _delay((unsigned long)((5)*(8000000/4000.0)));
   824  0749  300D               	movlw	13
   825  074A  00FA               	movwf	??_main+1
   826  074B  30FB               	movlw	251
   827  074C  00F9               	movwf	??_main
   828  074D                     u367:	
   829  074D  0BF9               	decfsz	??_main,f
   830  074E  2F4D               	goto	u367
   831  074F  0BFA               	decfsz	??_main+1,f
   832  0750  2F4D               	goto	u367
   833  0751  2F52               	nop2
   834  0752                     l1044:	
   835                           
   836                           ;Lab4_Master.c: 85:         UART_WRITE(pot2);
   837  0752  087C               	movf	_pot2,w
   838  0753  120A  118A  25D3  120A  118A  	fcall	_UART_WRITE
   839  0758  2EF1               	goto	l1014
   840  0759  120A  118A  2800   	ljmp	start
   841  075C                     __end_of_main:	
   842                           
   843                           	psect	text1
   844  05B5                     __ptext1:	
   845 ;; *************** function _spiWrite *****************
   846 ;; Defined at:
   847 ;;		line 37 in file "SPI_MASTER.c"
   848 ;; Parameters:    Size  Location     Type
   849 ;;  dat             1    wreg     unsigned char 
   850 ;; Auto vars:     Size  Location     Type
   851 ;;  dat             1    0[COMMON] unsigned char 
   852 ;; Return value:  Size  Location     Type
   853 ;;                  1    wreg      void 
   854 ;; Registers used:
   855 ;;		wreg
   856 ;; Tracked objects:
   857 ;;		On entry : 0/0
   858 ;;		On exit  : 0/0
   859 ;;		Unchanged: 0/0
   860 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   861 ;;      Params:         0       0       0       0       0
   862 ;;      Locals:         1       0       0       0       0
   863 ;;      Temps:          0       0       0       0       0
   864 ;;      Totals:         1       0       0       0       0
   865 ;;Total ram usage:        1 bytes
   866 ;; Hardware stack levels used:    1
   867 ;; This function calls:
   868 ;;		Nothing
   869 ;; This function is called by:
   870 ;;		_main
   871 ;; This function uses a non-reentrant model
   872 ;;
   873                           
   874                           
   875                           ;psect for function _spiWrite
   876  05B5                     _spiWrite:	
   877                           
   878                           ;incstack = 0
   879                           ; Regs used in _spiWrite: [wreg]
   880                           ;spiWrite@dat stored from wreg
   881  05B5  00F0               	movwf	spiWrite@dat
   882  05B6                     l828:	
   883                           
   884                           ;SPI_MASTER.c: 37: void spiWrite(char dat);SPI_MASTER.c: 38: {;SPI_MASTER.c: 39:     SSP
      +                          BUF = dat;
   885  05B6  0870               	movf	spiWrite@dat,w
   886  05B7  1283               	bcf	3,5	;RP0=0, select bank0
   887  05B8  1303               	bcf	3,6	;RP1=0, select bank0
   888  05B9  0093               	movwf	19	;volatile
   889  05BA                     l118:	
   890  05BA  0008               	return
   891  05BB                     __end_of_spiWrite:	
   892                           
   893                           	psect	text2
   894  05CA                     __ptext2:	
   895 ;; *************** function _spiRead *****************
   896 ;; Defined at:
   897 ;;		line 50 in file "SPI_MASTER.c"
   898 ;; Parameters:    Size  Location     Type
   899 ;;		None
   900 ;; Auto vars:     Size  Location     Type
   901 ;;		None
   902 ;; Return value:  Size  Location     Type
   903 ;;                  1    wreg      unsigned char 
   904 ;; Registers used:
   905 ;;		wreg, status,2, status,0, pclath, cstack
   906 ;; Tracked objects:
   907 ;;		On entry : 0/0
   908 ;;		On exit  : 0/0
   909 ;;		Unchanged: 0/0
   910 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   911 ;;      Params:         0       0       0       0       0
   912 ;;      Locals:         0       0       0       0       0
   913 ;;      Temps:          0       0       0       0       0
   914 ;;      Totals:         0       0       0       0       0
   915 ;;Total ram usage:        0 bytes
   916 ;; Hardware stack levels used:    1
   917 ;; Hardware stack levels required when called:    1
   918 ;; This function calls:
   919 ;;		_spiReceiveWait
   920 ;; This function is called by:
   921 ;;		_main
   922 ;; This function uses a non-reentrant model
   923 ;;
   924                           
   925                           
   926                           ;psect for function _spiRead
   927  05CA                     _spiRead:	
   928  05CA                     l830:	
   929                           ;incstack = 0
   930                           ; Regs used in _spiRead: [wreg+status,2+status,0+pclath+cstack]
   931                           
   932                           
   933                           ;SPI_MASTER.c: 52:     spiReceiveWait();
   934  05CA  120A  118A  25BB  120A  118A  	fcall	_spiReceiveWait
   935  05CF                     l832:	
   936                           
   937                           ;SPI_MASTER.c: 53:     return(SSPBUF);
   938  05CF  1283               	bcf	3,5	;RP0=0, select bank0
   939  05D0  1303               	bcf	3,6	;RP1=0, select bank0
   940  05D1  0813               	movf	19,w	;volatile
   941  05D2                     l126:	
   942  05D2  0008               	return
   943  05D3                     __end_of_spiRead:	
   944                           
   945                           	psect	text3
   946  05BB                     __ptext3:	
   947 ;; *************** function _spiReceiveWait *****************
   948 ;; Defined at:
   949 ;;		line 32 in file "SPI_MASTER.c"
   950 ;; Parameters:    Size  Location     Type
   951 ;;		None
   952 ;; Auto vars:     Size  Location     Type
   953 ;;		None
   954 ;; Return value:  Size  Location     Type
   955 ;;                  1    wreg      void 
   956 ;; Registers used:
   957 ;;		None
   958 ;; Tracked objects:
   959 ;;		On entry : 0/0
   960 ;;		On exit  : 0/0
   961 ;;		Unchanged: 0/0
   962 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   963 ;;      Params:         0       0       0       0       0
   964 ;;      Locals:         0       0       0       0       0
   965 ;;      Temps:          0       0       0       0       0
   966 ;;      Totals:         0       0       0       0       0
   967 ;;Total ram usage:        0 bytes
   968 ;; Hardware stack levels used:    1
   969 ;; This function calls:
   970 ;;		Nothing
   971 ;; This function is called by:
   972 ;;		_spiRead
   973 ;; This function uses a non-reentrant model
   974 ;;
   975                           
   976                           
   977                           ;psect for function _spiReceiveWait
   978  05BB                     _spiReceiveWait:	
   979  05BB                     l744:	
   980                           ;incstack = 0
   981                           ; Regs used in _spiReceiveWait: []
   982                           
   983  05BB                     l112:	
   984                           ;SPI_MASTER.c: 34:     while ( !SSPSTATbits.BF );
   985                           
   986  05BB  1683               	bsf	3,5	;RP0=1, select bank1
   987  05BC  1303               	bcf	3,6	;RP1=0, select bank1
   988  05BD  1C14               	btfss	20,0	;volatile
   989  05BE  2DC0               	goto	u21
   990  05BF  2DC1               	goto	u20
   991  05C0                     u21:	
   992  05C0  2DBB               	goto	l112
   993  05C1                     u20:	
   994  05C1                     l115:	
   995  05C1  0008               	return
   996  05C2                     __end_of_spiReceiveWait:	
   997                           
   998                           	psect	text4
   999  05F6                     __ptext4:	
  1000 ;; *************** function _setup *****************
  1001 ;; Defined at:
  1002 ;;		line 90 in file "Lab4_Master.c"
  1003 ;; Parameters:    Size  Location     Type
  1004 ;;		None
  1005 ;; Auto vars:     Size  Location     Type
  1006 ;;		None
  1007 ;; Return value:  Size  Location     Type
  1008 ;;                  1    wreg      void 
  1009 ;; Registers used:
  1010 ;;		wreg, status,2, status,0, pclath, cstack
  1011 ;; Tracked objects:
  1012 ;;		On entry : 0/0
  1013 ;;		On exit  : 0/0
  1014 ;;		Unchanged: 0/0
  1015 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1016 ;;      Params:         0       0       0       0       0
  1017 ;;      Locals:         0       0       0       0       0
  1018 ;;      Temps:          0       0       0       0       0
  1019 ;;      Totals:         0       0       0       0       0
  1020 ;;Total ram usage:        0 bytes
  1021 ;; Hardware stack levels used:    1
  1022 ;; Hardware stack levels required when called:    1
  1023 ;; This function calls:
  1024 ;;		_spiInit
  1025 ;; This function is called by:
  1026 ;;		_main
  1027 ;; This function uses a non-reentrant model
  1028 ;;
  1029                           
  1030                           
  1031                           ;psect for function _setup
  1032  05F6                     _setup:	
  1033  05F6                     l968:	
  1034                           ;incstack = 0
  1035                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
  1036                           
  1037                           
  1038                           ;Lab4_Master.c: 91:     TRISA = 0;
  1039  05F6  1683               	bsf	3,5	;RP0=1, select bank1
  1040  05F7  1303               	bcf	3,6	;RP1=0, select bank1
  1041  05F8  0185               	clrf	5	;volatile
  1042                           
  1043                           ;Lab4_Master.c: 92:     TRISB = 0;
  1044  05F9  0186               	clrf	6	;volatile
  1045                           
  1046                           ;Lab4_Master.c: 93:     TRISC = 0;
  1047  05FA  0187               	clrf	7	;volatile
  1048  05FB                     l970:	
  1049                           
  1050                           ;Lab4_Master.c: 94:     TRISCbits.TRISC4 = 1;
  1051  05FB  1607               	bsf	7,4	;volatile
  1052  05FC                     l972:	
  1053                           
  1054                           ;Lab4_Master.c: 95:     TRISCbits.TRISC7 = 1;
  1055  05FC  1787               	bsf	7,7	;volatile
  1056                           
  1057                           ;Lab4_Master.c: 96:     TRISD = 0;
  1058  05FD  0188               	clrf	8	;volatile
  1059  05FE                     l974:	
  1060                           
  1061                           ;Lab4_Master.c: 97:     TRISDbits.TRISD1 = 0;
  1062  05FE  1088               	bcf	8,1	;volatile
  1063                           
  1064                           ;Lab4_Master.c: 98:     ANSEL = 0;
  1065  05FF  1683               	bsf	3,5	;RP0=1, select bank3
  1066  0600  1703               	bsf	3,6	;RP1=1, select bank3
  1067  0601  0188               	clrf	8	;volatile
  1068                           
  1069                           ;Lab4_Master.c: 99:     ANSELH = 0;
  1070  0602  0189               	clrf	9	;volatile
  1071  0603                     l976:	
  1072                           
  1073                           ;Lab4_Master.c: 100:     PIE1bits.RCIE = 1;
  1074  0603  1683               	bsf	3,5	;RP0=1, select bank1
  1075  0604  1303               	bcf	3,6	;RP1=0, select bank1
  1076  0605  168C               	bsf	12,5	;volatile
  1077  0606                     l978:	
  1078                           
  1079                           ;Lab4_Master.c: 101:     INTCONbits.PEIE = 1;
  1080  0606  170B               	bsf	11,6	;volatile
  1081  0607                     l980:	
  1082                           
  1083                           ;Lab4_Master.c: 102:     INTCONbits.GIE = 1;
  1084  0607  178B               	bsf	11,7	;volatile
  1085  0608                     l982:	
  1086                           
  1087                           ;Lab4_Master.c: 103:     spiInit(SPI_MASTER_OSC_DIV4, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_
      +                          IDLE_LOW, SPI_IDLE_2_ACTIVE);
  1088  0608  01F0               	clrf	spiInit@sDataSample
  1089  0609  01F1               	clrf	spiInit@sClockIdle
  1090  060A  01F2               	clrf	spiInit@sTransmitEdge
  1091  060B  3020               	movlw	32
  1092  060C  120A  118A  25DF  120A  118A  	fcall	_spiInit
  1093  0611                     l65:	
  1094  0611  0008               	return
  1095  0612                     __end_of_setup:	
  1096                           
  1097                           	psect	text5
  1098  05DF                     __ptext5:	
  1099 ;; *************** function _spiInit *****************
  1100 ;; Defined at:
  1101 ;;		line 13 in file "SPI_MASTER.c"
  1102 ;; Parameters:    Size  Location     Type
  1103 ;;  sType           1    wreg     enum E1264
  1104 ;;  sDataSample     1    0[COMMON] enum E1272
  1105 ;;  sClockIdle      1    1[COMMON] enum E1276
  1106 ;;  sTransmitEdg    1    2[COMMON] enum E1280
  1107 ;; Auto vars:     Size  Location     Type
  1108 ;;  sType           1    3[COMMON] enum E1264
  1109 ;; Return value:  Size  Location     Type
  1110 ;;                  1    wreg      void 
  1111 ;; Registers used:
  1112 ;;		wreg, status,2, status,0
  1113 ;; Tracked objects:
  1114 ;;		On entry : 0/0
  1115 ;;		On exit  : 0/0
  1116 ;;		Unchanged: 0/0
  1117 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1118 ;;      Params:         3       0       0       0       0
  1119 ;;      Locals:         1       0       0       0       0
  1120 ;;      Temps:          0       0       0       0       0
  1121 ;;      Totals:         4       0       0       0       0
  1122 ;;Total ram usage:        4 bytes
  1123 ;; Hardware stack levels used:    1
  1124 ;; This function calls:
  1125 ;;		Nothing
  1126 ;; This function is called by:
  1127 ;;		_setup
  1128 ;; This function uses a non-reentrant model
  1129 ;;
  1130                           
  1131                           
  1132                           ;psect for function _spiInit
  1133  05DF                     _spiInit:	
  1134                           
  1135                           ;incstack = 0
  1136                           ; Regs used in _spiInit: [wreg+status,2+status,0]
  1137                           ;spiInit@sType stored from wreg
  1138  05DF  00F3               	movwf	spiInit@sType
  1139  05E0                     l918:	
  1140                           
  1141                           ;SPI_MASTER.c: 13: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_I
      +                          dle sClockIdle, Spi_Transmit_Edge sTransmitEdge);SPI_MASTER.c: 14: {;SPI_MASTER.c: 15:  
      +                             TRISC5 = 0;
  1142  05E0  1683               	bsf	3,5	;RP0=1, select bank1
  1143  05E1  1303               	bcf	3,6	;RP1=0, select bank1
  1144  05E2  1287               	bcf	7,5	;volatile
  1145                           
  1146                           ;SPI_MASTER.c: 16:     TRISC4 = 1;
  1147  05E3  1607               	bsf	7,4	;volatile
  1148                           
  1149                           ;SPI_MASTER.c: 18:     if(sType & 0b00000100)
  1150  05E4  1D73               	btfss	spiInit@sType,2
  1151  05E5  2DE7               	goto	u181
  1152  05E6  2DE8               	goto	u180
  1153  05E7                     u181:	
  1154  05E7  2DEC               	goto	l924
  1155  05E8                     u180:	
  1156  05E8                     l920:	
  1157                           
  1158                           ;SPI_MASTER.c: 19:     {;SPI_MASTER.c: 20:         SSPSTAT = sTransmitEdge;
  1159  05E8  0872               	movf	spiInit@sTransmitEdge,w
  1160  05E9  0094               	movwf	20	;volatile
  1161  05EA                     l922:	
  1162                           
  1163                           ;SPI_MASTER.c: 21:         TRISC3 = 1;
  1164  05EA  1587               	bsf	7,3	;volatile
  1165                           
  1166                           ;SPI_MASTER.c: 22:     }
  1167  05EB  2DF0               	goto	l108
  1168  05EC                     l924:	
  1169                           
  1170                           ;SPI_MASTER.c: 24:     {;SPI_MASTER.c: 25:         SSPSTAT = sDataSample | sTransmitEdge
      +                          ;
  1171  05EC  0870               	movf	spiInit@sDataSample,w
  1172  05ED  0472               	iorwf	spiInit@sTransmitEdge,w
  1173  05EE  0094               	movwf	20	;volatile
  1174  05EF                     l926:	
  1175                           
  1176                           ;SPI_MASTER.c: 26:         TRISC3 = 0;
  1177  05EF  1187               	bcf	7,3	;volatile
  1178  05F0                     l108:	
  1179                           ;SPI_MASTER.c: 27:     }
  1180                           
  1181                           
  1182                           ;SPI_MASTER.c: 29:     SSPCON = sType | sClockIdle;
  1183  05F0  0873               	movf	spiInit@sType,w
  1184  05F1  0471               	iorwf	spiInit@sClockIdle,w
  1185  05F2  1283               	bcf	3,5	;RP0=0, select bank0
  1186  05F3  1303               	bcf	3,6	;RP1=0, select bank0
  1187  05F4  0094               	movwf	20	;volatile
  1188  05F5                     l109:	
  1189  05F5  0008               	return
  1190  05F6                     __end_of_spiInit:	
  1191                           
  1192                           	psect	text6
  1193  0612                     __ptext6:	
  1194 ;; *************** function _initOsc *****************
  1195 ;; Defined at:
  1196 ;;		line 8 in file "OSCI.c"
  1197 ;; Parameters:    Size  Location     Type
  1198 ;;  frec            1    wreg     unsigned char 
  1199 ;; Auto vars:     Size  Location     Type
  1200 ;;  frec            1    2[COMMON] unsigned char 
  1201 ;; Return value:  Size  Location     Type
  1202 ;;                  1    wreg      void 
  1203 ;; Registers used:
  1204 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1205 ;; Tracked objects:
  1206 ;;		On entry : 0/0
  1207 ;;		On exit  : 0/0
  1208 ;;		Unchanged: 0/0
  1209 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1210 ;;      Params:         0       0       0       0       0
  1211 ;;      Locals:         1       0       0       0       0
  1212 ;;      Temps:          2       0       0       0       0
  1213 ;;      Totals:         3       0       0       0       0
  1214 ;;Total ram usage:        3 bytes
  1215 ;; Hardware stack levels used:    1
  1216 ;; This function calls:
  1217 ;;		Nothing
  1218 ;; This function is called by:
  1219 ;;		_main
  1220 ;; This function uses a non-reentrant model
  1221 ;;
  1222                           
  1223                           
  1224                           ;psect for function _initOsc
  1225  0612                     _initOsc:	
  1226                           
  1227                           ;incstack = 0
  1228                           ; Regs used in _initOsc: [wreg-fsr0h+status,2+status,0]
  1229                           ;initOsc@frec stored from wreg
  1230  0612  00F2               	movwf	initOsc@frec
  1231  0613                     l802:	
  1232                           
  1233                           ;OSCI.c: 9:     switch(frec){
  1234  0613  2E4A               	goto	l806
  1235  0614                     l132:	
  1236                           ;OSCI.c: 10:         case 0:
  1237                           
  1238                           
  1239                           ;OSCI.c: 11:             OSCCONbits.IRCF0 = 0;
  1240  0614  1683               	bsf	3,5	;RP0=1, select bank1
  1241  0615  1303               	bcf	3,6	;RP1=0, select bank1
  1242  0616  120F               	bcf	15,4	;volatile
  1243                           
  1244                           ;OSCI.c: 12:             OSCCONbits.IRCF1 = 0;
  1245  0617  128F               	bcf	15,5	;volatile
  1246                           
  1247                           ;OSCI.c: 13:             OSCCONbits.IRCF2 = 0;
  1248  0618  130F               	bcf	15,6	;volatile
  1249                           
  1250                           ;OSCI.c: 14:             break;
  1251  0619  2E6C               	goto	l133
  1252  061A                     l134:	
  1253                           ;OSCI.c: 15:         case 1:
  1254                           
  1255                           
  1256                           ;OSCI.c: 16:             OSCCONbits.IRCF0 = 1;
  1257  061A  1683               	bsf	3,5	;RP0=1, select bank1
  1258  061B  1303               	bcf	3,6	;RP1=0, select bank1
  1259  061C  160F               	bsf	15,4	;volatile
  1260                           
  1261                           ;OSCI.c: 17:             OSCCONbits.IRCF1 = 0;
  1262  061D  128F               	bcf	15,5	;volatile
  1263                           
  1264                           ;OSCI.c: 18:             OSCCONbits.IRCF2 = 0;
  1265  061E  130F               	bcf	15,6	;volatile
  1266                           
  1267                           ;OSCI.c: 19:             break;
  1268  061F  2E6C               	goto	l133
  1269  0620                     l135:	
  1270                           ;OSCI.c: 20:         case 2:
  1271                           
  1272                           
  1273                           ;OSCI.c: 21:             OSCCONbits.IRCF0 = 0;
  1274  0620  1683               	bsf	3,5	;RP0=1, select bank1
  1275  0621  1303               	bcf	3,6	;RP1=0, select bank1
  1276  0622  120F               	bcf	15,4	;volatile
  1277                           
  1278                           ;OSCI.c: 22:             OSCCONbits.IRCF1 = 1;
  1279  0623  168F               	bsf	15,5	;volatile
  1280                           
  1281                           ;OSCI.c: 23:             OSCCONbits.IRCF2 = 0;
  1282  0624  130F               	bcf	15,6	;volatile
  1283                           
  1284                           ;OSCI.c: 24:             break;
  1285  0625  2E6C               	goto	l133
  1286  0626                     l136:	
  1287                           ;OSCI.c: 25:         case 3:
  1288                           
  1289                           
  1290                           ;OSCI.c: 26:             OSCCONbits.IRCF0 = 1;
  1291  0626  1683               	bsf	3,5	;RP0=1, select bank1
  1292  0627  1303               	bcf	3,6	;RP1=0, select bank1
  1293  0628  160F               	bsf	15,4	;volatile
  1294                           
  1295                           ;OSCI.c: 27:             OSCCONbits.IRCF1 = 1;
  1296  0629  168F               	bsf	15,5	;volatile
  1297                           
  1298                           ;OSCI.c: 28:             OSCCONbits.IRCF2 = 0;
  1299  062A  130F               	bcf	15,6	;volatile
  1300                           
  1301                           ;OSCI.c: 29:             break;
  1302  062B  2E6C               	goto	l133
  1303  062C                     l137:	
  1304                           ;OSCI.c: 30:         case 4:
  1305                           
  1306                           
  1307                           ;OSCI.c: 31:             OSCCONbits.IRCF0 = 0;
  1308  062C  1683               	bsf	3,5	;RP0=1, select bank1
  1309  062D  1303               	bcf	3,6	;RP1=0, select bank1
  1310  062E  120F               	bcf	15,4	;volatile
  1311                           
  1312                           ;OSCI.c: 32:             OSCCONbits.IRCF1 = 0;
  1313  062F  128F               	bcf	15,5	;volatile
  1314                           
  1315                           ;OSCI.c: 33:             OSCCONbits.IRCF2 = 1;
  1316  0630  170F               	bsf	15,6	;volatile
  1317                           
  1318                           ;OSCI.c: 34:             break;
  1319  0631  2E6C               	goto	l133
  1320  0632                     l138:	
  1321                           ;OSCI.c: 35:         case 5:
  1322                           
  1323                           
  1324                           ;OSCI.c: 36:             OSCCONbits.IRCF0 = 1;
  1325  0632  1683               	bsf	3,5	;RP0=1, select bank1
  1326  0633  1303               	bcf	3,6	;RP1=0, select bank1
  1327  0634  160F               	bsf	15,4	;volatile
  1328                           
  1329                           ;OSCI.c: 37:             OSCCONbits.IRCF1 = 0;
  1330  0635  128F               	bcf	15,5	;volatile
  1331                           
  1332                           ;OSCI.c: 38:             OSCCONbits.IRCF2 = 1;
  1333  0636  170F               	bsf	15,6	;volatile
  1334                           
  1335                           ;OSCI.c: 39:             break;
  1336  0637  2E6C               	goto	l133
  1337  0638                     l139:	
  1338                           ;OSCI.c: 40:         case 6:
  1339                           
  1340                           
  1341                           ;OSCI.c: 41:             OSCCONbits.IRCF0 = 0;
  1342  0638  1683               	bsf	3,5	;RP0=1, select bank1
  1343  0639  1303               	bcf	3,6	;RP1=0, select bank1
  1344  063A  120F               	bcf	15,4	;volatile
  1345                           
  1346                           ;OSCI.c: 42:             OSCCONbits.IRCF1 = 1;
  1347  063B  168F               	bsf	15,5	;volatile
  1348                           
  1349                           ;OSCI.c: 43:             OSCCONbits.IRCF2 = 1;
  1350  063C  170F               	bsf	15,6	;volatile
  1351                           
  1352                           ;OSCI.c: 44:             break;
  1353  063D  2E6C               	goto	l133
  1354  063E                     l140:	
  1355                           ;OSCI.c: 45:         case 7:
  1356                           
  1357                           
  1358                           ;OSCI.c: 46:             OSCCONbits.IRCF0 = 1;
  1359  063E  1683               	bsf	3,5	;RP0=1, select bank1
  1360  063F  1303               	bcf	3,6	;RP1=0, select bank1
  1361  0640  160F               	bsf	15,4	;volatile
  1362                           
  1363                           ;OSCI.c: 47:             OSCCONbits.IRCF1 = 1;
  1364  0641  168F               	bsf	15,5	;volatile
  1365                           
  1366                           ;OSCI.c: 48:             OSCCONbits.IRCF2 = 1;
  1367  0642  170F               	bsf	15,6	;volatile
  1368                           
  1369                           ;OSCI.c: 49:             break;
  1370  0643  2E6C               	goto	l133
  1371  0644                     l141:	
  1372                           ;OSCI.c: 50:         default:
  1373                           
  1374                           
  1375                           ;OSCI.c: 51:             OSCCONbits.IRCF0 = 0;
  1376  0644  1683               	bsf	3,5	;RP0=1, select bank1
  1377  0645  1303               	bcf	3,6	;RP1=0, select bank1
  1378  0646  120F               	bcf	15,4	;volatile
  1379                           
  1380                           ;OSCI.c: 52:             OSCCONbits.IRCF1 = 1;
  1381  0647  168F               	bsf	15,5	;volatile
  1382                           
  1383                           ;OSCI.c: 53:             OSCCONbits.IRCF2 = 1;
  1384  0648  170F               	bsf	15,6	;volatile
  1385                           
  1386                           ;OSCI.c: 54:             break;
  1387  0649  2E6C               	goto	l133
  1388  064A                     l806:	
  1389  064A  0872               	movf	initOsc@frec,w
  1390  064B  00F0               	movwf	??_initOsc
  1391  064C  01F1               	clrf	??_initOsc+1
  1392                           
  1393                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1394                           ; Switch size 1, requested type "simple"
  1395                           ; Number of cases is 1, Range of values is 0 to 0
  1396                           ; switch strategies available:
  1397                           ; Name         Instructions Cycles
  1398                           ; simple_byte            4     3 (average)
  1399                           ; direct_byte           11     8 (fixed)
  1400                           ; jumptable            260     6 (fixed)
  1401                           ;	Chosen strategy is simple_byte
  1402  064D  0871               	movf	??_initOsc+1,w
  1403  064E  3A00               	xorlw	0	; case 0
  1404  064F  1903               	skipnz
  1405  0650  2E52               	goto	l1066
  1406  0651  2E44               	goto	l141
  1407  0652                     l1066:	
  1408                           
  1409                           ; Switch size 1, requested type "simple"
  1410                           ; Number of cases is 8, Range of values is 0 to 7
  1411                           ; switch strategies available:
  1412                           ; Name         Instructions Cycles
  1413                           ; simple_byte           25    13 (average)
  1414                           ; direct_byte           32     8 (fixed)
  1415                           ; jumptable            260     6 (fixed)
  1416                           ;	Chosen strategy is simple_byte
  1417  0652  0870               	movf	??_initOsc,w
  1418  0653  3A00               	xorlw	0	; case 0
  1419  0654  1903               	skipnz
  1420  0655  2E14               	goto	l132
  1421  0656  3A01               	xorlw	1	; case 1
  1422  0657  1903               	skipnz
  1423  0658  2E1A               	goto	l134
  1424  0659  3A03               	xorlw	3	; case 2
  1425  065A  1903               	skipnz
  1426  065B  2E20               	goto	l135
  1427  065C  3A01               	xorlw	1	; case 3
  1428  065D  1903               	skipnz
  1429  065E  2E26               	goto	l136
  1430  065F  3A07               	xorlw	7	; case 4
  1431  0660  1903               	skipnz
  1432  0661  2E2C               	goto	l137
  1433  0662  3A01               	xorlw	1	; case 5
  1434  0663  1903               	skipnz
  1435  0664  2E32               	goto	l138
  1436  0665  3A03               	xorlw	3	; case 6
  1437  0666  1903               	skipnz
  1438  0667  2E38               	goto	l139
  1439  0668  3A01               	xorlw	1	; case 7
  1440  0669  1903               	skipnz
  1441  066A  2E3E               	goto	l140
  1442  066B  2E44               	goto	l141
  1443  066C                     l133:	
  1444                           
  1445                           ;OSCI.c: 57:     OSCCONbits.SCS = 1;
  1446  066C  140F               	bsf	15,0	;volatile
  1447  066D                     l142:	
  1448  066D  0008               	return
  1449  066E                     __end_of_initOsc:	
  1450                           
  1451                           	psect	text7
  1452  05D3                     __ptext7:	
  1453 ;; *************** function _UART_WRITE *****************
  1454 ;; Defined at:
  1455 ;;		line 31 in file "UART.c"
  1456 ;; Parameters:    Size  Location     Type
  1457 ;;  data            1    wreg     unsigned char 
  1458 ;; Auto vars:     Size  Location     Type
  1459 ;;  data            1    0[COMMON] unsigned char 
  1460 ;; Return value:  Size  Location     Type
  1461 ;;                  1    wreg      void 
  1462 ;; Registers used:
  1463 ;;		wreg
  1464 ;; Tracked objects:
  1465 ;;		On entry : 0/0
  1466 ;;		On exit  : 0/0
  1467 ;;		Unchanged: 0/0
  1468 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1469 ;;      Params:         0       0       0       0       0
  1470 ;;      Locals:         1       0       0       0       0
  1471 ;;      Temps:          0       0       0       0       0
  1472 ;;      Totals:         1       0       0       0       0
  1473 ;;Total ram usage:        1 bytes
  1474 ;; Hardware stack levels used:    1
  1475 ;; This function calls:
  1476 ;;		Nothing
  1477 ;; This function is called by:
  1478 ;;		_main
  1479 ;; This function uses a non-reentrant model
  1480 ;;
  1481                           
  1482                           
  1483                           ;psect for function _UART_WRITE
  1484  05D3                     _UART_WRITE:	
  1485                           
  1486                           ;incstack = 0
  1487                           ; Regs used in _UART_WRITE: [wreg]
  1488                           ;UART_WRITE@data stored from wreg
  1489  05D3  00F0               	movwf	UART_WRITE@data
  1490  05D4                     l842:	
  1491  05D4                     l87:	
  1492                           ;UART.c: 32:   while(!TXSTAbits.TRMT);
  1493                           
  1494  05D4  1683               	bsf	3,5	;RP0=1, select bank1
  1495  05D5  1303               	bcf	3,6	;RP1=0, select bank1
  1496  05D6  1C98               	btfss	24,1	;volatile
  1497  05D7  2DD9               	goto	u171
  1498  05D8  2DDA               	goto	u170
  1499  05D9                     u171:	
  1500  05D9  2DD4               	goto	l87
  1501  05DA                     u170:	
  1502  05DA                     l844:	
  1503                           
  1504                           ;UART.c: 33:   TXREG = data;
  1505  05DA  0870               	movf	UART_WRITE@data,w
  1506  05DB  1283               	bcf	3,5	;RP0=0, select bank0
  1507  05DC  1303               	bcf	3,6	;RP1=0, select bank0
  1508  05DD  0099               	movwf	25	;volatile
  1509  05DE                     l90:	
  1510  05DE  0008               	return
  1511  05DF                     __end_of_UART_WRITE:	
  1512                           
  1513                           	psect	text8
  1514  05C2                     __ptext8:	
  1515 ;; *************** function _UART_READ *****************
  1516 ;; Defined at:
  1517 ;;		line 23 in file "UART.c"
  1518 ;; Parameters:    Size  Location     Type
  1519 ;;		None
  1520 ;; Auto vars:     Size  Location     Type
  1521 ;;		None
  1522 ;; Return value:  Size  Location     Type
  1523 ;;                  1    wreg      unsigned char 
  1524 ;; Registers used:
  1525 ;;		wreg
  1526 ;; Tracked objects:
  1527 ;;		On entry : 0/0
  1528 ;;		On exit  : 0/0
  1529 ;;		Unchanged: 0/0
  1530 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1531 ;;      Params:         0       0       0       0       0
  1532 ;;      Locals:         0       0       0       0       0
  1533 ;;      Temps:          0       0       0       0       0
  1534 ;;      Totals:         0       0       0       0       0
  1535 ;;Total ram usage:        0 bytes
  1536 ;; Hardware stack levels used:    1
  1537 ;; This function calls:
  1538 ;;		Nothing
  1539 ;; This function is called by:
  1540 ;;		_main
  1541 ;; This function uses a non-reentrant model
  1542 ;;
  1543                           
  1544                           
  1545                           ;psect for function _UART_READ
  1546  05C2                     _UART_READ:	
  1547  05C2                     l836:	
  1548                           ;incstack = 0
  1549                           ; Regs used in _UART_READ: [wreg]
  1550                           
  1551                           
  1552                           ;UART.c: 24:     if(PIR1bits.RCIF==1){
  1553  05C2  1283               	bcf	3,5	;RP0=0, select bank0
  1554  05C3  1303               	bcf	3,6	;RP1=0, select bank0
  1555  05C4  1E8C               	btfss	12,5	;volatile
  1556  05C5  2DC7               	goto	u161
  1557  05C6  2DC8               	goto	u160
  1558  05C7                     u161:	
  1559  05C7  2DC9               	goto	l84
  1560  05C8                     u160:	
  1561  05C8                     l838:	
  1562                           
  1563                           ;UART.c: 25:         return RCREG;
  1564  05C8  081A               	movf	26,w	;volatile
  1565  05C9                     l84:	
  1566  05C9  0008               	return
  1567  05CA                     __end_of_UART_READ:	
  1568                           
  1569                           	psect	text9
  1570  066E                     __ptext9:	
  1571 ;; *************** function _UART_INIT *****************
  1572 ;; Defined at:
  1573 ;;		line 6 in file "UART.c"
  1574 ;; Parameters:    Size  Location     Type
  1575 ;;  baudrate        4    6[BANK0 ] const long 
  1576 ;; Auto vars:     Size  Location     Type
  1577 ;;		None
  1578 ;; Return value:  Size  Location     Type
  1579 ;;                  1    wreg      unsigned char 
  1580 ;; Registers used:
  1581 ;;		wreg, status,2, status,0, pclath, cstack
  1582 ;; Tracked objects:
  1583 ;;		On entry : 0/0
  1584 ;;		On exit  : 0/0
  1585 ;;		Unchanged: 0/0
  1586 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1587 ;;      Params:         0       4       0       0       0
  1588 ;;      Locals:         0       0       0       0       0
  1589 ;;      Temps:          0      12       0       0       0
  1590 ;;      Totals:         0      16       0       0       0
  1591 ;;Total ram usage:       16 bytes
  1592 ;; Hardware stack levels used:    1
  1593 ;; Hardware stack levels required when called:    1
  1594 ;; This function calls:
  1595 ;;		___aldiv
  1596 ;; This function is called by:
  1597 ;;		_main
  1598 ;; This function uses a non-reentrant model
  1599 ;;
  1600                           
  1601                           
  1602                           ;psect for function _UART_INIT
  1603  066E                     _UART_INIT:	
  1604  066E                     l984:	
  1605                           ;incstack = 0
  1606                           ; Regs used in _UART_INIT: [wreg+status,2+status,0+pclath+cstack]
  1607                           
  1608                           
  1609                           ;UART.c: 7:  SPBRG = (8000000 - baudrate*16)/(baudrate*16);
  1610  066E  1283               	bcf	3,5	;RP0=0, select bank0
  1611  066F  1303               	bcf	3,6	;RP1=0, select bank0
  1612  0670  0826               	movf	UART_INIT@baudrate,w
  1613  0671  00AA               	movwf	??_UART_INIT
  1614  0672  0827               	movf	UART_INIT@baudrate+1,w
  1615  0673  00AB               	movwf	??_UART_INIT+1
  1616  0674  0828               	movf	UART_INIT@baudrate+2,w
  1617  0675  00AC               	movwf	??_UART_INIT+2
  1618  0676  0829               	movf	UART_INIT@baudrate+3,w
  1619  0677  00AD               	movwf	??_UART_INIT+3
  1620  0678  3004               	movlw	4
  1621  0679                     u295:	
  1622  0679  1003               	clrc
  1623  067A  0DAA               	rlf	??_UART_INIT,f
  1624  067B  0DAB               	rlf	??_UART_INIT+1,f
  1625  067C  0DAC               	rlf	??_UART_INIT+2,f
  1626  067D  0DAD               	rlf	??_UART_INIT+3,f
  1627  067E                     u290:	
  1628  067E  3EFF               	addlw	-1
  1629  067F  1D03               	skipz
  1630  0680  2E79               	goto	u295
  1631  0681  082D               	movf	??_UART_INIT+3,w
  1632  0682  00F3               	movwf	___aldiv@divisor+3
  1633  0683  082C               	movf	??_UART_INIT+2,w
  1634  0684  00F2               	movwf	___aldiv@divisor+2
  1635  0685  082B               	movf	??_UART_INIT+1,w
  1636  0686  00F1               	movwf	___aldiv@divisor+1
  1637  0687  082A               	movf	??_UART_INIT,w
  1638  0688  00F0               	movwf	___aldiv@divisor
  1639  0689  0826               	movf	UART_INIT@baudrate,w
  1640  068A  00AE               	movwf	??_UART_INIT+4
  1641  068B  0827               	movf	UART_INIT@baudrate+1,w
  1642  068C  00AF               	movwf	??_UART_INIT+5
  1643  068D  0828               	movf	UART_INIT@baudrate+2,w
  1644  068E  00B0               	movwf	??_UART_INIT+6
  1645  068F  0829               	movf	UART_INIT@baudrate+3,w
  1646  0690  00B1               	movwf	??_UART_INIT+7
  1647  0691  3004               	movlw	4
  1648  0692                     u305:	
  1649  0692  1003               	clrc
  1650  0693  0DAE               	rlf	??_UART_INIT+4,f
  1651  0694  0DAF               	rlf	??_UART_INIT+5,f
  1652  0695  0DB0               	rlf	??_UART_INIT+6,f
  1653  0696  0DB1               	rlf	??_UART_INIT+7,f
  1654  0697                     u300:	
  1655  0697  3EFF               	addlw	-1
  1656  0698  1D03               	skipz
  1657  0699  2E92               	goto	u305
  1658  069A  3000               	movlw	0
  1659  069B  00B2               	movwf	??_UART_INIT+8
  1660  069C  3012               	movlw	18
  1661  069D  00B3               	movwf	??_UART_INIT+9
  1662  069E  307A               	movlw	122
  1663  069F  00B4               	movwf	??_UART_INIT+10
  1664  06A0  3000               	movlw	0
  1665  06A1  00B5               	movwf	??_UART_INIT+11
  1666  06A2  082E               	movf	??_UART_INIT+4,w
  1667  06A3  02B2               	subwf	??_UART_INIT+8,f
  1668  06A4  082F               	movf	??_UART_INIT+5,w
  1669  06A5  1C03               	skipc
  1670  06A6  0F2F               	incfsz	??_UART_INIT+5,w
  1671  06A7  2EA9               	goto	u311
  1672  06A8  2EAA               	goto	u312
  1673  06A9                     u311:	
  1674  06A9  02B3               	subwf	??_UART_INIT+9,f
  1675  06AA                     u312:	
  1676  06AA  0830               	movf	??_UART_INIT+6,w
  1677  06AB  1C03               	skipc
  1678  06AC  0F30               	incfsz	??_UART_INIT+6,w
  1679  06AD  2EAF               	goto	u313
  1680  06AE  2EB0               	goto	u314
  1681  06AF                     u313:	
  1682  06AF  02B4               	subwf	??_UART_INIT+10,f
  1683  06B0                     u314:	
  1684  06B0  0831               	movf	??_UART_INIT+7,w
  1685  06B1  1C03               	skipc
  1686  06B2  0F31               	incfsz	??_UART_INIT+7,w
  1687  06B3  2EB5               	goto	u315
  1688  06B4  2EB6               	goto	u316
  1689  06B5                     u315:	
  1690  06B5  02B5               	subwf	??_UART_INIT+11,f
  1691  06B6                     u316:	
  1692  06B6  0835               	movf	??_UART_INIT+11,w
  1693  06B7  00F7               	movwf	___aldiv@dividend+3
  1694  06B8  0834               	movf	??_UART_INIT+10,w
  1695  06B9  00F6               	movwf	___aldiv@dividend+2
  1696  06BA  0833               	movf	??_UART_INIT+9,w
  1697  06BB  00F5               	movwf	___aldiv@dividend+1
  1698  06BC  0832               	movf	??_UART_INIT+8,w
  1699  06BD  00F4               	movwf	___aldiv@dividend
  1700  06BE  120A  118A  275C  120A  118A  	fcall	___aldiv
  1701  06C3  0870               	movf	?___aldiv,w
  1702  06C4  1683               	bsf	3,5	;RP0=1, select bank1
  1703  06C5  1303               	bcf	3,6	;RP1=0, select bank1
  1704  06C6  0099               	movwf	25	;volatile
  1705  06C7                     l986:	
  1706                           
  1707                           ;UART.c: 8:      TXSTAbits.BRGH = 1;
  1708  06C7  1518               	bsf	24,2	;volatile
  1709  06C8                     l988:	
  1710                           
  1711                           ;UART.c: 9:     TXSTAbits.TXEN = 1;
  1712  06C8  1698               	bsf	24,5	;volatile
  1713  06C9                     l990:	
  1714                           
  1715                           ;UART.c: 10:     TXSTAbits.SYNC = 0;
  1716  06C9  1218               	bcf	24,4	;volatile
  1717  06CA                     l992:	
  1718                           
  1719                           ;UART.c: 11:     TXSTAbits.TX9 = 0;
  1720  06CA  1318               	bcf	24,6	;volatile
  1721  06CB                     l994:	
  1722                           
  1723                           ;UART.c: 13:     RCSTAbits.CREN = 1;
  1724  06CB  1283               	bcf	3,5	;RP0=0, select bank0
  1725  06CC  1303               	bcf	3,6	;RP1=0, select bank0
  1726  06CD  1618               	bsf	24,4	;volatile
  1727  06CE                     l996:	
  1728                           
  1729                           ;UART.c: 14:     RCSTAbits.SPEN = 1;
  1730  06CE  1798               	bsf	24,7	;volatile
  1731  06CF                     l998:	
  1732                           
  1733                           ;UART.c: 15:     RCSTAbits.RX9 = 0;
  1734  06CF  1318               	bcf	24,6	;volatile
  1735  06D0                     l80:	
  1736  06D0  0008               	return
  1737  06D1                     __end_of_UART_INIT:	
  1738                           
  1739                           	psect	text10
  1740  075C                     __ptext10:	
  1741 ;; *************** function ___aldiv *****************
  1742 ;; Defined at:
  1743 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\aldiv.c"
  1744 ;; Parameters:    Size  Location     Type
  1745 ;;  divisor         4    0[COMMON] long 
  1746 ;;  dividend        4    4[COMMON] long 
  1747 ;; Auto vars:     Size  Location     Type
  1748 ;;  quotient        4    2[BANK0 ] long 
  1749 ;;  sign            1    1[BANK0 ] unsigned char 
  1750 ;;  counter         1    0[BANK0 ] unsigned char 
  1751 ;; Return value:  Size  Location     Type
  1752 ;;                  4    0[COMMON] long 
  1753 ;; Registers used:
  1754 ;;		wreg, status,2, status,0
  1755 ;; Tracked objects:
  1756 ;;		On entry : 0/0
  1757 ;;		On exit  : 0/0
  1758 ;;		Unchanged: 0/0
  1759 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1760 ;;      Params:         8       0       0       0       0
  1761 ;;      Locals:         0       6       0       0       0
  1762 ;;      Temps:          1       0       0       0       0
  1763 ;;      Totals:         9       6       0       0       0
  1764 ;;Total ram usage:       15 bytes
  1765 ;; Hardware stack levels used:    1
  1766 ;; This function calls:
  1767 ;;		Nothing
  1768 ;; This function is called by:
  1769 ;;		_UART_INIT
  1770 ;; This function uses a non-reentrant model
  1771 ;;
  1772                           
  1773                           
  1774                           ;psect for function ___aldiv
  1775  075C                     ___aldiv:	
  1776  075C                     l928:	
  1777                           ;incstack = 0
  1778                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  1779                           
  1780  075C  1283               	bcf	3,5	;RP0=0, select bank0
  1781  075D  1303               	bcf	3,6	;RP1=0, select bank0
  1782  075E  01A1               	clrf	___aldiv@sign
  1783  075F                     l930:	
  1784  075F  1FF3               	btfss	___aldiv@divisor+3,7
  1785  0760  2F62               	goto	u191
  1786  0761  2F63               	goto	u190
  1787  0762                     u191:	
  1788  0762  2F70               	goto	l293
  1789  0763                     u190:	
  1790  0763                     l932:	
  1791  0763  09F0               	comf	___aldiv@divisor,f
  1792  0764  09F1               	comf	___aldiv@divisor+1,f
  1793  0765  09F2               	comf	___aldiv@divisor+2,f
  1794  0766  09F3               	comf	___aldiv@divisor+3,f
  1795  0767  0AF0               	incf	___aldiv@divisor,f
  1796  0768  1903               	skipnz
  1797  0769  0AF1               	incf	___aldiv@divisor+1,f
  1798  076A  1903               	skipnz
  1799  076B  0AF2               	incf	___aldiv@divisor+2,f
  1800  076C  1903               	skipnz
  1801  076D  0AF3               	incf	___aldiv@divisor+3,f
  1802  076E  01A1               	clrf	___aldiv@sign
  1803  076F  0AA1               	incf	___aldiv@sign,f
  1804  0770                     l293:	
  1805  0770  1FF7               	btfss	___aldiv@dividend+3,7
  1806  0771  2F73               	goto	u201
  1807  0772  2F74               	goto	u200
  1808  0773                     u201:	
  1809  0773  2F83               	goto	l938
  1810  0774                     u200:	
  1811  0774                     l934:	
  1812  0774  09F4               	comf	___aldiv@dividend,f
  1813  0775  09F5               	comf	___aldiv@dividend+1,f
  1814  0776  09F6               	comf	___aldiv@dividend+2,f
  1815  0777  09F7               	comf	___aldiv@dividend+3,f
  1816  0778  0AF4               	incf	___aldiv@dividend,f
  1817  0779  1903               	skipnz
  1818  077A  0AF5               	incf	___aldiv@dividend+1,f
  1819  077B  1903               	skipnz
  1820  077C  0AF6               	incf	___aldiv@dividend+2,f
  1821  077D  1903               	skipnz
  1822  077E  0AF7               	incf	___aldiv@dividend+3,f
  1823  077F                     l936:	
  1824  077F  3001               	movlw	1
  1825  0780  00F8               	movwf	??___aldiv
  1826  0781  0878               	movf	??___aldiv,w
  1827  0782  06A1               	xorwf	___aldiv@sign,f
  1828  0783                     l938:	
  1829  0783  3000               	movlw	0
  1830  0784  00A5               	movwf	___aldiv@quotient+3
  1831  0785  3000               	movlw	0
  1832  0786  00A4               	movwf	___aldiv@quotient+2
  1833  0787  3000               	movlw	0
  1834  0788  00A3               	movwf	___aldiv@quotient+1
  1835  0789  3000               	movlw	0
  1836  078A  00A2               	movwf	___aldiv@quotient
  1837  078B                     l940:	
  1838  078B  0873               	movf	___aldiv@divisor+3,w
  1839  078C  0472               	iorwf	___aldiv@divisor+2,w
  1840  078D  0471               	iorwf	___aldiv@divisor+1,w
  1841  078E  0470               	iorwf	___aldiv@divisor,w
  1842  078F  1903               	skipnz
  1843  0790  2F92               	goto	u211
  1844  0791  2F93               	goto	u210
  1845  0792                     u211:	
  1846  0792  2FE0               	goto	l960
  1847  0793                     u210:	
  1848  0793                     l942:	
  1849  0793  01A0               	clrf	___aldiv@counter
  1850  0794  0AA0               	incf	___aldiv@counter,f
  1851  0795  2FA3               	goto	l946
  1852  0796                     l944:	
  1853  0796  3001               	movlw	1
  1854  0797  00F8               	movwf	??___aldiv
  1855  0798                     u225:	
  1856  0798  1003               	clrc
  1857  0799  0DF0               	rlf	___aldiv@divisor,f
  1858  079A  0DF1               	rlf	___aldiv@divisor+1,f
  1859  079B  0DF2               	rlf	___aldiv@divisor+2,f
  1860  079C  0DF3               	rlf	___aldiv@divisor+3,f
  1861  079D  0BF8               	decfsz	??___aldiv,f
  1862  079E  2F98               	goto	u225
  1863  079F  3001               	movlw	1
  1864  07A0  00F8               	movwf	??___aldiv
  1865  07A1  0878               	movf	??___aldiv,w
  1866  07A2  07A0               	addwf	___aldiv@counter,f
  1867  07A3                     l946:	
  1868  07A3  1FF3               	btfss	___aldiv@divisor+3,7
  1869  07A4  2FA6               	goto	u231
  1870  07A5  2FA7               	goto	u230
  1871  07A6                     u231:	
  1872  07A6  2F96               	goto	l944
  1873  07A7                     u230:	
  1874  07A7                     l948:	
  1875  07A7  3001               	movlw	1
  1876  07A8  00F8               	movwf	??___aldiv
  1877  07A9                     u245:	
  1878  07A9  1003               	clrc
  1879  07AA  0DA2               	rlf	___aldiv@quotient,f
  1880  07AB  0DA3               	rlf	___aldiv@quotient+1,f
  1881  07AC  0DA4               	rlf	___aldiv@quotient+2,f
  1882  07AD  0DA5               	rlf	___aldiv@quotient+3,f
  1883  07AE  0BF8               	decfsz	??___aldiv,f
  1884  07AF  2FA9               	goto	u245
  1885  07B0                     l950:	
  1886  07B0  0873               	movf	___aldiv@divisor+3,w
  1887  07B1  0277               	subwf	___aldiv@dividend+3,w
  1888  07B2  1D03               	skipz
  1889  07B3  2FBE               	goto	u255
  1890  07B4  0872               	movf	___aldiv@divisor+2,w
  1891  07B5  0276               	subwf	___aldiv@dividend+2,w
  1892  07B6  1D03               	skipz
  1893  07B7  2FBE               	goto	u255
  1894  07B8  0871               	movf	___aldiv@divisor+1,w
  1895  07B9  0275               	subwf	___aldiv@dividend+1,w
  1896  07BA  1D03               	skipz
  1897  07BB  2FBE               	goto	u255
  1898  07BC  0870               	movf	___aldiv@divisor,w
  1899  07BD  0274               	subwf	___aldiv@dividend,w
  1900  07BE                     u255:	
  1901  07BE  1C03               	skipc
  1902  07BF  2FC1               	goto	u251
  1903  07C0  2FC2               	goto	u250
  1904  07C1                     u251:	
  1905  07C1  2FD1               	goto	l956
  1906  07C2                     u250:	
  1907  07C2                     l952:	
  1908  07C2  0870               	movf	___aldiv@divisor,w
  1909  07C3  02F4               	subwf	___aldiv@dividend,f
  1910  07C4  0871               	movf	___aldiv@divisor+1,w
  1911  07C5  1C03               	skipc
  1912  07C6  0F71               	incfsz	___aldiv@divisor+1,w
  1913  07C7  02F5               	subwf	___aldiv@dividend+1,f
  1914  07C8  0872               	movf	___aldiv@divisor+2,w
  1915  07C9  1C03               	skipc
  1916  07CA  0F72               	incfsz	___aldiv@divisor+2,w
  1917  07CB  02F6               	subwf	___aldiv@dividend+2,f
  1918  07CC  0873               	movf	___aldiv@divisor+3,w
  1919  07CD  1C03               	skipc
  1920  07CE  0F73               	incfsz	___aldiv@divisor+3,w
  1921  07CF  02F7               	subwf	___aldiv@dividend+3,f
  1922  07D0                     l954:	
  1923  07D0  1422               	bsf	___aldiv@quotient,0
  1924  07D1                     l956:	
  1925  07D1  3001               	movlw	1
  1926  07D2                     u265:	
  1927  07D2  1003               	clrc
  1928  07D3  0CF3               	rrf	___aldiv@divisor+3,f
  1929  07D4  0CF2               	rrf	___aldiv@divisor+2,f
  1930  07D5  0CF1               	rrf	___aldiv@divisor+1,f
  1931  07D6  0CF0               	rrf	___aldiv@divisor,f
  1932  07D7  3EFF               	addlw	-1
  1933  07D8  1D03               	skipz
  1934  07D9  2FD2               	goto	u265
  1935  07DA                     l958:	
  1936  07DA  3001               	movlw	1
  1937  07DB  02A0               	subwf	___aldiv@counter,f
  1938  07DC  1D03               	btfss	3,2
  1939  07DD  2FDF               	goto	u271
  1940  07DE  2FE0               	goto	u270
  1941  07DF                     u271:	
  1942  07DF  2FA7               	goto	l948
  1943  07E0                     u270:	
  1944  07E0                     l960:	
  1945  07E0  0821               	movf	___aldiv@sign,w
  1946  07E1  1903               	btfsc	3,2
  1947  07E2  2FE4               	goto	u281
  1948  07E3  2FE5               	goto	u280
  1949  07E4                     u281:	
  1950  07E4  2FF0               	goto	l964
  1951  07E5                     u280:	
  1952  07E5                     l962:	
  1953  07E5  09A2               	comf	___aldiv@quotient,f
  1954  07E6  09A3               	comf	___aldiv@quotient+1,f
  1955  07E7  09A4               	comf	___aldiv@quotient+2,f
  1956  07E8  09A5               	comf	___aldiv@quotient+3,f
  1957  07E9  0AA2               	incf	___aldiv@quotient,f
  1958  07EA  1903               	skipnz
  1959  07EB  0AA3               	incf	___aldiv@quotient+1,f
  1960  07EC  1903               	skipnz
  1961  07ED  0AA4               	incf	___aldiv@quotient+2,f
  1962  07EE  1903               	skipnz
  1963  07EF  0AA5               	incf	___aldiv@quotient+3,f
  1964  07F0                     l964:	
  1965  07F0  0825               	movf	___aldiv@quotient+3,w
  1966  07F1  00F3               	movwf	?___aldiv+3
  1967  07F2  0824               	movf	___aldiv@quotient+2,w
  1968  07F3  00F2               	movwf	?___aldiv+2
  1969  07F4  0823               	movf	___aldiv@quotient+1,w
  1970  07F5  00F1               	movwf	?___aldiv+1
  1971  07F6  0822               	movf	___aldiv@quotient,w
  1972  07F7  00F0               	movwf	?___aldiv
  1973  07F8                     l303:	
  1974  07F8  0008               	return
  1975  07F9                     __end_of___aldiv:	
  1976  007E                     btemp	set	126	;btemp
  1977  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         3
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     11      14
    BANK0            80     22      22
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _setup->_spiInit
    _UART_INIT->___aldiv

Critical Paths under _main in BANK0

    _main->_UART_INIT
    _UART_INIT->___aldiv

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     977
                                              9 COMMON     2     2      0
                          _UART_INIT
                          _UART_READ
                         _UART_WRITE
                            _initOsc
                              _setup
                            _spiRead
                           _spiWrite
 ---------------------------------------------------------------------------------
 (1) _spiWrite                                             1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (2) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     360
                            _spiInit
 ---------------------------------------------------------------------------------
 (2) _spiInit                                              4     1      3     360
                                              0 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (1) _initOsc                                              3     3      0      15
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _UART_WRITE                                           1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _UART_READ                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _UART_INIT                                           16    12      4     572
                                              6 BANK0     16    12      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     452
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _UART_INIT
     ___aldiv
   _UART_READ
   _UART_WRITE
   _initOsc
   _setup
     _spiInit
   _spiRead
     _spiReceiveWait
   _spiWrite

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      B       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      24       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     16      16       5       27.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      24      12        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Fri Feb 21 18:38:38 2020

             __CFG_CP$OFF 0000               _SSPSTATbits 0094                        l80 06D0  
                      l65 0611                        l90 05DE                        l84 05C9  
                      l87 05D4                        u20 05C1                        u21 05C0  
                     l112 05BB                       l115 05C1                       l140 063E  
                     l132 0614                       l108 05F0                       l141 0644  
                     l133 066C                       l109 05F5                       l142 066D  
                     l134 061A                       l126 05D2                       l118 05BA  
                     l303 07F8                       l135 0620                       l136 0626  
                     l137 062C                       l138 0632                       l139 0638  
                     l293 0770                       l802 0613                       l806 064A  
                     l830 05CA                       l920 05E8                       l744 05BB  
                     l832 05CF                       l930 075F                       l842 05D4  
                     l922 05EA                       l940 078B                       l932 0763  
                     l836 05C2                       l844 05DA                       l924 05EC  
                     l828 05B6                       l950 07B0                       l942 0793  
                     l934 0774                       l838 05C8                       l926 05EF  
                     l918 05E0                       l952 07C2                       l944 0796  
                     l960 07E0                       l936 077F                       l928 075C  
                     l962 07E5                       l954 07D0                       l946 07A3  
                     l938 0783                       l970 05FB                       l964 07F0  
                     l956 07D1                       l948 07A7                       l980 0607  
                     l972 05FC                       l958 07DA                       l990 06C9  
                     l982 0608                       l974 05FE                       l992 06CA  
                     l984 066E                       l976 0603                       l968 05F6  
                     l994 06CB                       l986 06C7                       l978 0606  
                     l996 06CE                       l988 06C8                       l998 06CF  
                     u200 0774                       u201 0773                       u210 0793  
                     u211 0792                       u300 0697                       u230 07A7  
                     u231 07A6                       u311 06A9                       u312 06AA  
                     u160 05C8                       u225 0798                       u313 06AF  
                     u305 0692                       u161 05C7                       u250 07C2  
                     u314 06B0                       u170 05DA                       u251 07C1  
                     u315 06B5                       u171 05D9                       u316 06B6  
                     u180 05E8                       u245 07A9                       u181 05E7  
                     u270 07E0                       u190 0763                       u271 07DF  
                     u255 07BE                       u191 0762                       u327 06F8  
                     u280 07E5                       u281 07E4                       u265 07D2  
                     u337 070F                       u290 067E              __CFG_CPD$OFF 0000  
                     u347 071C                       u357 0733                       u295 0679  
                     u367 074D              __CFG_LVP$OFF 0000                      l1000 06D1  
                    l1010 06EF                      l1002 06D6                      l1020 0703  
                    l1012 06F0                      l1004 06DC                      l1030 0721  
                    l1022 070B                      l1014 06F1                      l1006 06EB  
                    l1040 0743                      l1032 0727                      l1024 0714  
                    l1016 06F4                      l1008 06EE                      l1042 0749  
                    l1034 072F                      l1026 0717                      l1018 06FD  
                    l1044 0752                      l1036 0738                      l1028 0718  
                    l1038 073B                      l1066 0652              __CFG_WRT$OFF 0000  
                    _cont 007B                      _main 06D1                      _pot1 007D  
                    _pot2 007C                      btemp 007E                      start 0000  
           __CFG_IESO$OFF 0000           __end_of___aldiv 07F9                     ?_main 0070  
           __CFG_WDTE$OFF 0000                     _ANSEL 0188                     _RCREG 001A  
             ?_UART_WRITE 0070                     _SPBRG 0099                     _PORTA 0005  
                   _PORTB 0006                     _PORTC 0007                     _PORTD 0008  
                   _TRISA 0085                     _TRISB 0086                     _TRISC 0087  
                   _TRISD 0088                     _TXREG 0019        __size_of_UART_INIT 0063  
      __size_of_UART_READ 0008            __CFG_FCMEN$OFF 0000           __end_of_initOsc 066E  
                   _setup 05F6            __CFG_BOREN$OFF 0000           __end_of_spiInit 05F6  
         __end_of_spiRead 05D3                     status 0003                     wtemp0 007E  
          __CFG_MCLRE$OFF 0000           __initialization 07F9              __end_of_main 075C  
                  ??_main 0079                    ?_setup 0070                    _ANSELH 0189  
             initOsc@frec 0072                    _TRISC3 043B                    _TRISC4 043C  
                  _TRISC5 043D                    _SSPCON 0014                    _SSPBUF 0013  
          __CFG_PWRTE$OFF 0000       __size_of_UART_WRITE 000C         __end_of_UART_INIT 06D1  
       __end_of_UART_READ 05CA                 ??___aldiv 0078                 ??_initOsc 0070  
        __end_of_spiWrite 05BB                 ??_spiInit 0073                 ??_spiRead 0070  
          UART_WRITE@data 0070   __end_of__initialization 07FC            __pcstackCOMMON 0070  
           __end_of_setup 0612                   ??_setup 0074                __pmaintext 06D1  
 __size_of_spiReceiveWait 0007              ??_UART_WRITE 0070                   _SSPSTAT 0094  
      __end_of_UART_WRITE 05DF                 ?_spiWrite 0070                   ___aldiv 075C  
                 __ptext1 05B5                   __ptext2 05CA                   __ptext3 05BB  
                 __ptext4 05F6                   __ptext5 05DF                   __ptext6 0612  
                 __ptext7 05D3                   __ptext8 05C2                   __ptext9 066E  
                 _initOsc 0612          ___aldiv@dividend 0074                   _spiInit 05DF  
                 _spiRead 05CA      end_of_initialization 07FC                 _RCSTAbits 0018  
        ___aldiv@quotient 0022                ??_spiWrite 0070                 _UART_INIT 066E  
               _UART_READ 05C2                 _PORTDbits 0008                 _TRISCbits 0087  
               _TRISDbits 0088               spiWrite@dat 0070                 _TXSTAbits 0098  
          _spiReceiveWait 05BB                ?_UART_INIT 0026                ?_UART_READ 0070  
     start_initialization 07F9  __CFG_FOSC$INTRC_NOCLKOUT 0000    __end_of_spiReceiveWait 05C2  
             __pbssCOMMON 007B                 ___latbits 0002             __pcstackBANK0 0020  
         ?_spiReceiveWait 0070                  ?___aldiv 0070               ??_UART_INIT 002A  
             ??_UART_READ 0070         __size_of_spiWrite 0006                  ?_initOsc 0070  
                ?_spiInit 0070                  ?_spiRead 0070            __size_of_setup 001C  
         ___aldiv@divisor 0070      spiInit@sTransmitEdge 0072           ___aldiv@counter 0020  
                _PIE1bits 008C        spiInit@sDataSample 0070                  _PIR1bits 000C  
        __size_of___aldiv 009D          __size_of_initOsc 005C                  __ptext10 075C  
        __size_of_spiInit 0017          __size_of_spiRead 0009         __CFG_BOR4V$BOR40V 0000  
       UART_INIT@baudrate 0026             __size_of_main 008B                  _spiWrite 05B5  
            spiInit@sType 0073         spiInit@sClockIdle 0071                _INTCONbits 000B  
        ??_spiReceiveWait 0070                _OSCCONbits 008F                _UART_WRITE 05D3  
            ___aldiv@sign 0021  
