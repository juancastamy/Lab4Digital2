

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Thu Feb 20 23:16:22 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	text5,local,class=CODE,merge=1,delta=2
    13                           	dabs	1,0x7E,2
    14  0000                     
    15                           ; Version 2.10
    16                           ; Generated 31/07/2019 GMT
    17                           ; 
    18                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC16F887 Definitions
    47                           ; 
    48                           ; SFR Addresses
    49  0000                     	;# 
    50  0001                     	;# 
    51  0002                     	;# 
    52  0003                     	;# 
    53  0004                     	;# 
    54  0005                     	;# 
    55  0006                     	;# 
    56  0007                     	;# 
    57  0008                     	;# 
    58  0009                     	;# 
    59  000A                     	;# 
    60  000B                     	;# 
    61  000C                     	;# 
    62  000D                     	;# 
    63  000E                     	;# 
    64  000E                     	;# 
    65  000F                     	;# 
    66  0010                     	;# 
    67  0011                     	;# 
    68  0012                     	;# 
    69  0013                     	;# 
    70  0014                     	;# 
    71  0015                     	;# 
    72  0015                     	;# 
    73  0016                     	;# 
    74  0017                     	;# 
    75  0018                     	;# 
    76  0019                     	;# 
    77  001A                     	;# 
    78  001B                     	;# 
    79  001B                     	;# 
    80  001C                     	;# 
    81  001D                     	;# 
    82  001E                     	;# 
    83  001F                     	;# 
    84  0081                     	;# 
    85  0085                     	;# 
    86  0086                     	;# 
    87  0087                     	;# 
    88  0088                     	;# 
    89  0089                     	;# 
    90  008C                     	;# 
    91  008D                     	;# 
    92  008E                     	;# 
    93  008F                     	;# 
    94  0090                     	;# 
    95  0091                     	;# 
    96  0092                     	;# 
    97  0093                     	;# 
    98  0093                     	;# 
    99  0093                     	;# 
   100  0094                     	;# 
   101  0095                     	;# 
   102  0096                     	;# 
   103  0097                     	;# 
   104  0098                     	;# 
   105  0099                     	;# 
   106  009A                     	;# 
   107  009B                     	;# 
   108  009C                     	;# 
   109  009D                     	;# 
   110  009E                     	;# 
   111  009F                     	;# 
   112  0105                     	;# 
   113  0107                     	;# 
   114  0108                     	;# 
   115  0109                     	;# 
   116  010C                     	;# 
   117  010C                     	;# 
   118  010D                     	;# 
   119  010E                     	;# 
   120  010F                     	;# 
   121  0185                     	;# 
   122  0187                     	;# 
   123  0188                     	;# 
   124  0189                     	;# 
   125  018C                     	;# 
   126  018D                     	;# 
   127  0000                     	;# 
   128  0001                     	;# 
   129  0002                     	;# 
   130  0003                     	;# 
   131  0004                     	;# 
   132  0005                     	;# 
   133  0006                     	;# 
   134  0007                     	;# 
   135  0008                     	;# 
   136  0009                     	;# 
   137  000A                     	;# 
   138  000B                     	;# 
   139  000C                     	;# 
   140  000D                     	;# 
   141  000E                     	;# 
   142  000E                     	;# 
   143  000F                     	;# 
   144  0010                     	;# 
   145  0011                     	;# 
   146  0012                     	;# 
   147  0013                     	;# 
   148  0014                     	;# 
   149  0015                     	;# 
   150  0015                     	;# 
   151  0016                     	;# 
   152  0017                     	;# 
   153  0018                     	;# 
   154  0019                     	;# 
   155  001A                     	;# 
   156  001B                     	;# 
   157  001B                     	;# 
   158  001C                     	;# 
   159  001D                     	;# 
   160  001E                     	;# 
   161  001F                     	;# 
   162  0081                     	;# 
   163  0085                     	;# 
   164  0086                     	;# 
   165  0087                     	;# 
   166  0088                     	;# 
   167  0089                     	;# 
   168  008C                     	;# 
   169  008D                     	;# 
   170  008E                     	;# 
   171  008F                     	;# 
   172  0090                     	;# 
   173  0091                     	;# 
   174  0092                     	;# 
   175  0093                     	;# 
   176  0093                     	;# 
   177  0093                     	;# 
   178  0094                     	;# 
   179  0095                     	;# 
   180  0096                     	;# 
   181  0097                     	;# 
   182  0098                     	;# 
   183  0099                     	;# 
   184  009A                     	;# 
   185  009B                     	;# 
   186  009C                     	;# 
   187  009D                     	;# 
   188  009E                     	;# 
   189  009F                     	;# 
   190  0105                     	;# 
   191  0107                     	;# 
   192  0108                     	;# 
   193  0109                     	;# 
   194  010C                     	;# 
   195  010C                     	;# 
   196  010D                     	;# 
   197  010E                     	;# 
   198  010F                     	;# 
   199  0185                     	;# 
   200  0187                     	;# 
   201  0188                     	;# 
   202  0189                     	;# 
   203  018C                     	;# 
   204  018D                     	;# 
   205  0000                     	;# 
   206  0001                     	;# 
   207  0002                     	;# 
   208  0003                     	;# 
   209  0004                     	;# 
   210  0005                     	;# 
   211  0006                     	;# 
   212  0007                     	;# 
   213  0008                     	;# 
   214  0009                     	;# 
   215  000A                     	;# 
   216  000B                     	;# 
   217  000C                     	;# 
   218  000D                     	;# 
   219  000E                     	;# 
   220  000E                     	;# 
   221  000F                     	;# 
   222  0010                     	;# 
   223  0011                     	;# 
   224  0012                     	;# 
   225  0013                     	;# 
   226  0014                     	;# 
   227  0015                     	;# 
   228  0015                     	;# 
   229  0016                     	;# 
   230  0017                     	;# 
   231  0018                     	;# 
   232  0019                     	;# 
   233  001A                     	;# 
   234  001B                     	;# 
   235  001B                     	;# 
   236  001C                     	;# 
   237  001D                     	;# 
   238  001E                     	;# 
   239  001F                     	;# 
   240  0081                     	;# 
   241  0085                     	;# 
   242  0086                     	;# 
   243  0087                     	;# 
   244  0088                     	;# 
   245  0089                     	;# 
   246  008C                     	;# 
   247  008D                     	;# 
   248  008E                     	;# 
   249  008F                     	;# 
   250  0090                     	;# 
   251  0091                     	;# 
   252  0092                     	;# 
   253  0093                     	;# 
   254  0093                     	;# 
   255  0093                     	;# 
   256  0094                     	;# 
   257  0095                     	;# 
   258  0096                     	;# 
   259  0097                     	;# 
   260  0098                     	;# 
   261  0099                     	;# 
   262  009A                     	;# 
   263  009B                     	;# 
   264  009C                     	;# 
   265  009D                     	;# 
   266  009E                     	;# 
   267  009F                     	;# 
   268  0105                     	;# 
   269  0107                     	;# 
   270  0108                     	;# 
   271  0109                     	;# 
   272  010C                     	;# 
   273  010C                     	;# 
   274  010D                     	;# 
   275  010E                     	;# 
   276  010F                     	;# 
   277  0185                     	;# 
   278  0187                     	;# 
   279  0188                     	;# 
   280  0189                     	;# 
   281  018C                     	;# 
   282  018D                     	;# 
   283  0013                     _SSPBUF	set	19
   284  0014                     _SSPCON	set	20
   285  000C                     _PIR1bits	set	12
   286  000B                     _INTCONbits	set	11
   287  0008                     _PORTD	set	8
   288  0006                     _PORTB	set	6
   289  0008                     _PORTDbits	set	8
   290  0094                     _SSPSTATbits	set	148
   291  0094                     _SSPSTAT	set	148
   292  0085                     _TRISAbits	set	133
   293  008C                     _PIE1bits	set	140
   294  0088                     _TRISD	set	136
   295  0086                     _TRISB	set	134
   296  0085                     _TRISA	set	133
   297  0088                     _TRISDbits	set	136
   298  008F                     _OSCCONbits	set	143
   299  043B                     _TRISC3	set	1083
   300  043C                     _TRISC4	set	1084
   301  043D                     _TRISC5	set	1085
   302  0189                     _ANSELH	set	393
   303  0188                     _ANSEL	set	392
   304                           
   305                           ; #config settings
   306  0000                     
   307                           	psect	cinit
   308  07FA                     start_initialization:	
   309  07FA                     __initialization:	
   310                           
   311                           ; Clear objects allocated to COMMON
   312  07FA  01F6               	clrf	__pbssCOMMON& (0+127)
   313  07FB  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
   314  07FC                     end_of_initialization:	
   315                           ;End of C runtime variable initialization code
   316                           
   317  07FC                     __end_of__initialization:	
   318  07FC  0183               	clrf	3
   319  07FD  120A  118A  2FA7   	ljmp	_main	;jump to C main() function
   320                           
   321                           	psect	bssCOMMON
   322  0076                     __pbssCOMMON:	
   323  0076                     _pot2:	
   324  0076                     	ds	1
   325  0077                     _pot1:	
   326  0077                     	ds	1
   327                           
   328                           	psect	cstackCOMMON
   329  0070                     __pcstackCOMMON:	
   330  0070                     ?_setup:	
   331  0070                     ?_spiWrite:	
   332                           ; 1 bytes @ 0x0
   333                           
   334  0070                     ??_spiWrite:	
   335                           ; 1 bytes @ 0x0
   336                           
   337  0070                     ?_spiRead:	
   338                           ; 1 bytes @ 0x0
   339                           
   340  0070                     ??_spiRead:	
   341                           ; 1 bytes @ 0x0
   342                           
   343  0070                     ?_spiInit:	
   344                           ; 1 bytes @ 0x0
   345                           
   346  0070                     ?_main:	
   347                           ; 1 bytes @ 0x0
   348                           
   349  0070                     ?_spiReceiveWait:	
   350                           ; 1 bytes @ 0x0
   351                           
   352  0070                     ??_spiReceiveWait:	
   353                           ; 1 bytes @ 0x0
   354                           
   355  0070                     spiInit@sDataSample:	
   356                           ; 1 bytes @ 0x0
   357                           
   358  0070                     spiWrite@dat:	
   359                           ; 1 bytes @ 0x0
   360                           
   361                           
   362                           ; 1 bytes @ 0x0
   363  0070                     	ds	1
   364  0071                     spiInit@sClockIdle:	
   365                           
   366                           ; 1 bytes @ 0x1
   367  0071                     	ds	1
   368  0072                     spiInit@sTransmitEdge:	
   369                           
   370                           ; 1 bytes @ 0x2
   371  0072                     	ds	1
   372  0073                     ??_spiInit:	
   373  0073                     spiInit@sType:	
   374                           ; 1 bytes @ 0x3
   375                           
   376                           
   377                           ; 1 bytes @ 0x3
   378  0073                     	ds	1
   379  0074                     ??_setup:	
   380  0074                     ??_main:	
   381                           ; 1 bytes @ 0x4
   382                           
   383                           
   384                           ; 1 bytes @ 0x4
   385  0074                     	ds	2
   386                           
   387                           	psect	maintext
   388  07A7                     __pmaintext:	
   389 ;;
   390 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   391 ;;
   392 ;; *************** function _main *****************
   393 ;; Defined at:
   394 ;;		line 48 in file "Lab4_Master.c"
   395 ;; Parameters:    Size  Location     Type
   396 ;;		None
   397 ;; Auto vars:     Size  Location     Type
   398 ;;		None
   399 ;; Return value:  Size  Location     Type
   400 ;;                  1    wreg      void 
   401 ;; Registers used:
   402 ;;		wreg, status,2, status,0, pclath, cstack
   403 ;; Tracked objects:
   404 ;;		On entry : B00/0
   405 ;;		On exit  : 0/0
   406 ;;		Unchanged: 0/0
   407 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   408 ;;      Params:         0       0       0       0       0
   409 ;;      Locals:         0       0       0       0       0
   410 ;;      Temps:          2       0       0       0       0
   411 ;;      Totals:         2       0       0       0       0
   412 ;;Total ram usage:        2 bytes
   413 ;; Hardware stack levels required when called:    2
   414 ;; This function calls:
   415 ;;		_setup
   416 ;;		_spiRead
   417 ;;		_spiWrite
   418 ;; This function is called by:
   419 ;;		Startup code after reset
   420 ;; This function uses a non-reentrant model
   421 ;;
   422                           
   423                           
   424                           ;psect for function _main
   425  07A7                     _main:	
   426  07A7                     l821:	
   427                           ;incstack = 0
   428                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   429                           
   430                           
   431                           ;Lab4_Master.c: 49:     setup();
   432  07A7  120A  118A  277F  120A  118A  	fcall	_setup
   433  07AC                     l823:	
   434                           
   435                           ;Lab4_Master.c: 51:         PORTDbits.RD1 = 0;
   436  07AC  1283               	bcf	3,5	;RP0=0, select bank0
   437  07AD  1303               	bcf	3,6	;RP1=0, select bank0
   438  07AE  1088               	bcf	8,1	;volatile
   439  07AF                     l825:	
   440                           
   441                           ;Lab4_Master.c: 52:         _delay((unsigned long)((15)*(8000000/4000.0)));
   442  07AF  3027               	movlw	39
   443  07B0  00F5               	movwf	??_main+1
   444  07B1  30F5               	movlw	245
   445  07B2  00F4               	movwf	??_main
   446  07B3                     u47:	
   447  07B3  0BF4               	decfsz	??_main,f
   448  07B4  2FB3               	goto	u47
   449  07B5  0BF5               	decfsz	??_main+1,f
   450  07B6  2FB3               	goto	u47
   451  07B7                     l827:	
   452                           
   453                           ;Lab4_Master.c: 53:         spiWrite(1);
   454  07B7  3001               	movlw	1
   455  07B8  120A  118A  2752  120A  118A  	fcall	_spiWrite
   456  07BD                     l829:	
   457                           
   458                           ;Lab4_Master.c: 54:         pot1 = spiRead();
   459  07BD  120A  118A  275F  120A  118A  	fcall	_spiRead
   460  07C2  00F4               	movwf	??_main
   461  07C3  0874               	movf	??_main,w
   462  07C4  00F7               	movwf	_pot1
   463  07C5                     l831:	
   464                           
   465                           ;Lab4_Master.c: 55:         PORTB = pot1;
   466  07C5  0877               	movf	_pot1,w
   467  07C6  1283               	bcf	3,5	;RP0=0, select bank0
   468  07C7  1303               	bcf	3,6	;RP1=0, select bank0
   469  07C8  0086               	movwf	6	;volatile
   470  07C9                     l833:	
   471                           
   472                           ;Lab4_Master.c: 56:         _delay((unsigned long)((15)*(8000000/4000.0)));
   473  07C9  3027               	movlw	39
   474  07CA  00F5               	movwf	??_main+1
   475  07CB  30F5               	movlw	245
   476  07CC  00F4               	movwf	??_main
   477  07CD                     u57:	
   478  07CD  0BF4               	decfsz	??_main,f
   479  07CE  2FCD               	goto	u57
   480  07CF  0BF5               	decfsz	??_main+1,f
   481  07D0  2FCD               	goto	u57
   482  07D1                     l835:	
   483                           
   484                           ;Lab4_Master.c: 57:         PORTDbits.RD1 =1;
   485  07D1  1283               	bcf	3,5	;RP0=0, select bank0
   486  07D2  1303               	bcf	3,6	;RP1=0, select bank0
   487  07D3  1488               	bsf	8,1	;volatile
   488  07D4                     l837:	
   489                           
   490                           ;Lab4_Master.c: 59:         PORTDbits.RD1=0;
   491  07D4  1088               	bcf	8,1	;volatile
   492  07D5                     l839:	
   493                           
   494                           ;Lab4_Master.c: 60:        _delay((unsigned long)((15)*(8000000/4000.0)));
   495  07D5  3027               	movlw	39
   496  07D6  00F5               	movwf	??_main+1
   497  07D7  30F5               	movlw	245
   498  07D8  00F4               	movwf	??_main
   499  07D9                     u67:	
   500  07D9  0BF4               	decfsz	??_main,f
   501  07DA  2FD9               	goto	u67
   502  07DB  0BF5               	decfsz	??_main+1,f
   503  07DC  2FD9               	goto	u67
   504                           
   505                           ;Lab4_Master.c: 61:         spiWrite(2);
   506  07DD  3002               	movlw	2
   507  07DE  120A  118A  2752  120A  118A  	fcall	_spiWrite
   508                           
   509                           ;Lab4_Master.c: 62:         pot2 = spiRead();
   510  07E3  120A  118A  275F  120A  118A  	fcall	_spiRead
   511  07E8  00F4               	movwf	??_main
   512  07E9  0874               	movf	??_main,w
   513  07EA  00F6               	movwf	_pot2
   514  07EB                     l841:	
   515                           
   516                           ;Lab4_Master.c: 63:         _delay((unsigned long)((15)*(8000000/4000.0)));
   517  07EB  3027               	movlw	39
   518  07EC  00F5               	movwf	??_main+1
   519  07ED  30F5               	movlw	245
   520  07EE  00F4               	movwf	??_main
   521  07EF                     u77:	
   522  07EF  0BF4               	decfsz	??_main,f
   523  07F0  2FEF               	goto	u77
   524  07F1  0BF5               	decfsz	??_main+1,f
   525  07F2  2FEF               	goto	u77
   526  07F3                     l843:	
   527                           
   528                           ;Lab4_Master.c: 64:         PORTDbits.RD1 =1;
   529  07F3  1283               	bcf	3,5	;RP0=0, select bank0
   530  07F4  1303               	bcf	3,6	;RP1=0, select bank0
   531  07F5  1488               	bsf	8,1	;volatile
   532  07F6  2FAC               	goto	l823
   533  07F7  120A  118A  2800   	ljmp	start
   534  07FA                     __end_of_main:	
   535                           
   536                           	psect	text1
   537  0752                     __ptext1:	
   538 ;; *************** function _spiWrite *****************
   539 ;; Defined at:
   540 ;;		line 36 in file "SPI_MASTER.c"
   541 ;; Parameters:    Size  Location     Type
   542 ;;  dat             1    wreg     unsigned char 
   543 ;; Auto vars:     Size  Location     Type
   544 ;;  dat             1    0[COMMON] unsigned char 
   545 ;; Return value:  Size  Location     Type
   546 ;;                  1    wreg      void 
   547 ;; Registers used:
   548 ;;		wreg
   549 ;; Tracked objects:
   550 ;;		On entry : 0/0
   551 ;;		On exit  : 0/0
   552 ;;		Unchanged: 0/0
   553 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   554 ;;      Params:         0       0       0       0       0
   555 ;;      Locals:         1       0       0       0       0
   556 ;;      Temps:          0       0       0       0       0
   557 ;;      Totals:         1       0       0       0       0
   558 ;;Total ram usage:        1 bytes
   559 ;; Hardware stack levels used:    1
   560 ;; This function calls:
   561 ;;		Nothing
   562 ;; This function is called by:
   563 ;;		_main
   564 ;; This function uses a non-reentrant model
   565 ;;
   566                           
   567                           
   568                           ;psect for function _spiWrite
   569  0752                     _spiWrite:	
   570                           
   571                           ;incstack = 0
   572                           ; Regs used in _spiWrite: [wreg]
   573                           ;spiWrite@dat stored from wreg
   574  0752  00F0               	movwf	spiWrite@dat
   575  0753                     l733:	
   576                           
   577                           ;SPI_MASTER.c: 36: void spiWrite(char dat);SPI_MASTER.c: 37: {;SPI_MASTER.c: 38:     SSP
      +                          BUF = dat;
   578  0753  0870               	movf	spiWrite@dat,w
   579  0754  1283               	bcf	3,5	;RP0=0, select bank0
   580  0755  1303               	bcf	3,6	;RP1=0, select bank0
   581  0756  0093               	movwf	19	;volatile
   582  0757                     l81:	
   583  0757  0008               	return
   584  0758                     __end_of_spiWrite:	
   585                           
   586                           	psect	text2
   587  075F                     __ptext2:	
   588 ;; *************** function _spiRead *****************
   589 ;; Defined at:
   590 ;;		line 49 in file "SPI_MASTER.c"
   591 ;; Parameters:    Size  Location     Type
   592 ;;		None
   593 ;; Auto vars:     Size  Location     Type
   594 ;;		None
   595 ;; Return value:  Size  Location     Type
   596 ;;                  1    wreg      unsigned char 
   597 ;; Registers used:
   598 ;;		wreg, status,2, status,0, pclath, cstack
   599 ;; Tracked objects:
   600 ;;		On entry : 0/0
   601 ;;		On exit  : 0/0
   602 ;;		Unchanged: 0/0
   603 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   604 ;;      Params:         0       0       0       0       0
   605 ;;      Locals:         0       0       0       0       0
   606 ;;      Temps:          0       0       0       0       0
   607 ;;      Totals:         0       0       0       0       0
   608 ;;Total ram usage:        0 bytes
   609 ;; Hardware stack levels used:    1
   610 ;; Hardware stack levels required when called:    1
   611 ;; This function calls:
   612 ;;		_spiReceiveWait
   613 ;; This function is called by:
   614 ;;		_main
   615 ;; This function uses a non-reentrant model
   616 ;;
   617                           
   618                           
   619                           ;psect for function _spiRead
   620  075F                     _spiRead:	
   621  075F                     l735:	
   622                           ;incstack = 0
   623                           ; Regs used in _spiRead: [wreg+status,2+status,0+pclath+cstack]
   624                           
   625                           
   626                           ;SPI_MASTER.c: 51:     spiReceiveWait();
   627  075F  120A  118A  2758  120A  118A  	fcall	_spiReceiveWait
   628  0764                     l737:	
   629                           
   630                           ;SPI_MASTER.c: 52:     return(SSPBUF);
   631  0764  1283               	bcf	3,5	;RP0=0, select bank0
   632  0765  1303               	bcf	3,6	;RP1=0, select bank0
   633  0766  0813               	movf	19,w	;volatile
   634  0767                     l89:	
   635  0767  0008               	return
   636  0768                     __end_of_spiRead:	
   637                           
   638                           	psect	text3
   639  0758                     __ptext3:	
   640 ;; *************** function _spiReceiveWait *****************
   641 ;; Defined at:
   642 ;;		line 31 in file "SPI_MASTER.c"
   643 ;; Parameters:    Size  Location     Type
   644 ;;		None
   645 ;; Auto vars:     Size  Location     Type
   646 ;;		None
   647 ;; Return value:  Size  Location     Type
   648 ;;                  1    wreg      void 
   649 ;; Registers used:
   650 ;;		None
   651 ;; Tracked objects:
   652 ;;		On entry : 0/0
   653 ;;		On exit  : 0/0
   654 ;;		Unchanged: 0/0
   655 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   656 ;;      Params:         0       0       0       0       0
   657 ;;      Locals:         0       0       0       0       0
   658 ;;      Temps:          0       0       0       0       0
   659 ;;      Totals:         0       0       0       0       0
   660 ;;Total ram usage:        0 bytes
   661 ;; Hardware stack levels used:    1
   662 ;; This function calls:
   663 ;;		Nothing
   664 ;; This function is called by:
   665 ;;		_spiRead
   666 ;; This function uses a non-reentrant model
   667 ;;
   668                           
   669                           
   670                           ;psect for function _spiReceiveWait
   671  0758                     _spiReceiveWait:	
   672  0758                     l691:	
   673                           ;incstack = 0
   674                           ; Regs used in _spiReceiveWait: []
   675                           
   676  0758                     l75:	
   677                           ;SPI_MASTER.c: 33:     while ( !SSPSTATbits.BF );
   678                           
   679  0758  1683               	bsf	3,5	;RP0=1, select bank1
   680  0759  1303               	bcf	3,6	;RP1=0, select bank1
   681  075A  1C14               	btfss	20,0	;volatile
   682  075B  2F5D               	goto	u21
   683  075C  2F5E               	goto	u20
   684  075D                     u21:	
   685  075D  2F58               	goto	l75
   686  075E                     u20:	
   687  075E                     l78:	
   688  075E  0008               	return
   689  075F                     __end_of_spiReceiveWait:	
   690                           
   691                           	psect	text4
   692  077F                     __ptext4:	
   693 ;; *************** function _setup *****************
   694 ;; Defined at:
   695 ;;		line 68 in file "Lab4_Master.c"
   696 ;; Parameters:    Size  Location     Type
   697 ;;		None
   698 ;; Auto vars:     Size  Location     Type
   699 ;;		None
   700 ;; Return value:  Size  Location     Type
   701 ;;                  1    wreg      void 
   702 ;; Registers used:
   703 ;;		wreg, status,2, status,0, pclath, cstack
   704 ;; Tracked objects:
   705 ;;		On entry : 0/0
   706 ;;		On exit  : 0/0
   707 ;;		Unchanged: 0/0
   708 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   709 ;;      Params:         0       0       0       0       0
   710 ;;      Locals:         0       0       0       0       0
   711 ;;      Temps:          0       0       0       0       0
   712 ;;      Totals:         0       0       0       0       0
   713 ;;Total ram usage:        0 bytes
   714 ;; Hardware stack levels used:    1
   715 ;; Hardware stack levels required when called:    1
   716 ;; This function calls:
   717 ;;		_spiInit
   718 ;; This function is called by:
   719 ;;		_main
   720 ;; This function uses a non-reentrant model
   721 ;;
   722                           
   723                           
   724                           ;psect for function _setup
   725  077F                     _setup:	
   726  077F                     l781:	
   727                           ;incstack = 0
   728                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
   729                           
   730                           
   731                           ;Lab4_Master.c: 69:     OSCCONbits.IRCF = 0b111;
   732  077F  3070               	movlw	112
   733  0780  1683               	bsf	3,5	;RP0=1, select bank1
   734  0781  1303               	bcf	3,6	;RP1=0, select bank1
   735  0782  048F               	iorwf	15,f	;volatile
   736  0783                     l783:	
   737                           
   738                           ;Lab4_Master.c: 70:     OSCCONbits.OSTS= 0;
   739  0783  118F               	bcf	15,3	;volatile
   740  0784                     l785:	
   741                           
   742                           ;Lab4_Master.c: 71:     OSCCONbits.HTS = 0;
   743  0784  110F               	bcf	15,2	;volatile
   744  0785                     l787:	
   745                           
   746                           ;Lab4_Master.c: 72:     OSCCONbits.LTS = 0;
   747  0785  108F               	bcf	15,1	;volatile
   748  0786                     l789:	
   749                           
   750                           ;Lab4_Master.c: 73:     OSCCONbits.SCS = 1;
   751  0786  140F               	bsf	15,0	;volatile
   752  0787                     l791:	
   753                           
   754                           ;Lab4_Master.c: 74:     ANSEL = 0;
   755  0787  1683               	bsf	3,5	;RP0=1, select bank3
   756  0788  1703               	bsf	3,6	;RP1=1, select bank3
   757  0789  0188               	clrf	8	;volatile
   758  078A                     l793:	
   759                           
   760                           ;Lab4_Master.c: 75:     ANSELH = 0;
   761  078A  0189               	clrf	9	;volatile
   762  078B                     l795:	
   763                           
   764                           ;Lab4_Master.c: 76:     TRISDbits.TRISD1 = 0;
   765  078B  1683               	bsf	3,5	;RP0=1, select bank1
   766  078C  1303               	bcf	3,6	;RP1=0, select bank1
   767  078D  1088               	bcf	8,1	;volatile
   768  078E                     l797:	
   769                           
   770                           ;Lab4_Master.c: 77:     TRISDbits.TRISD2 = 0;
   771  078E  1108               	bcf	8,2	;volatile
   772  078F                     l799:	
   773                           
   774                           ;Lab4_Master.c: 78:     TRISA = 0;
   775  078F  0185               	clrf	5	;volatile
   776  0790                     l801:	
   777                           
   778                           ;Lab4_Master.c: 79:     TRISB = 0;
   779  0790  0186               	clrf	6	;volatile
   780  0791                     l803:	
   781                           
   782                           ;Lab4_Master.c: 81:     TRISD = 0;
   783  0791  0188               	clrf	8	;volatile
   784  0792                     l805:	
   785                           
   786                           ;Lab4_Master.c: 83:     PORTB = 0;
   787  0792  1283               	bcf	3,5	;RP0=0, select bank0
   788  0793  1303               	bcf	3,6	;RP1=0, select bank0
   789  0794  0186               	clrf	6	;volatile
   790  0795                     l807:	
   791                           
   792                           ;Lab4_Master.c: 84:     PORTD = 0;
   793  0795  0188               	clrf	8	;volatile
   794  0796                     l809:	
   795                           
   796                           ;Lab4_Master.c: 86:     INTCONbits.GIE = 1;
   797  0796  178B               	bsf	11,7	;volatile
   798  0797                     l811:	
   799                           
   800                           ;Lab4_Master.c: 87:     INTCONbits.PEIE = 1;
   801  0797  170B               	bsf	11,6	;volatile
   802  0798                     l813:	
   803                           
   804                           ;Lab4_Master.c: 88:     PIR1bits.SSPIF = 0;
   805  0798  118C               	bcf	12,3	;volatile
   806  0799                     l815:	
   807                           
   808                           ;Lab4_Master.c: 89:     PIE1bits.SSPIE = 1;
   809  0799  1683               	bsf	3,5	;RP0=1, select bank1
   810  079A  1303               	bcf	3,6	;RP1=0, select bank1
   811  079B  158C               	bsf	12,3	;volatile
   812  079C                     l817:	
   813                           
   814                           ;Lab4_Master.c: 90:     TRISAbits.TRISA5 = 1;
   815  079C  1685               	bsf	5,5	;volatile
   816  079D                     l819:	
   817                           
   818                           ;Lab4_Master.c: 91:     spiInit(SPI_MASTER_OSC_DIV4, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_I
      +                          DLE_LOW, SPI_IDLE_2_ACTIVE);
   819  079D  01F0               	clrf	spiInit@sDataSample
   820  079E  01F1               	clrf	spiInit@sClockIdle
   821  079F  01F2               	clrf	spiInit@sTransmitEdge
   822  07A0  3020               	movlw	32
   823  07A1  120A  118A  2768  120A  118A  	fcall	_spiInit
   824  07A6                     l53:	
   825  07A6  0008               	return
   826  07A7                     __end_of_setup:	
   827                           
   828                           	psect	text5
   829  0768                     __ptext5:	
   830 ;; *************** function _spiInit *****************
   831 ;; Defined at:
   832 ;;		line 12 in file "SPI_MASTER.c"
   833 ;; Parameters:    Size  Location     Type
   834 ;;  sType           1    wreg     enum E1264
   835 ;;  sDataSample     1    0[COMMON] enum E1272
   836 ;;  sClockIdle      1    1[COMMON] enum E1276
   837 ;;  sTransmitEdg    1    2[COMMON] enum E1280
   838 ;; Auto vars:     Size  Location     Type
   839 ;;  sType           1    3[COMMON] enum E1264
   840 ;; Return value:  Size  Location     Type
   841 ;;                  1    wreg      void 
   842 ;; Registers used:
   843 ;;		wreg, status,2, status,0
   844 ;; Tracked objects:
   845 ;;		On entry : 0/0
   846 ;;		On exit  : 0/0
   847 ;;		Unchanged: 0/0
   848 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   849 ;;      Params:         3       0       0       0       0
   850 ;;      Locals:         1       0       0       0       0
   851 ;;      Temps:          0       0       0       0       0
   852 ;;      Totals:         4       0       0       0       0
   853 ;;Total ram usage:        4 bytes
   854 ;; Hardware stack levels used:    1
   855 ;; This function calls:
   856 ;;		Nothing
   857 ;; This function is called by:
   858 ;;		_setup
   859 ;; This function uses a non-reentrant model
   860 ;;
   861                           
   862                           
   863                           ;psect for function _spiInit
   864  0768                     _spiInit:	
   865                           
   866                           ;incstack = 0
   867                           ; Regs used in _spiInit: [wreg+status,2+status,0]
   868                           ;spiInit@sType stored from wreg
   869  0768  00F3               	movwf	spiInit@sType
   870  0769                     l771:	
   871                           
   872                           ;SPI_MASTER.c: 12: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_I
      +                          dle sClockIdle, Spi_Transmit_Edge sTransmitEdge);SPI_MASTER.c: 13: {;SPI_MASTER.c: 14:  
      +                             TRISC5 = 0;
   873  0769  1683               	bsf	3,5	;RP0=1, select bank1
   874  076A  1303               	bcf	3,6	;RP1=0, select bank1
   875  076B  1287               	bcf	7,5	;volatile
   876                           
   877                           ;SPI_MASTER.c: 15:     TRISC4 = 1;
   878  076C  1607               	bsf	7,4	;volatile
   879                           
   880                           ;SPI_MASTER.c: 17:     if(sType & 0b00000100)
   881  076D  1D73               	btfss	spiInit@sType,2
   882  076E  2F70               	goto	u31
   883  076F  2F71               	goto	u30
   884  0770                     u31:	
   885  0770  2F75               	goto	l777
   886  0771                     u30:	
   887  0771                     l773:	
   888                           
   889                           ;SPI_MASTER.c: 18:     {;SPI_MASTER.c: 19:         SSPSTAT = sTransmitEdge;
   890  0771  0872               	movf	spiInit@sTransmitEdge,w
   891  0772  0094               	movwf	20	;volatile
   892  0773                     l775:	
   893                           
   894                           ;SPI_MASTER.c: 20:         TRISC3 = 1;
   895  0773  1587               	bsf	7,3	;volatile
   896                           
   897                           ;SPI_MASTER.c: 21:     }
   898  0774  2F79               	goto	l71
   899  0775                     l777:	
   900                           
   901                           ;SPI_MASTER.c: 23:     {;SPI_MASTER.c: 24:         SSPSTAT = sDataSample | sTransmitEdge
      +                          ;
   902  0775  0870               	movf	spiInit@sDataSample,w
   903  0776  0472               	iorwf	spiInit@sTransmitEdge,w
   904  0777  0094               	movwf	20	;volatile
   905  0778                     l779:	
   906                           
   907                           ;SPI_MASTER.c: 25:         TRISC3 = 0;
   908  0778  1187               	bcf	7,3	;volatile
   909  0779                     l71:	
   910                           ;SPI_MASTER.c: 26:     }
   911                           
   912                           
   913                           ;SPI_MASTER.c: 28:     SSPCON = sType | sClockIdle;
   914  0779  0873               	movf	spiInit@sType,w
   915  077A  0471               	iorwf	spiInit@sClockIdle,w
   916  077B  1283               	bcf	3,5	;RP0=0, select bank0
   917  077C  1303               	bcf	3,6	;RP1=0, select bank0
   918  077D  0094               	movwf	20	;volatile
   919  077E                     l72:	
   920  077E  0008               	return
   921  077F                     __end_of_spiInit:	
   922  007E                     btemp	set	126	;btemp
   923  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6       8
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _setup->_spiInit

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     375
                                              4 COMMON     2     2      0
                              _setup
                            _spiRead
                           _spiWrite
 ---------------------------------------------------------------------------------
 (1) _spiWrite                                             1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (2) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     360
                            _spiInit
 ---------------------------------------------------------------------------------
 (2) _spiInit                                              4     1      3     360
                                              0 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _setup
     _spiInit
   _spiRead
     _spiReceiveWait
   _spiWrite

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      6       8       1       57.1%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       8       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       8      12        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Thu Feb 20 23:16:22 2020

             __CFG_CP$OFF 0000               _SSPSTATbits 0094                        l53 07A6  
                      l71 0779                        l72 077E                        l81 0757  
                      l75 0758                        l78 075E                        l89 0767  
                      u20 075E                        u21 075D                        u30 0771  
                      u31 0770                        u47 07B3                        u57 07CD  
                      u67 07D9                        u77 07EF                       l801 0790  
                     l811 0797                       l803 0791                       l813 0798  
                     l805 0792                       l733 0753                       l821 07A7  
                     l815 0799                       l807 0795                       l735 075F  
                     l831 07C5                       l823 07AC                       l817 079C  
                     l809 0796                       l737 0764                       l841 07EB  
                     l833 07C9                       l825 07AF                       l771 0769  
                     l819 079D                       l691 0758                       l843 07F3  
                     l835 07D1                       l827 07B7                       l773 0771  
                     l781 077F                       l837 07D4                       l829 07BD  
                     l775 0773                       l791 0787                       l783 0783  
                     l839 07D5                       l777 0775                       l793 078A  
                     l785 0784                       l779 0778                       l795 078B  
                     l787 0785                       l797 078E                       l789 0786  
                     l799 078F              __CFG_CPD$OFF 0000              __CFG_LVP$OFF 0000  
            __CFG_WRT$OFF 0000                      _main 07A7                      _pot1 0077  
                    _pot2 0076                      btemp 007E                      start 0000  
           __CFG_IESO$OFF 0000                     ?_main 0070             __CFG_WDTE$OFF 0000  
                   _ANSEL 0188                     _PORTB 0006                     _PORTD 0008  
                   _TRISA 0085                     _TRISB 0086                     _TRISD 0088  
          __CFG_FCMEN$OFF 0000                     _setup 077F            __CFG_BOREN$OFF 0000  
         __end_of_spiInit 077F           __end_of_spiRead 0768                     status 0003  
                   wtemp0 007E            __CFG_MCLRE$OFF 0000           __initialization 07FA  
            __end_of_main 07FA                    ??_main 0074                    ?_setup 0070  
                  _ANSELH 0189                    _TRISC3 043B                    _TRISC4 043C  
                  _TRISC5 043D                    _SSPCON 0014                    _SSPBUF 0013  
          __CFG_PWRTE$OFF 0000          __end_of_spiWrite 0758                 ??_spiInit 0073  
               ??_spiRead 0070   __end_of__initialization 07FC            __pcstackCOMMON 0070  
           __end_of_setup 07A7                   ??_setup 0074                __pmaintext 07A7  
 __size_of_spiReceiveWait 0007                   _SSPSTAT 0094                 ?_spiWrite 0070  
                 __ptext1 0752                   __ptext2 075F                   __ptext3 0758  
                 __ptext4 077F                   __ptext5 0768                   _spiInit 0768  
                 _spiRead 075F      end_of_initialization 07FC                ??_spiWrite 0070  
               _PORTDbits 0008                 _TRISAbits 0085                 _TRISDbits 0088  
             spiWrite@dat 0070            _spiReceiveWait 0758       start_initialization 07FA  
__CFG_FOSC$INTRC_NOCLKOUT 0000    __end_of_spiReceiveWait 075F               __pbssCOMMON 0076  
               ___latbits 0002           ?_spiReceiveWait 0070         __size_of_spiWrite 0006  
                ?_spiInit 0070                  ?_spiRead 0070            __size_of_setup 0028  
    spiInit@sTransmitEdge 0072                  _PIE1bits 008C        spiInit@sDataSample 0070  
                _PIR1bits 000C          __size_of_spiInit 0017          __size_of_spiRead 0009  
       __CFG_BOR4V$BOR40V 0000             __size_of_main 0053                  _spiWrite 0752  
            spiInit@sType 0073         spiInit@sClockIdle 0071                _INTCONbits 000B  
        ??_spiReceiveWait 0070                _OSCCONbits 008F  
